"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[9762],{"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))},"./src/stories/components/shadcn/menubar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ApplicationMenubar:()=>ApplicationMenubar,Default:()=>Default,WithCheckboxItems:()=>WithCheckboxItems,WithRadioGroups:()=>WithRadioGroups,__namedExportsOrder:()=>__namedExportsOrder,default:()=>menubar_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/react-collection/dist/index.mjs"),react_direction_dist=__webpack_require__("./node_modules/@radix-ui/react-direction/dist/index.mjs"),primitive_dist=__webpack_require__("./node_modules/@radix-ui/primitive/dist/index.mjs"),react_compose_refs_dist=__webpack_require__("./node_modules/@radix-ui/react-compose-refs/dist/index.mjs"),react_context_dist=__webpack_require__("./node_modules/@radix-ui/react-context/dist/index.mjs"),react_id_dist=__webpack_require__("./node_modules/@radix-ui/react-id/dist/index.mjs"),react_menu_dist=__webpack_require__("./node_modules/@radix-ui/react-menu/dist/index.mjs"),react_roving_focus_dist=__webpack_require__("./node_modules/@radix-ui/react-roving-focus/dist/index.mjs"),react_primitive_dist=__webpack_require__("./node_modules/@radix-ui/react-primitive/dist/index.mjs"),react_use_controllable_state_dist=__webpack_require__("./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),[Collection,useCollection,createCollectionScope]=(0,dist.N)("Menubar"),[createMenubarContext,createMenubarScope]=(0,react_context_dist.A)("Menubar",[createCollectionScope,react_roving_focus_dist.RG]),useMenuScope=(0,react_menu_dist.UE)(),useRovingFocusGroupScope=(0,react_roving_focus_dist.RG)(),[MenubarContextProvider,useMenubarContext]=createMenubarContext("Menubar"),Menubar=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,value:valueProp,onValueChange,defaultValue,loop=!0,dir,...menubarProps}=props,direction=(0,react_direction_dist.jH)(dir),rovingFocusGroupScope=useRovingFocusGroupScope(__scopeMenubar),[value="",setValue]=(0,react_use_controllable_state_dist.i)({prop:valueProp,onChange:onValueChange,defaultProp:defaultValue}),[currentTabStopId,setCurrentTabStopId]=react.useState(null);return(0,jsx_runtime.jsx)(MenubarContextProvider,{scope:__scopeMenubar,value,onMenuOpen:react.useCallback((value2=>{setValue(value2),setCurrentTabStopId(value2)}),[setValue]),onMenuClose:react.useCallback((()=>setValue("")),[setValue]),onMenuToggle:react.useCallback((value2=>{setValue((prevValue=>prevValue?"":value2)),setCurrentTabStopId(value2)}),[setValue]),dir:direction,loop,children:(0,jsx_runtime.jsx)(Collection.Provider,{scope:__scopeMenubar,children:(0,jsx_runtime.jsx)(Collection.Slot,{scope:__scopeMenubar,children:(0,jsx_runtime.jsx)(react_roving_focus_dist.bL,{asChild:!0,...rovingFocusGroupScope,orientation:"horizontal",loop,dir:direction,currentTabStopId,onCurrentTabStopIdChange:setCurrentTabStopId,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.div,{role:"menubar",...menubarProps,ref:forwardedRef})})})})})}));Menubar.displayName="Menubar";var[MenubarMenuProvider,useMenubarMenuContext]=createMenubarContext("MenubarMenu"),MenubarMenu=props=>{const{__scopeMenubar,value:valueProp,...menuProps}=props,autoValue=(0,react_id_dist.B)(),value=valueProp||autoValue||"LEGACY_REACT_AUTO_VALUE",context=useMenubarContext("MenubarMenu",__scopeMenubar),menuScope=useMenuScope(__scopeMenubar),triggerRef=react.useRef(null),wasKeyboardTriggerOpenRef=react.useRef(!1),open=context.value===value;return react.useEffect((()=>{open||(wasKeyboardTriggerOpenRef.current=!1)}),[open]),(0,jsx_runtime.jsx)(MenubarMenuProvider,{scope:__scopeMenubar,value,triggerId:(0,react_id_dist.B)(),triggerRef,contentId:(0,react_id_dist.B)(),wasKeyboardTriggerOpenRef,children:(0,jsx_runtime.jsx)(react_menu_dist.bL,{...menuScope,open,onOpenChange:open2=>{open2||context.onMenuClose()},modal:!1,dir:context.dir,...menuProps})})};MenubarMenu.displayName="MenubarMenu";var MenubarTrigger=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,disabled=!1,...triggerProps}=props,rovingFocusGroupScope=useRovingFocusGroupScope(__scopeMenubar),menuScope=useMenuScope(__scopeMenubar),context=useMenubarContext("MenubarTrigger",__scopeMenubar),menuContext=useMenubarMenuContext("MenubarTrigger",__scopeMenubar),ref=react.useRef(null),composedRefs=(0,react_compose_refs_dist.s)(forwardedRef,ref,menuContext.triggerRef),[isFocused,setIsFocused]=react.useState(!1),open=context.value===menuContext.value;return(0,jsx_runtime.jsx)(Collection.ItemSlot,{scope:__scopeMenubar,value:menuContext.value,disabled,children:(0,jsx_runtime.jsx)(react_roving_focus_dist.q7,{asChild:!0,...rovingFocusGroupScope,focusable:!disabled,tabStopId:menuContext.value,children:(0,jsx_runtime.jsx)(react_menu_dist.Mz,{asChild:!0,...menuScope,children:(0,jsx_runtime.jsx)(react_primitive_dist.sG.button,{type:"button",role:"menuitem",id:menuContext.triggerId,"aria-haspopup":"menu","aria-expanded":open,"aria-controls":open?menuContext.contentId:void 0,"data-highlighted":isFocused?"":void 0,"data-state":open?"open":"closed","data-disabled":disabled?"":void 0,disabled,...triggerProps,ref:composedRefs,onPointerDown:(0,primitive_dist.m)(props.onPointerDown,(event=>{disabled||0!==event.button||!1!==event.ctrlKey||(context.onMenuOpen(menuContext.value),open||event.preventDefault())})),onPointerEnter:(0,primitive_dist.m)(props.onPointerEnter,(()=>{Boolean(context.value)&&!open&&(context.onMenuOpen(menuContext.value),ref.current?.focus())})),onKeyDown:(0,primitive_dist.m)(props.onKeyDown,(event=>{disabled||(["Enter"," "].includes(event.key)&&context.onMenuToggle(menuContext.value),"ArrowDown"===event.key&&context.onMenuOpen(menuContext.value),["Enter"," ","ArrowDown"].includes(event.key)&&(menuContext.wasKeyboardTriggerOpenRef.current=!0,event.preventDefault()))})),onFocus:(0,primitive_dist.m)(props.onFocus,(()=>setIsFocused(!0))),onBlur:(0,primitive_dist.m)(props.onBlur,(()=>setIsFocused(!1)))})})})})}));MenubarTrigger.displayName="MenubarTrigger";var MenubarPortal=props=>{const{__scopeMenubar,...portalProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.ZL,{...menuScope,...portalProps})};MenubarPortal.displayName="MenubarPortal";var MenubarContent=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,align="start",...contentProps}=props,menuScope=useMenuScope(__scopeMenubar),context=useMenubarContext("MenubarContent",__scopeMenubar),menuContext=useMenubarMenuContext("MenubarContent",__scopeMenubar),getItems=useCollection(__scopeMenubar),hasInteractedOutsideRef=react.useRef(!1);return(0,jsx_runtime.jsx)(react_menu_dist.UC,{id:menuContext.contentId,"aria-labelledby":menuContext.triggerId,"data-radix-menubar-content":"",...menuScope,...contentProps,ref:forwardedRef,align,onCloseAutoFocus:(0,primitive_dist.m)(props.onCloseAutoFocus,(event=>{Boolean(context.value)||hasInteractedOutsideRef.current||menuContext.triggerRef.current?.focus(),hasInteractedOutsideRef.current=!1,event.preventDefault()})),onFocusOutside:(0,primitive_dist.m)(props.onFocusOutside,(event=>{const target=event.target;getItems().some((item=>item.ref.current?.contains(target)))&&event.preventDefault()})),onInteractOutside:(0,primitive_dist.m)(props.onInteractOutside,(()=>{hasInteractedOutsideRef.current=!0})),onEntryFocus:event=>{menuContext.wasKeyboardTriggerOpenRef.current||event.preventDefault()},onKeyDown:(0,primitive_dist.m)(props.onKeyDown,(event=>{if(["ArrowRight","ArrowLeft"].includes(event.key)){const target=event.target,targetIsSubTrigger=target.hasAttribute("data-radix-menubar-subtrigger"),isKeyDownInsideSubMenu=target.closest("[data-radix-menubar-content]")!==event.currentTarget,isPrevKey=("rtl"===context.dir?"ArrowRight":"ArrowLeft")===event.key;if(!isPrevKey&&targetIsSubTrigger)return;if(isKeyDownInsideSubMenu&&isPrevKey)return;let candidateValues=getItems().filter((item=>!item.disabled)).map((item=>item.value));isPrevKey&&candidateValues.reverse();const currentIndex=candidateValues.indexOf(menuContext.value);candidateValues=context.loop?function wrapArray(array,startIndex){return array.map(((_,index)=>array[(startIndex+index)%array.length]))}(candidateValues,currentIndex+1):candidateValues.slice(currentIndex+1);const[nextValue]=candidateValues;nextValue&&context.onMenuOpen(nextValue)}}),{checkForDefaultPrevented:!1}),style:{...props.style,"--radix-menubar-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-menubar-content-available-width":"var(--radix-popper-available-width)","--radix-menubar-content-available-height":"var(--radix-popper-available-height)","--radix-menubar-trigger-width":"var(--radix-popper-anchor-width)","--radix-menubar-trigger-height":"var(--radix-popper-anchor-height)"}})}));MenubarContent.displayName="MenubarContent";var MenubarGroup=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...groupProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.YJ,{...menuScope,...groupProps,ref:forwardedRef})}));MenubarGroup.displayName="MenubarGroup";var MenubarLabel=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...labelProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.JU,{...menuScope,...labelProps,ref:forwardedRef})}));MenubarLabel.displayName="MenubarLabel";var MenubarItem=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...itemProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.q7,{...menuScope,...itemProps,ref:forwardedRef})}));MenubarItem.displayName="MenubarItem";var MenubarCheckboxItem=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...checkboxItemProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.H_,{...menuScope,...checkboxItemProps,ref:forwardedRef})}));MenubarCheckboxItem.displayName="MenubarCheckboxItem";var MenubarRadioGroup=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...radioGroupProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.z6,{...menuScope,...radioGroupProps,ref:forwardedRef})}));MenubarRadioGroup.displayName="MenubarRadioGroup";var MenubarRadioItem=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...radioItemProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.hN,{...menuScope,...radioItemProps,ref:forwardedRef})}));MenubarRadioItem.displayName="MenubarRadioItem";var MenubarItemIndicator=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...itemIndicatorProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.VF,{...menuScope,...itemIndicatorProps,ref:forwardedRef})}));MenubarItemIndicator.displayName="MenubarItemIndicator";var MenubarSeparator=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...separatorProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.wv,{...menuScope,...separatorProps,ref:forwardedRef})}));MenubarSeparator.displayName="MenubarSeparator";var MenubarArrow=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...arrowProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.i3,{...menuScope,...arrowProps,ref:forwardedRef})}));MenubarArrow.displayName="MenubarArrow";var MenubarSub=props=>{const{__scopeMenubar,children,open:openProp,onOpenChange,defaultOpen}=props,menuScope=useMenuScope(__scopeMenubar),[open=!1,setOpen]=(0,react_use_controllable_state_dist.i)({prop:openProp,defaultProp:defaultOpen,onChange:onOpenChange});return(0,jsx_runtime.jsx)(react_menu_dist.Pb,{...menuScope,open,onOpenChange:setOpen,children})};MenubarSub.displayName="MenubarSub";var MenubarSubTrigger=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...subTriggerProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.ZP,{"data-radix-menubar-subtrigger":"",...menuScope,...subTriggerProps,ref:forwardedRef})}));MenubarSubTrigger.displayName="MenubarSubTrigger";var MenubarSubContent=react.forwardRef(((props,forwardedRef)=>{const{__scopeMenubar,...subContentProps}=props,menuScope=useMenuScope(__scopeMenubar);return(0,jsx_runtime.jsx)(react_menu_dist.G5,{...menuScope,"data-radix-menubar-content":"",...subContentProps,ref:forwardedRef,style:{...props.style,"--radix-menubar-content-transform-origin":"var(--radix-popper-transform-origin)","--radix-menubar-content-available-width":"var(--radix-popper-available-width)","--radix-menubar-content-available-height":"var(--radix-popper-available-height)","--radix-menubar-trigger-width":"var(--radix-popper-anchor-width)","--radix-menubar-trigger-height":"var(--radix-popper-anchor-height)"}})}));MenubarSubContent.displayName="MenubarSubContent";var Root3=Menubar,Menu=MenubarMenu,Trigger=MenubarTrigger,Portal2=MenubarPortal,Content2=MenubarContent,Item3=MenubarItem,CheckboxItem2=MenubarCheckboxItem,RadioGroup2=MenubarRadioGroup,RadioItem2=MenubarRadioItem,ItemIndicator2=MenubarItemIndicator,Separator2=MenubarSeparator,Sub2=MenubarSub,SubTrigger2=MenubarSubTrigger,SubContent2=MenubarSubContent,check=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/check.js"),circle=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/circle.js"),chevron_right=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-right.js"),utils=__webpack_require__("./src/lib/utils.ts");function menubar_Menubar({className,...props}){return react.createElement(Root3,{"data-slot":"menubar",className:(0,utils.cn)("bg-background flex h-9 items-center gap-1 rounded-md border p-1 shadow-xs",className),...props})}function menubar_MenubarMenu({...props}){return react.createElement(Menu,{"data-slot":"menubar-menu",...props})}function menubar_MenubarPortal({...props}){return react.createElement(Portal2,{"data-slot":"menubar-portal",...props})}function menubar_MenubarRadioGroup({...props}){return react.createElement(RadioGroup2,{"data-slot":"menubar-radio-group",...props})}function menubar_MenubarTrigger({className,...props}){return react.createElement(Trigger,{"data-slot":"menubar-trigger",className:(0,utils.cn)("focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex items-center rounded-sm px-2 py-1 text-sm font-medium outline-hidden select-none",className),...props})}function menubar_MenubarContent({className,align="start",alignOffset=-4,sideOffset=8,...props}){return react.createElement(menubar_MenubarPortal,null,react.createElement(Content2,{"data-slot":"menubar-content",align,alignOffset,sideOffset,className:(0,utils.cn)("bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[12rem] overflow-hidden rounded-md border p-1 shadow-md",className),...props}))}function menubar_MenubarItem({className,inset,variant="default",...props}){return react.createElement(Item3,{"data-slot":"menubar-item","data-inset":inset,"data-variant":variant,className:(0,utils.cn)("focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",className),...props})}function menubar_MenubarCheckboxItem({className,children,checked,...props}){return react.createElement(CheckboxItem2,{"data-slot":"menubar-checkbox-item",className:(0,utils.cn)("focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",className),checked,...props},react.createElement("span",{className:"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center"},react.createElement(ItemIndicator2,null,react.createElement(check.A,{className:"size-4"}))),children)}function menubar_MenubarRadioItem({className,children,...props}){return react.createElement(RadioItem2,{"data-slot":"menubar-radio-item",className:(0,utils.cn)("focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",className),...props},react.createElement("span",{className:"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center"},react.createElement(ItemIndicator2,null,react.createElement(circle.A,{className:"size-2 fill-current"}))),children)}function menubar_MenubarSeparator({className,...props}){return react.createElement(Separator2,{"data-slot":"menubar-separator",className:(0,utils.cn)("bg-border -mx-1 my-1 h-px",className),...props})}function MenubarShortcut({className,...props}){return react.createElement("span",{"data-slot":"menubar-shortcut",className:(0,utils.cn)("text-muted-foreground ml-auto text-xs tracking-widest",className),...props})}function menubar_MenubarSub({...props}){return react.createElement(Sub2,{"data-slot":"menubar-sub",...props})}function menubar_MenubarSubTrigger({className,inset,children,...props}){return react.createElement(SubTrigger2,{"data-slot":"menubar-sub-trigger","data-inset":inset,className:(0,utils.cn)("focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-none select-none data-[inset]:pl-8",className),...props},children,react.createElement(chevron_right.A,{className:"ml-auto h-4 w-4"}))}function menubar_MenubarSubContent({className,...props}){return react.createElement(SubContent2,{"data-slot":"menubar-sub-content",className:(0,utils.cn)("bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-lg",className),...props})}menubar_Menubar.__docgenInfo={description:"",methods:[],displayName:"Menubar"},menubar_MenubarPortal.__docgenInfo={description:"",methods:[],displayName:"MenubarPortal"},menubar_MenubarMenu.__docgenInfo={description:"",methods:[],displayName:"MenubarMenu"},menubar_MenubarTrigger.__docgenInfo={description:"",methods:[],displayName:"MenubarTrigger"},menubar_MenubarContent.__docgenInfo={description:"",methods:[],displayName:"MenubarContent",props:{align:{defaultValue:{value:'"start"',computed:!1},required:!1},alignOffset:{defaultValue:{value:"-4",computed:!1},required:!1},sideOffset:{defaultValue:{value:"8",computed:!1},required:!1}}},menubar_MenubarSeparator.__docgenInfo={description:"",methods:[],displayName:"MenubarSeparator"},menubar_MenubarItem.__docgenInfo={description:"",methods:[],displayName:"MenubarItem",props:{inset:{required:!1,tsType:{name:"boolean"},description:""},variant:{required:!1,tsType:{name:"union",raw:'"default" | "destructive"',elements:[{name:"literal",value:'"default"'},{name:"literal",value:'"destructive"'}]},description:"",defaultValue:{value:'"default"',computed:!1}}}},MenubarShortcut.__docgenInfo={description:"",methods:[],displayName:"MenubarShortcut"},menubar_MenubarCheckboxItem.__docgenInfo={description:"",methods:[],displayName:"MenubarCheckboxItem"},menubar_MenubarRadioGroup.__docgenInfo={description:"",methods:[],displayName:"MenubarRadioGroup"},menubar_MenubarRadioItem.__docgenInfo={description:"",methods:[],displayName:"MenubarRadioItem"},menubar_MenubarSub.__docgenInfo={description:"",methods:[],displayName:"MenubarSub"},menubar_MenubarSubTrigger.__docgenInfo={description:"",methods:[],displayName:"MenubarSubTrigger",props:{inset:{required:!1,tsType:{name:"boolean"},description:""}}},menubar_MenubarSubContent.__docgenInfo={description:"",methods:[],displayName:"MenubarSubContent"};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const menubar_stories={title:"Components/Shadcn/Menubar",component:menubar_Menubar,parameters:{layout:"centered",docs:{description:{component:"A visually persistent menu common in desktop applications that provides quick access to a consistent set of commands.\n\nSee the [Shadcn docs](https://ui.shadcn.com/docs/components/menubar) for more information."}}},tags:["autodocs","stable","version:2.3.0"],argTypes:{children:{control:"text",description:"The content of the menubar",table:{type:{summary:"React.ReactNode"}}},className:{control:"text",description:"The class name of the menubar",table:{type:{summary:"string"}}}},decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement("div",{className:"w-full max-w-3xl"},react.createElement(Story,null)))]},Default={args:{children:react.createElement(react.Fragment,null,react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"File"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"New Tab ",react.createElement(MenubarShortcut,null,"⌘T")),react.createElement(menubar_MenubarItem,null,"New Window ",react.createElement(MenubarShortcut,null,"⌘N")),react.createElement(menubar_MenubarItem,{disabled:!0},"New Incognito Window"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarSub,null,react.createElement(menubar_MenubarSubTrigger,null,"Share"),react.createElement(menubar_MenubarSubContent,null,react.createElement(menubar_MenubarItem,null,"Email link"),react.createElement(menubar_MenubarItem,null,"Messages"),react.createElement(menubar_MenubarItem,null,"Notes"))),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Print... ",react.createElement(MenubarShortcut,null,"⌘P")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Edit"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"Undo ",react.createElement(MenubarShortcut,null,"⌘Z")),react.createElement(menubar_MenubarItem,null,"Redo ",react.createElement(MenubarShortcut,null,"⇧⌘Z")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Cut ",react.createElement(MenubarShortcut,null,"⌘X")),react.createElement(menubar_MenubarItem,null,"Copy ",react.createElement(MenubarShortcut,null,"⌘C")),react.createElement(menubar_MenubarItem,null,"Paste ",react.createElement(MenubarShortcut,null,"⌘V")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Select All ",react.createElement(MenubarShortcut,null,"⌘A")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"View"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarCheckboxItem,null,"Always Show Bookmarks Bar"),react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Always Show Full URLs"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,{inset:!0},"Reload ",react.createElement(MenubarShortcut,null,"⌘R")),react.createElement(menubar_MenubarItem,{disabled:!0,inset:!0},"Force Reload ",react.createElement(MenubarShortcut,null,"⇧⌘R")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,{inset:!0},"Toggle Fullscreen"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,{inset:!0},"Hide Sidebar"))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Help"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"About"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Documentation ",react.createElement(MenubarShortcut,null,"F1")),react.createElement(menubar_MenubarItem,null,"Keyboard Shortcuts"),react.createElement(menubar_MenubarItem,null,"Report an Issue"))))}},WithRadioGroups={args:{children:react.createElement(react.Fragment,null,react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Format"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarSub,null,react.createElement(menubar_MenubarSubTrigger,null,"Font Family"),react.createElement(menubar_MenubarSubContent,null,react.createElement(menubar_MenubarRadioGroup,{value:"system"},react.createElement(menubar_MenubarRadioItem,{value:"system"},"System Default"),react.createElement(menubar_MenubarRadioItem,{value:"arial"},"Arial"),react.createElement(menubar_MenubarRadioItem,{value:"helvetica"},"Helvetica"),react.createElement(menubar_MenubarRadioItem,{value:"times-new-roman"},"Times New Roman"),react.createElement(menubar_MenubarRadioItem,{value:"monospace"},"Monospace")))),react.createElement(menubar_MenubarSub,null,react.createElement(menubar_MenubarSubTrigger,null,"Text Size"),react.createElement(menubar_MenubarSubContent,null,react.createElement(menubar_MenubarRadioGroup,{value:"medium"},react.createElement(menubar_MenubarRadioItem,{value:"small"},"Small"),react.createElement(menubar_MenubarRadioItem,{value:"medium"},"Medium"),react.createElement(menubar_MenubarRadioItem,{value:"large"},"Large"),react.createElement(menubar_MenubarRadioItem,{value:"xl"},"Extra Large")))),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Bold ",react.createElement(MenubarShortcut,null,"⌘B")),react.createElement(menubar_MenubarItem,null,"Italic ",react.createElement(MenubarShortcut,null,"⌘I")),react.createElement(menubar_MenubarItem,null,"Underline ",react.createElement(MenubarShortcut,null,"⌘U")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"View"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarSub,null,react.createElement(menubar_MenubarSubTrigger,null,"Zoom"),react.createElement(menubar_MenubarSubContent,null,react.createElement(menubar_MenubarRadioGroup,{value:"100%"},react.createElement(menubar_MenubarRadioItem,{value:"50%"},"50%"),react.createElement(menubar_MenubarRadioItem,{value:"75%"},"75%"),react.createElement(menubar_MenubarRadioItem,{value:"100%"},"100%"),react.createElement(menubar_MenubarRadioItem,{value:"125%"},"125%"),react.createElement(menubar_MenubarRadioItem,{value:"150%"},"150%")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Zoom In ",react.createElement(MenubarShortcut,null,"⌘+")),react.createElement(menubar_MenubarItem,null,"Zoom Out ",react.createElement(MenubarShortcut,null,"⌘-")))))))}},WithCheckboxItems={args:{children:react.createElement(react.Fragment,null,react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Options"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Show Status Bar"),react.createElement(menubar_MenubarCheckboxItem,null,"Show Activity Bar"),react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Show Panel"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarSub,null,react.createElement(menubar_MenubarSubTrigger,null,"Appearance"),react.createElement(menubar_MenubarSubContent,null,react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Show Line Numbers"),react.createElement(menubar_MenubarCheckboxItem,null,"Show Minimap"),react.createElement(menubar_MenubarCheckboxItem,null,"Show Breadcrumbs"),react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Wrap Text"))))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Window"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Show Sidebar"),react.createElement(menubar_MenubarCheckboxItem,null,"Show Terminal"),react.createElement(menubar_MenubarCheckboxItem,null,"Show Explorer"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Split Editor ",react.createElement(MenubarShortcut,null,"⌘\\")))))}},ApplicationMenubar={args:{className:"border rounded-md",children:react.createElement(react.Fragment,null,react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,{className:"font-bold"},"App"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"About Application"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Preferences..."),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Quit ",react.createElement(MenubarShortcut,null,"⌘Q")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"File"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"New ",react.createElement(MenubarShortcut,null,"⌘N")),react.createElement(menubar_MenubarItem,null,"Open... ",react.createElement(MenubarShortcut,null,"⌘O")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Save ",react.createElement(MenubarShortcut,null,"⌘S")),react.createElement(menubar_MenubarItem,null,"Save As... ",react.createElement(MenubarShortcut,null,"⇧⌘S")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Export... ",react.createElement(MenubarShortcut,null,"⌘E")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Edit"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"Undo ",react.createElement(MenubarShortcut,null,"⌘Z")),react.createElement(menubar_MenubarItem,null,"Redo ",react.createElement(MenubarShortcut,null,"⇧⌘Z")),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Cut ",react.createElement(MenubarShortcut,null,"⌘X")),react.createElement(menubar_MenubarItem,null,"Copy ",react.createElement(MenubarShortcut,null,"⌘C")),react.createElement(menubar_MenubarItem,null,"Paste ",react.createElement(MenubarShortcut,null,"⌘V")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"View"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarCheckboxItem,{checked:!0},"Show Toolbar"),react.createElement(menubar_MenubarCheckboxItem,null,"Show Sidebar"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Zoom In ",react.createElement(MenubarShortcut,null,"⌘+")),react.createElement(menubar_MenubarItem,null,"Zoom Out ",react.createElement(MenubarShortcut,null,"⌘-")),react.createElement(menubar_MenubarItem,null,"Reset Zoom ",react.createElement(MenubarShortcut,null,"⌘0")))),react.createElement(menubar_MenubarMenu,null,react.createElement(menubar_MenubarTrigger,null,"Help"),react.createElement(menubar_MenubarContent,null,react.createElement(menubar_MenubarItem,null,"Documentation"),react.createElement(menubar_MenubarItem,null,"Report an Issue"),react.createElement(menubar_MenubarSeparator,null),react.createElement(menubar_MenubarItem,null,"Check for Updates"),react.createElement(menubar_MenubarItem,null,"About"))))}},__namedExportsOrder=["Default","WithRadioGroups","WithCheckboxItems","ApplicationMenubar"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: <>\n        <MenubarMenu>\n          <MenubarTrigger>File</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>\n              New Tab <MenubarShortcut>⌘T</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              New Window <MenubarShortcut>⌘N</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem disabled>New Incognito Window</MenubarItem>\n            <MenubarSeparator />\n            <MenubarSub>\n              <MenubarSubTrigger>Share</MenubarSubTrigger>\n              <MenubarSubContent>\n                <MenubarItem>Email link</MenubarItem>\n                <MenubarItem>Messages</MenubarItem>\n                <MenubarItem>Notes</MenubarItem>\n              </MenubarSubContent>\n            </MenubarSub>\n            <MenubarSeparator />\n            <MenubarItem>\n              Print... <MenubarShortcut>⌘P</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>Edit</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>\n              Undo <MenubarShortcut>⌘Z</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Redo <MenubarShortcut>⇧⌘Z</MenubarShortcut>\n            </MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Cut <MenubarShortcut>⌘X</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Copy <MenubarShortcut>⌘C</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Paste <MenubarShortcut>⌘V</MenubarShortcut>\n            </MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Select All <MenubarShortcut>⌘A</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>View</MenubarTrigger>\n          <MenubarContent>\n            <MenubarCheckboxItem>Always Show Bookmarks Bar</MenubarCheckboxItem>\n            <MenubarCheckboxItem checked>\n              Always Show Full URLs\n            </MenubarCheckboxItem>\n            <MenubarSeparator />\n            <MenubarItem inset>\n              Reload <MenubarShortcut>⌘R</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem disabled inset>\n              Force Reload <MenubarShortcut>⇧⌘R</MenubarShortcut>\n            </MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem inset>Toggle Fullscreen</MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem inset>Hide Sidebar</MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>Help</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>About</MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Documentation <MenubarShortcut>F1</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>Keyboard Shortcuts</MenubarItem>\n            <MenubarItem>Report an Issue</MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n      </>\n  }\n}",...Default.parameters?.docs?.source},description:{story:"Default menubar with File, Edit, View, and Help menus.",...Default.parameters?.docs?.description}}},WithRadioGroups.parameters={...WithRadioGroups.parameters,docs:{...WithRadioGroups.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n        <MenubarMenu>\n          <MenubarTrigger>Format</MenubarTrigger>\n          <MenubarContent>\n            <MenubarSub>\n              <MenubarSubTrigger>Font Family</MenubarSubTrigger>\n              <MenubarSubContent>\n                <MenubarRadioGroup value="system">\n                  <MenubarRadioItem value="system">\n                    System Default\n                  </MenubarRadioItem>\n                  <MenubarRadioItem value="arial">Arial</MenubarRadioItem>\n                  <MenubarRadioItem value="helvetica">\n                    Helvetica\n                  </MenubarRadioItem>\n                  <MenubarRadioItem value="times-new-roman">\n                    Times New Roman\n                  </MenubarRadioItem>\n                  <MenubarRadioItem value="monospace">\n                    Monospace\n                  </MenubarRadioItem>\n                </MenubarRadioGroup>\n              </MenubarSubContent>\n            </MenubarSub>\n            <MenubarSub>\n              <MenubarSubTrigger>Text Size</MenubarSubTrigger>\n              <MenubarSubContent>\n                <MenubarRadioGroup value="medium">\n                  <MenubarRadioItem value="small">Small</MenubarRadioItem>\n                  <MenubarRadioItem value="medium">Medium</MenubarRadioItem>\n                  <MenubarRadioItem value="large">Large</MenubarRadioItem>\n                  <MenubarRadioItem value="xl">Extra Large</MenubarRadioItem>\n                </MenubarRadioGroup>\n              </MenubarSubContent>\n            </MenubarSub>\n            <MenubarSeparator />\n            <MenubarItem>\n              Bold <MenubarShortcut>⌘B</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Italic <MenubarShortcut>⌘I</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Underline <MenubarShortcut>⌘U</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>View</MenubarTrigger>\n          <MenubarContent>\n            <MenubarSub>\n              <MenubarSubTrigger>Zoom</MenubarSubTrigger>\n              <MenubarSubContent>\n                <MenubarRadioGroup value="100%">\n                  <MenubarRadioItem value="50%">50%</MenubarRadioItem>\n                  <MenubarRadioItem value="75%">75%</MenubarRadioItem>\n                  <MenubarRadioItem value="100%">100%</MenubarRadioItem>\n                  <MenubarRadioItem value="125%">125%</MenubarRadioItem>\n                  <MenubarRadioItem value="150%">150%</MenubarRadioItem>\n                </MenubarRadioGroup>\n                <MenubarSeparator />\n                <MenubarItem>\n                  Zoom In <MenubarShortcut>⌘+</MenubarShortcut>\n                </MenubarItem>\n                <MenubarItem>\n                  Zoom Out <MenubarShortcut>⌘-</MenubarShortcut>\n                </MenubarItem>\n              </MenubarSubContent>\n            </MenubarSub>\n          </MenubarContent>\n        </MenubarMenu>\n      </>\n  }\n}',...WithRadioGroups.parameters?.docs?.source},description:{story:"Menubar with radio groups for selecting options.",...WithRadioGroups.parameters?.docs?.description}}},WithCheckboxItems.parameters={...WithCheckboxItems.parameters,docs:{...WithCheckboxItems.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: <>\n        <MenubarMenu>\n          <MenubarTrigger>Options</MenubarTrigger>\n          <MenubarContent>\n            <MenubarCheckboxItem checked>Show Status Bar</MenubarCheckboxItem>\n            <MenubarCheckboxItem>Show Activity Bar</MenubarCheckboxItem>\n            <MenubarCheckboxItem checked>Show Panel</MenubarCheckboxItem>\n            <MenubarSeparator />\n            <MenubarSub>\n              <MenubarSubTrigger>Appearance</MenubarSubTrigger>\n              <MenubarSubContent>\n                <MenubarCheckboxItem checked>\n                  Show Line Numbers\n                </MenubarCheckboxItem>\n                <MenubarCheckboxItem>Show Minimap</MenubarCheckboxItem>\n                <MenubarCheckboxItem>Show Breadcrumbs</MenubarCheckboxItem>\n                <MenubarCheckboxItem checked>Wrap Text</MenubarCheckboxItem>\n              </MenubarSubContent>\n            </MenubarSub>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>Window</MenubarTrigger>\n          <MenubarContent>\n            <MenubarCheckboxItem checked>Show Sidebar</MenubarCheckboxItem>\n            <MenubarCheckboxItem>Show Terminal</MenubarCheckboxItem>\n            <MenubarCheckboxItem>Show Explorer</MenubarCheckboxItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Split Editor <MenubarShortcut>⌘\\</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n      </>\n  }\n}",...WithCheckboxItems.parameters?.docs?.source},description:{story:"Menubar with checkbox items for toggling options.",...WithCheckboxItems.parameters?.docs?.description}}},ApplicationMenubar.parameters={...ApplicationMenubar.parameters,docs:{...ApplicationMenubar.parameters?.docs,source:{originalSource:'{\n  args: {\n    className: "border rounded-md",\n    children: <>\n        <MenubarMenu>\n          <MenubarTrigger className="font-bold">App</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>About Application</MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>Preferences...</MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Quit <MenubarShortcut>⌘Q</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>File</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>\n              New <MenubarShortcut>⌘N</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Open... <MenubarShortcut>⌘O</MenubarShortcut>\n            </MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Save <MenubarShortcut>⌘S</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Save As... <MenubarShortcut>⇧⌘S</MenubarShortcut>\n            </MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Export... <MenubarShortcut>⌘E</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>Edit</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>\n              Undo <MenubarShortcut>⌘Z</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Redo <MenubarShortcut>⇧⌘Z</MenubarShortcut>\n            </MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Cut <MenubarShortcut>⌘X</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Copy <MenubarShortcut>⌘C</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Paste <MenubarShortcut>⌘V</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>View</MenubarTrigger>\n          <MenubarContent>\n            <MenubarCheckboxItem checked>Show Toolbar</MenubarCheckboxItem>\n            <MenubarCheckboxItem>Show Sidebar</MenubarCheckboxItem>\n            <MenubarSeparator />\n            <MenubarItem>\n              Zoom In <MenubarShortcut>⌘+</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Zoom Out <MenubarShortcut>⌘-</MenubarShortcut>\n            </MenubarItem>\n            <MenubarItem>\n              Reset Zoom <MenubarShortcut>⌘0</MenubarShortcut>\n            </MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n        <MenubarMenu>\n          <MenubarTrigger>Help</MenubarTrigger>\n          <MenubarContent>\n            <MenubarItem>Documentation</MenubarItem>\n            <MenubarItem>Report an Issue</MenubarItem>\n            <MenubarSeparator />\n            <MenubarItem>Check for Updates</MenubarItem>\n            <MenubarItem>About</MenubarItem>\n          </MenubarContent>\n        </MenubarMenu>\n      </>\n  }\n}',...ApplicationMenubar.parameters?.docs?.source},description:{story:"Application menubar with a complete set of menus.",...ApplicationMenubar.parameters?.docs?.description}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
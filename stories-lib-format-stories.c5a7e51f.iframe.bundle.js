"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2796],{"./src/stories/lib/format.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>format_stories});var react=__webpack_require__("./node_modules/react/index.js");const formatNumber=num=>num>=1e6?(num/1e6).toFixed(1)+"M":num>=1e3?(num/1e3).toFixed(1)+"K":num.toString(),format_stories={title:"Lib/Format",component:({children})=>react.createElement("div",{className:"space-y-2"},children),tags:["autodocs"],parameters:{docs:{description:{component:"Utility function to format numbers with K/M suffixes."}},controls:{exclude:["children"]}}},Default={args:{children:react.createElement(react.Fragment,null,react.createElement("p",null,"formatNumber(1234) → ",formatNumber(1234)),react.createElement("p",null,"formatNumber(1234567) → ",formatNumber(1234567)),react.createElement("p",null,"formatNumber(999) → ",formatNumber(999)),react.createElement("p",null,"formatNumber(10500) → ",formatNumber(10500)),react.createElement("p",null,"formatNumber(2400000) → ",formatNumber(24e5)))}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    children: <>\n        <p>formatNumber(1234) → {formatNumber(1234)}</p>\n        <p>formatNumber(1234567) → {formatNumber(1234567)}</p>\n        <p>formatNumber(999) → {formatNumber(999)}</p>\n        <p>formatNumber(10500) → {formatNumber(10500)}</p>\n        <p>formatNumber(2400000) → {formatNumber(2400000)}</p>\n      </>\n  }\n}",...Default.parameters?.docs?.source}}}}}]);
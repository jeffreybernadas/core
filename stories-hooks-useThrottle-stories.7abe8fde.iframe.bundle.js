/*! For license information please see stories-hooks-useThrottle-stories.7abe8fde.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2659],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/hooks/useEffectOnce.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=effect=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect,[])}},"./src/hooks/useUnmount.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useEffectOnce__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useEffectOnce.ts");const __WEBPACK_DEFAULT_EXPORT__=fn=>{const fnRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fn);fnRef.current=fn,(0,_useEffectOnce__WEBPACK_IMPORTED_MODULE_1__.A)((()=>()=>fnRef.current()))}},"./src/stories/hooks/useThrottle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ThrottledInput:()=>ThrottledInput,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useThrottle_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),useUnmount=__webpack_require__("./src/hooks/useUnmount.ts");const hooks_useThrottle=(value,ms=200)=>{const[state,setState]=(0,react.useState)(value),timeout=(0,react.useRef)(void 0),nextValue=(0,react.useRef)(null),hasNextValue=(0,react.useRef)(!1);return(0,react.useEffect)((()=>{if(timeout.current)nextValue.current=value,hasNextValue.current=!0;else{setState(value);const timeoutCallback=()=>{hasNextValue.current?(hasNextValue.current=!1,setState(nextValue.current),timeout.current=setTimeout(timeoutCallback,ms)):timeout.current=void 0};timeout.current=setTimeout(timeoutCallback,ms)}}),[value,ms]),(0,useUnmount.A)((()=>{timeout.current&&clearTimeout(timeout.current)})),state};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useThrottle_stories={title:"Hooks/Utility/useThrottle",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useThrottle` is a hook that throttles state updates to improve performance.\nIt\'s useful for handling frequent updates like scroll events, window resizing, or real-time input.\n\n### Module Federation Import\n```tsx\nimport { useThrottle } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useThrottle } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [searchTerm, setSearchTerm] = useState(\'\');\n  const throttledSearchTerm = useThrottle(searchTerm, 500);\n\n  // API call would only happen every 500ms\n  React.useEffect(() => {\n    if (throttledSearchTerm) {\n      searchAPI(throttledSearchTerm);\n    }\n  }, [throttledSearchTerm]);\n\n  return (\n    <div>\n      <input\n        type="text"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n        placeholder="Search..."\n      />\n      <div>Searching for: {throttledSearchTerm}</div>\n    </div>\n  );\n};\n```\n\n### Advanced Usage\n```tsx\nconst WindowSizeComponent = () => {\n  const [size, setSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const throttledSize = useThrottle(size, 200);\n\n  React.useEffect(() => {\n    const handleResize = () => {\n      setSize({ width: window.innerWidth, height: window.innerHeight });\n    };\n\n    window.addEventListener(\'resize\', handleResize);\n    return () => window.removeEventListener(\'resize\', handleResize);\n  }, []);\n\n  return (\n    <div>\n      Throttled Window Size: {throttledSize.width} x {throttledSize.height}\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseThrottle<T>(\n  value: T,        // The value to throttle\n  ms?: number = 200 // Throttle delay in milliseconds\n): T\n```\n\n### Returns\n- T: The throttled value, updated at most once per specified time interval\n\n### Browser Compatibility\nUses `setTimeout` which is supported in all modern browsers.\n\n### Related Resources\n- [MDN: setTimeout](https://developer.mozilla.org/en-US/docs/Web/API/setTimeout)'}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},ThrottledInput={render:()=>{const[value,setValue]=(0,react.useState)(""),throttledValue=hooks_useThrottle(value,500);return(0,jsx_runtime.jsx)("div",{className:"space-y-6 max-w-lg",children:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100",children:"Throttled Input"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg space-y-4",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("label",{className:"block text-sm font-medium text-slate-700 dark:text-slate-300",children:"Type something:"}),(0,jsx_runtime.jsx)("input",{type:"text",value,onChange:e=>setValue(e.target.value),className:"w-full px-3 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500",placeholder:"Type here..."})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsxs)("div",{className:"text-sm text-slate-600 dark:text-slate-400",children:["Immediate value: ",value]}),(0,jsx_runtime.jsxs)("div",{className:"text-sm text-slate-600 dark:text-slate-400",children:["Throttled value (500ms): ",throttledValue]})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"Type quickly in the input and notice how the throttled value updates at a controlled rate! ⌛"})})]})]})})}},__namedExportsOrder=["ThrottledInput"];ThrottledInput.parameters={...ThrottledInput.parameters,docs:{...ThrottledInput.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [value, setValue] = useState("");\n    const throttledValue = useThrottle(value, 500);\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Throttled Input\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg space-y-4">\n            <div className="space-y-2">\n              <label className="block text-sm font-medium text-slate-700 dark:text-slate-300">\n                Type something:\n              </label>\n              <input type="text" value={value} onChange={e => setValue(e.target.value)} className="w-full px-3 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Type here..." />\n            </div>\n            <div className="space-y-2">\n              <div className="text-sm text-slate-600 dark:text-slate-400">\n                Immediate value: {value}\n              </div>\n              <div className="text-sm text-slate-600 dark:text-slate-400">\n                Throttled value (500ms): {throttledValue}\n              </div>\n            </div>\n\n            {/* Instructions */}\n            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n              <p className="text-sm text-blue-600 dark:text-blue-400">\n                Type quickly in the input and notice how the throttled value\n                updates at a controlled rate! ⌛\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...ThrottledInput.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
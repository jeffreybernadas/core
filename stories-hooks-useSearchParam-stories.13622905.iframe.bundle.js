"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[5106],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/stories/hooks/useSearchParam.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useSearchParam_stories});var react=__webpack_require__("./node_modules/react/index.js"),util=__webpack_require__("./src/hooks/misc/util.ts");const getValue=(search,param)=>new URLSearchParams(search).get(param),hooks_useSearchParam=util.Bd?param=>{const location=window.location,[value,setValue]=(0,react.useState)((()=>getValue(location.search,param)));return(0,react.useEffect)((()=>{const onChange=()=>{setValue(getValue(location.search,param))};return(0,util.on)(window,"popstate",onChange),(0,util.on)(window,"pushstate",onChange),(0,util.on)(window,"replacestate",onChange),()=>{(0,util.AU)(window,"popstate",onChange),(0,util.AU)(window,"pushstate",onChange),(0,util.AU)(window,"replacestate",onChange)}}),[]),value}:()=>null;var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useSearchParam_stories={title:"Hooks/Utility/useSearchParam",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:"`useSearchParam` is a hook that tracks URL search parameters and updates when they change.\n\n### Module Federation Import\n```tsx\nimport { useSearchParam } from \"@core/hooks\";\n```\n\n### NPM Package Import\n```tsx\nimport { useSearchParam } from \"@bernz322/core/hooks\";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const searchValue = useSearchParam('query');\n  return <div>Search param 'query' value: {searchValue}</div>;\n};\n```\n\n### Parameters\n```tsx\nuseSearchParam(\n  param: string // The URL parameter name to track\n): string | null\n```\n\n### Returns\n- Returns the current value of the URL parameter as a string, or null if not present\n\n### Browser Compatibility\n- Uses URLSearchParams API (supported in all modern browsers)\n- Uses Window History API for state changes\n\n### Related Resources\n- [URLSearchParams API](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams)\n- [History API](https://developer.mozilla.org/en-US/docs/Web/API/History_API)"}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},SearchParamExample=()=>{const nameParam=hooks_useSearchParam("name"),ageParam=hooks_useSearchParam("age"),updateSearchParams=params=>{const searchParams=new URLSearchParams(window.location.search);Object.entries(params).forEach((([key,value])=>{value?searchParams.set(key,value):searchParams.delete(key)}));const newUrl=`${window.location.pathname}?${searchParams.toString()}`;window.history.pushState({},"",newUrl),window.dispatchEvent(new Event("pushstate"))};return react.createElement("div",{className:"space-y-6 w-[500px]"},react.createElement("h3",{className:"text-lg font-semibold"},"URL Search Parameter Tracker"),react.createElement("div",{className:"space-y-4"},react.createElement("div",{className:"flex flex-col gap-2"},react.createElement("label",{className:"text-sm font-medium"},"Name Parameter"),react.createElement("div",{className:"flex gap-2"},react.createElement("input",{type:"text",value:nameParam||"",onChange:e=>updateSearchParams({name:e.target.value}),placeholder:"Enter name...",className:"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50"}),react.createElement("button",{onClick:()=>updateSearchParams({name:""}),className:"px-3 py-1 text-sm font-semibold rounded-md bg-destructive text-white shadow hover:bg-destructive/90"},"Clear"))),react.createElement("div",{className:"flex flex-col gap-2"},react.createElement("label",{className:"text-sm font-medium"},"Age Parameter"),react.createElement("div",{className:"flex gap-2"},react.createElement("input",{type:"number",value:ageParam||"",onChange:e=>updateSearchParams({age:e.target.value}),placeholder:"Enter age...",className:"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50"}),react.createElement("button",{onClick:()=>updateSearchParams({age:""}),className:"px-3 py-1 text-sm font-semibold rounded-md bg-destructive text-white shadow hover:bg-destructive/90"},"Clear"))),react.createElement("div",{className:"p-4 bg-muted rounded-md"},react.createElement("p",{className:"text-sm font-medium"},"Current URL Parameters:"),react.createElement("pre",{className:"mt-2 text-sm"},JSON.stringify({name:nameParam,age:ageParam},null,2)))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try entering values in the inputs above to see the URL parameters update in real-time! 🔍")))},Example={render:()=>react.createElement(SearchParamExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <SearchParamExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
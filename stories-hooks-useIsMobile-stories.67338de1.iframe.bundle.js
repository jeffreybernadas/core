"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[8505],{"./src/stories/hooks/useIsMobile.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useIsMobile_stories});var react=__webpack_require__("./node_modules/react/index.js");const IsMobileDemo=()=>{const isMobile=function useIsMobile(){const[isMobile,setIsMobile]=react.useState(void 0);return react.useEffect((()=>{const mql=window.matchMedia("(max-width: 767px)"),onChange=()=>{setIsMobile(window.innerWidth<768)};return mql.addEventListener("change",onChange),setIsMobile(window.innerWidth<768),()=>mql.removeEventListener("change",onChange)}),[]),!!isMobile}();return react.createElement(react.Fragment,null,react.createElement("p",null,"Current viewport is: ",react.createElement("strong",null,isMobile?"Mobile":"Desktop")),react.createElement("p",{className:"text-sm text-muted-foreground"},"Resize your browser window to see the value change. Mobile breakpoint is 768px."))},useIsMobile_stories={title:"Hooks/useIsMobile",component:({children})=>react.createElement("div",{className:"space-y-4"},children),tags:["autodocs"]},Example={name:"useIsMobile()",parameters:{docs:{description:{story:"A hook that returns true if the current viewport width is less than 768px."}},controls:{exclude:["children"]}},args:{children:react.createElement(IsMobileDemo,null)}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  name: "useIsMobile()",\n  parameters: {\n    docs: {\n      description: {\n        story: "A hook that returns true if the current viewport width is less than 768px."\n      }\n    },\n    controls: {\n      exclude: ["children"]\n    }\n  },\n  args: {\n    children: <IsMobileDemo />\n  }\n}',...Example.parameters?.docs?.source}}}}}]);
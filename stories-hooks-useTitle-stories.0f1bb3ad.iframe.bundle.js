"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[4743],{"./src/stories/hooks/useTitle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useTitle_stories});var react=__webpack_require__("./node_modules/react/index.js");const DEFAULT_USE_TITLE_OPTIONS={restoreOnUnmount:!1};const hooks_useTitle="undefined"!=typeof document?function useTitle(title,options=DEFAULT_USE_TITLE_OPTIONS){const prevTitleRef=(0,react.useRef)(document.title);document.title!==title&&(document.title=title),(0,react.useEffect)((()=>options&&options.restoreOnUnmount?()=>{document.title=prevTitleRef.current}:void 0),[])}:_title=>{};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useTitle_stories={title:"Hooks/Browser API/useTitle",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useTitle` is a hook that updates the document title and optionally restores it when the component unmounts.\n\n### Module Federation Import\n```tsx\nimport { useTitle } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useTitle } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [count, setCount] = useState(0);\n  useTitle(`Notifications (${count})`);\n\n  return (\n    <button onClick={() => setCount(c => c + 1)}>\n      Increment Notifications\n    </button>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseTitle(\n  title: string,\n  options?: {\n    restoreOnUnmount?: boolean // Whether to restore the previous title on unmount\n  }\n): void\n```\n\n### Returns\n- No return value (void)\n\n### Features\n- Updates document title dynamically\n- Optional title restoration on unmount\n- Handles cleanup automatically\n- Zero dependencies\n- SSR compatible\n\n### Browser Compatibility\nCompatible with all browsers that support document.title.\n\n### Related Resources\n- [MDN: Document Title](https://developer.mozilla.org/en-US/docs/Web/API/Document/title)\n- [React Effects](https://react.dev/learn/synchronizing-with-effects)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},NotificationsComponent=({count,setCount})=>(hooks_useTitle(`(${count}) Notifications | My App`,{restoreOnUnmount:!0}),react.createElement("div",{className:"space-y-4"},react.createElement("div",{className:"flex items-center gap-4"},react.createElement("button",{onClick:()=>setCount(count+1),className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"},"Add Notification"),react.createElement("div",{className:"text-lg text-slate-700 dark:text-slate-200"},"Notifications: ",react.createElement("span",{className:"font-bold"},count))))),MessagesComponent=({count,setCount})=>(hooks_useTitle(`(${count}) Messages | My App`),react.createElement("div",{className:"space-y-4"},react.createElement("div",{className:"flex items-center gap-4"},react.createElement("button",{onClick:()=>setCount(count+1),className:"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors"},"Add Message"),react.createElement("div",{className:"text-lg text-slate-700 dark:text-slate-200"},"Messages: ",react.createElement("span",{className:"font-bold"},count))))),TitleExample=()=>{const[notifications,setNotifications]=(0,react.useState)(0),[messages,setMessages]=(0,react.useState)(0),[showNotifications,setShowNotifications]=(0,react.useState)(!0);return react.createElement("div",{className:"w-[500px]"},react.createElement("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Dynamic Document Title"),react.createElement("p",{className:"text-sm text-slate-500 dark:text-slate-400 mt-1"},"Watch how the document title updates based on component state")),react.createElement("div",{className:"space-y-6"},react.createElement("div",{className:"flex gap-4"},react.createElement("button",{onClick:()=>setShowNotifications(!showNotifications),className:"px-4 py-2 rounded transition-colors "+(showNotifications?"bg-blue-100 text-blue-700 dark:bg-blue-900/20 dark:text-blue-300":"bg-green-100 text-green-700 dark:bg-green-900/20 dark:text-green-300")},"Switch to ",showNotifications?"Messages":"Notifications")),showNotifications?react.createElement(NotificationsComponent,{count:notifications,setCount:setNotifications}):react.createElement(MessagesComponent,{count:messages,setCount:setMessages}),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded"},react.createElement("h4",{className:"font-medium text-slate-900 dark:text-slate-100 mb-2"},"Current State"),react.createElement("div",{className:"space-y-2 text-sm"},react.createElement("div",{className:"text-slate-600 dark:text-slate-300"},"Showing:"," ",react.createElement("span",{className:"font-medium"},showNotifications?"Notifications":"Messages")),react.createElement("div",{className:"text-slate-600 dark:text-slate-300"},"Document Title:"," ",react.createElement("span",{className:"font-mono"},document.title))))),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded space-y-2"},react.createElement("h4",{className:"font-medium text-slate-900 dark:text-slate-100"},"Component Features:"),react.createElement("ul",{className:"list-disc list-inside text-sm text-slate-600 dark:text-slate-300 space-y-1"},react.createElement("li",null,"Notifications restore title on unmount"),react.createElement("li",null,"Messages don't restore previous title"),react.createElement("li",null,"Title updates in real-time"),react.createElement("li",null,"Counts are preserved when switching"))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try switching between components and adding notifications/messages. Watch your browser tab title change! 📝"))))},Example={render:()=>react.createElement(TitleExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <TitleExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
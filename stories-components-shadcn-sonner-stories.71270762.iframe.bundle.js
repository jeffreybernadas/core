"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[8357],{"./src/components/shadcn/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button,r:()=>buttonVariants});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs"),class_variance_authority__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),_lib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/utils.ts");const buttonVariants=(0,class_variance_authority__WEBPACK_IMPORTED_MODULE_1__.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",destructive:"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",outline:"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2 has-[>svg]:px-3",sm:"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",lg:"h-10 rounded-md px-6 has-[>svg]:px-4",icon:"size-9"}},defaultVariants:{variant:"default",size:"default"}});function Button({className,variant,size,asChild=!1,...props}){const Comp=asChild?_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__.DX:"button";return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp,{"data-slot":"button",className:(0,_lib__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({variant,size,className})),...props})}Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))},"./src/stories/components/shadcn/sonner.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomDuration:()=>CustomDuration,CustomPosition:()=>CustomPosition,CustomStyling:()=>CustomStyling,Default:()=>Default,MultipleToasts:()=>MultipleToasts,PromiseToast:()=>PromiseToast,Types:()=>Types,WithActions:()=>WithActions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>sonner_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/next-themes/dist/index.mjs"),sonner_dist=__webpack_require__("./node_modules/sonner/dist/index.mjs");const Toaster=({...props})=>{const{theme="system"}=(0,dist.D)();return react.createElement(sonner_dist.l$,{theme,className:"toaster group",toastOptions:{classNames:{toast:"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",description:"group-[.toast]:text-muted-foreground",actionButton:"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground font-medium",cancelButton:"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground font-medium"}},...props})};Toaster.__docgenInfo={description:"",methods:[],displayName:"Toaster"};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx"),shadcn_button=__webpack_require__("./src/components/shadcn/button.tsx");const sonner_stories={title:"Components/Shadcn/Sonner",component:Toaster,parameters:{layout:"centered"},tags:["autodocs","stable","version:2.3.0"],argTypes:{position:{control:"select",options:["top-left","top-right","bottom-left","bottom-right","top-center","bottom-center"],description:"The position of the toasts"},expand:{control:"boolean",description:"Whether to expand the toasts to full width"},visibleToasts:{control:"number",description:"Maximum number of visible toasts"},closeButton:{control:"boolean",description:"Whether to show a close button"},theme:{control:"select",options:["light","dark","system"],description:"The theme to use for the toasts"},richColors:{control:"boolean",description:"Whether to use rich colors for the toasts"},duration:{control:"number",description:"Default duration for the toasts in milliseconds"}},decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement("div",{className:"w-full max-w-md"},react.createElement(Story,null),react.createElement(Toaster,null)))]},Default={args:{position:"top-right",expand:!1,visibleToasts:3,closeButton:!0},render:()=>react.createElement("div",{className:"flex flex-col gap-4"},react.createElement("h3",{className:"text-lg font-medium"},"Default Toast"),react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Event has been created",{description:"Friday, February 10, 2023 at 5:57 PM"})}},"Show Toast"))},Types={args:{position:"top-right",expand:!1,visibleToasts:3,closeButton:!0},render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-lg font-medium"},"Toast Types"),react.createElement("div",{className:"flex flex-col gap-2"},react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Default Toast",{description:"This is a default toast message"})}},"Default"),react.createElement(shadcn_button.$,{variant:"destructive",onClick:()=>{sonner_dist.oR.error("Error Toast",{description:"This is an error toast message"})}},"Error"),react.createElement(shadcn_button.$,{variant:"outline",onClick:()=>{sonner_dist.oR.success("Success Toast",{description:"This is a success toast message"})}},"Success"),react.createElement(shadcn_button.$,{variant:"secondary",onClick:()=>{sonner_dist.oR.info("Info Toast",{description:"This is an info toast message"})}},"Info"),react.createElement(shadcn_button.$,{variant:"outline",onClick:()=>{sonner_dist.oR.warning("Warning Toast",{description:"This is a warning toast message"})}},"Warning")))},WithActions={args:{position:"top-right",expand:!1,visibleToasts:3,closeButton:!0},render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-lg font-medium"},"Toast with Actions"),react.createElement("div",{className:"flex flex-col gap-2"},react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Undo Action",{description:"Your changes have been saved.",action:{label:"Undo",onClick:()=>console.log("Undo")}})}},"With Undo Action"),react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Multiple Actions",{description:"Would you like to continue?",action:{label:"Yes",onClick:()=>console.log("Yes clicked")},cancel:{label:"No",onClick:()=>console.log("No clicked")}})}},"With Multiple Actions")))},CustomDuration={args:{position:"top-right",expand:!1,visibleToasts:3,closeButton:!0},render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-lg font-medium"},"Custom Duration"),react.createElement("div",{className:"flex flex-col gap-2"},react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Short Duration",{description:"This toast will disappear in 2 seconds.",duration:2e3})}},"Short Duration (2s)"),react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Long Duration",{description:"This toast will disappear in 10 seconds.",duration:1e4})}},"Long Duration (10s)"),react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Persistent Toast",{description:"This toast will not disappear automatically.",duration:1/0})}},"Persistent")))},CustomStyling={render:function StylingToast(){return react.createElement("div",{className:"flex flex-col gap-2"},react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Custom Style",{description:"This toast has custom styling.",className:"bg-blue-500 text-white border-blue-600"})}},"Custom Style"),react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Custom Icon",{description:"This toast has a custom icon.",icon:"ðŸš€"})}},"Custom Icon"))}},PromiseToast={args:{position:"top-right",expand:!1,visibleToasts:3,closeButton:!0},render:()=>{const mockPromise=()=>new Promise((resolve=>{setTimeout((()=>{resolve({name:"John Doe"})}),2e3)})),mockFailedPromise=()=>new Promise(((_,reject)=>{setTimeout((()=>{reject(new Error("Failed to fetch data"))}),2e3)}));return react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-lg font-medium"},"Promise Toast"),react.createElement("div",{className:"flex flex-col gap-2"},react.createElement(shadcn_button.$,{onClick:()=>{sonner_dist.oR.promise(mockPromise,{loading:"Loading user data...",success:data=>`Successfully loaded ${data.name}`,error:"Failed to load user data"})}},"Success Promise"),react.createElement(shadcn_button.$,{onClick:()=>{sonner_dist.oR.promise(mockFailedPromise,{loading:"Loading user data...",success:"Successfully loaded user data",error:err=>`Error: ${err instanceof Error?err.message:"Unknown error"}`})}},"Failed Promise")))}},MultipleToasts={args:{position:"top-right",expand:!1,visibleToasts:3,closeButton:!0},render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-lg font-medium"},"Multiple Toasts"),react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("First Toast",{description:"This is the first toast message."}),setTimeout((()=>{sonner_dist.oR.error("Second Toast",{description:"This is the second toast message."})}),1e3),setTimeout((()=>{sonner_dist.oR.success("Third Toast",{description:"This is the third toast message."})}),2e3)}},"Show Multiple Toasts"))},CustomPosition={render:function PositionToast(){return react.createElement("div",{className:"space-y-4"},react.createElement("p",{className:"text-sm text-muted-foreground"},"Note: This example shows how to customize the Sonner component's position. The position is controlled by the Sonner component props."),react.createElement("div",{className:"flex flex-col gap-2"},react.createElement(shadcn_button.$,{onClick:()=>{(0,sonner_dist.oR)("Top Right Toast",{description:"This toast appears in the top right (default)."})}},"Show Toast")),react.createElement("div",{className:"mt-8 border-t pt-4"},react.createElement("p",{className:"text-sm font-medium mb-2"},"Different Positions:"),react.createElement("p",{className:"text-xs text-muted-foreground mb-4"},"In a real application, you would set these props on the Sonner component."),react.createElement("code",{className:"text-sm bg-muted p-2 rounded-md block"},'<Sonner position="top-right" /> // default\n<Sonner position="top-left" />\n<Sonner position="bottom-right" />\n<Sonner position="bottom-left" />\n<Sonner position="top-center" />\n<Sonner position="bottom-center" />')))}},__namedExportsOrder=["Default","Types","WithActions","CustomDuration","CustomStyling","PromiseToast","MultipleToasts","CustomPosition"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: "top-right",\n    expand: false,\n    visibleToasts: 3,\n    closeButton: true\n  },\n  render: () => <div className="flex flex-col gap-4">\n      <h3 className="text-lg font-medium">Default Toast</h3>\n      <Button onClick={() => {\n      toast("Event has been created", {\n        description: "Friday, February 10, 2023 at 5:57 PM"\n      });\n    }}>\n        Show Toast\n      </Button>\n    </div>\n}',...Default.parameters?.docs?.source},description:{story:"Default toast with a simple message.",...Default.parameters?.docs?.description}}},Types.parameters={...Types.parameters,docs:{...Types.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: "top-right",\n    expand: false,\n    visibleToasts: 3,\n    closeButton: true\n  },\n  render: () => <div className="space-y-4">\n      <h3 className="text-lg font-medium">Toast Types</h3>\n      <div className="flex flex-col gap-2">\n        <Button onClick={() => {\n        toast("Default Toast", {\n          description: "This is a default toast message"\n        });\n      }}>\n          Default\n        </Button>\n        <Button variant="destructive" onClick={() => {\n        toast.error("Error Toast", {\n          description: "This is an error toast message"\n        });\n      }}>\n          Error\n        </Button>\n        <Button variant="outline" onClick={() => {\n        toast.success("Success Toast", {\n          description: "This is a success toast message"\n        });\n      }}>\n          Success\n        </Button>\n        <Button variant="secondary" onClick={() => {\n        toast.info("Info Toast", {\n          description: "This is an info toast message"\n        });\n      }}>\n          Info\n        </Button>\n        <Button variant="outline" onClick={() => {\n        toast.warning("Warning Toast", {\n          description: "This is a warning toast message"\n        });\n      }}>\n          Warning\n        </Button>\n      </div>\n    </div>\n}',...Types.parameters?.docs?.source},description:{story:"Toast with different types.",...Types.parameters?.docs?.description}}},WithActions.parameters={...WithActions.parameters,docs:{...WithActions.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: "top-right",\n    expand: false,\n    visibleToasts: 3,\n    closeButton: true\n  },\n  render: () => <div className="space-y-4">\n      <h3 className="text-lg font-medium">Toast with Actions</h3>\n      <div className="flex flex-col gap-2">\n        <Button onClick={() => {\n        toast("Undo Action", {\n          description: "Your changes have been saved.",\n          action: {\n            label: "Undo",\n            onClick: () => console.log("Undo")\n          }\n        });\n      }}>\n          With Undo Action\n        </Button>\n        <Button onClick={() => {\n        toast("Multiple Actions", {\n          description: "Would you like to continue?",\n          action: {\n            label: "Yes",\n            onClick: () => console.log("Yes clicked")\n          },\n          cancel: {\n            label: "No",\n            onClick: () => console.log("No clicked")\n          }\n        });\n      }}>\n          With Multiple Actions\n        </Button>\n      </div>\n    </div>\n}',...WithActions.parameters?.docs?.source},description:{story:"Toast with action buttons.",...WithActions.parameters?.docs?.description}}},CustomDuration.parameters={...CustomDuration.parameters,docs:{...CustomDuration.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: "top-right",\n    expand: false,\n    visibleToasts: 3,\n    closeButton: true\n  },\n  render: () => <div className="space-y-4">\n      <h3 className="text-lg font-medium">Custom Duration</h3>\n      <div className="flex flex-col gap-2">\n        <Button onClick={() => {\n        toast("Short Duration", {\n          description: "This toast will disappear in 2 seconds.",\n          duration: 2000\n        });\n      }}>\n          Short Duration (2s)\n        </Button>\n        <Button onClick={() => {\n        toast("Long Duration", {\n          description: "This toast will disappear in 10 seconds.",\n          duration: 10000\n        });\n      }}>\n          Long Duration (10s)\n        </Button>\n        <Button onClick={() => {\n        toast("Persistent Toast", {\n          description: "This toast will not disappear automatically.",\n          duration: Infinity\n        });\n      }}>\n          Persistent\n        </Button>\n      </div>\n    </div>\n}',...CustomDuration.parameters?.docs?.source},description:{story:"Toast with custom duration.",...CustomDuration.parameters?.docs?.description}}},CustomStyling.parameters={...CustomStyling.parameters,docs:{...CustomStyling.parameters?.docs,source:{originalSource:'{\n  render: function StylingToast() {\n    return <div className="flex flex-col gap-2">\n        <Button onClick={() => {\n        toast("Custom Style", {\n          description: "This toast has custom styling.",\n          className: "bg-blue-500 text-white border-blue-600"\n        });\n      }}>\n          Custom Style\n        </Button>\n        <Button onClick={() => {\n        toast("Custom Icon", {\n          description: "This toast has a custom icon.",\n          icon: "ðŸš€"\n        });\n      }}>\n          Custom Icon\n        </Button>\n      </div>;\n  }\n}',...CustomStyling.parameters?.docs?.source},description:{story:"Toast with custom styling.",...CustomStyling.parameters?.docs?.description}}},PromiseToast.parameters={...PromiseToast.parameters,docs:{...PromiseToast.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: "top-right",\n    expand: false,\n    visibleToasts: 3,\n    closeButton: true\n  },\n  render: () => {\n    const mockPromise = () => {\n      return new Promise<{\n        name: string;\n      }>(resolve => {\n        setTimeout(() => {\n          resolve({\n            name: "John Doe"\n          });\n        }, 2000);\n      });\n    };\n    const mockFailedPromise = () => {\n      return new Promise((_, reject) => {\n        setTimeout(() => {\n          reject(new Error("Failed to fetch data"));\n        }, 2000);\n      });\n    };\n    return <div className="space-y-4">\n        <h3 className="text-lg font-medium">Promise Toast</h3>\n        <div className="flex flex-col gap-2">\n          <Button onClick={() => {\n          toast.promise(mockPromise, {\n            loading: "Loading user data...",\n            success: data => `Successfully loaded ${data.name}`,\n            error: "Failed to load user data"\n          });\n        }}>\n            Success Promise\n          </Button>\n          <Button onClick={() => {\n          toast.promise(mockFailedPromise, {\n            loading: "Loading user data...",\n            success: "Successfully loaded user data",\n            error: err => `Error: ${err instanceof Error ? err.message : "Unknown error"}`\n          });\n        }}>\n            Failed Promise\n          </Button>\n        </div>\n      </div>;\n  }\n}',...PromiseToast.parameters?.docs?.source},description:{story:"Toast with promise handling.",...PromiseToast.parameters?.docs?.description}}},MultipleToasts.parameters={...MultipleToasts.parameters,docs:{...MultipleToasts.parameters?.docs,source:{originalSource:'{\n  args: {\n    position: "top-right",\n    expand: false,\n    visibleToasts: 3,\n    closeButton: true\n  },\n  render: () => {\n    const showMultipleToasts = () => {\n      toast("First Toast", {\n        description: "This is the first toast message."\n      });\n      setTimeout(() => {\n        toast.error("Second Toast", {\n          description: "This is the second toast message."\n        });\n      }, 1000);\n      setTimeout(() => {\n        toast.success("Third Toast", {\n          description: "This is the third toast message."\n        });\n      }, 2000);\n    };\n    return <div className="space-y-4">\n        <h3 className="text-lg font-medium">Multiple Toasts</h3>\n        <Button onClick={showMultipleToasts}>Show Multiple Toasts</Button>\n      </div>;\n  }\n}',...MultipleToasts.parameters?.docs?.source},description:{story:"Multiple toasts stacked.",...MultipleToasts.parameters?.docs?.description}}},CustomPosition.parameters={...CustomPosition.parameters,docs:{...CustomPosition.parameters?.docs,source:{originalSource:'{\n  render: function PositionToast() {\n    return <div className="space-y-4">\n        <p className="text-sm text-muted-foreground">\n          Note: This example shows how to customize the Sonner component\'s\n          position. The position is controlled by the Sonner component props.\n        </p>\n        <div className="flex flex-col gap-2">\n          <Button onClick={() => {\n          toast("Top Right Toast", {\n            description: "This toast appears in the top right (default)."\n          });\n        }}>\n            Show Toast\n          </Button>\n        </div>\n        <div className="mt-8 border-t pt-4">\n          <p className="text-sm font-medium mb-2">Different Positions:</p>\n          <p className="text-xs text-muted-foreground mb-4">\n            In a real application, you would set these props on the Sonner\n            component.\n          </p>\n          <code className="text-sm bg-muted p-2 rounded-md block">\n            {`<Sonner position="top-right" /> // default\\n<Sonner position="top-left" />\\n<Sonner position="bottom-right" />\\n<Sonner position="bottom-left" />\\n<Sonner position="top-center" />\\n<Sonner position="bottom-center" />`}\n          </code>\n        </div>\n      </div>;\n  }\n}',...CustomPosition.parameters?.docs?.source},description:{story:"Custom Sonner component with different positions.",...CustomPosition.parameters?.docs?.description}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
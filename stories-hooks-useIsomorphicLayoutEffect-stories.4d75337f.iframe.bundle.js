"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[3557],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/hooks/useIsomorphicLayoutEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/hooks/misc/util.ts").Bd?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect},"./src/stories/hooks/useIsomorphicLayoutEffect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useIsomorphicLayoutEffect.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/Lifecycle/useIsomorphicLayoutEffect",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useIsomorphicLayoutEffect` is a hook that provides a safe way to use `useLayoutEffect` in both browser and server environments.\nIt automatically uses `useLayoutEffect` in the browser and falls back to `useEffect` during server-side rendering.\n\n### Module Federation Import\n```tsx\nimport { useIsomorphicLayoutEffect } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useIsomorphicLayoutEffect } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const elementRef = useRef(null);\n  const [width, setWidth] = useState(0);\n\n  useIsomorphicLayoutEffect(() => {\n    setWidth(elementRef.current.offsetWidth);\n  }, []);\n\n  return <div ref={elementRef}>Width: {width}px</div>;\n};\n```\n\n### Advanced Usage\n```tsx\nconst AnimatedList = ({ items }) => {\n  const listRef = useRef(null);\n\n  useIsomorphicLayoutEffect(() => {\n    // Measure and update layout before browser paint\n    const items = listRef.current.children;\n    const heights = Array.from(items).map(item => item.offsetHeight);\n    // Apply measurements synchronously\n    items.forEach((item, i) => {\n      item.style.top = `${heights.slice(0, i).reduce((a, b) => a + b, 0)}px`;\n    });\n  }, [items]);\n\n  return <div ref={listRef}>{items}</div>;\n};\n```\n\n### Parameters\n```tsx\neffect: EffectCallback // Effect function to run\ndeps?: DependencyList // Optional array of dependencies\n```\n\n### Returns\n```tsx\nvoid\n```\n\n### Browser Compatibility\nUses React\'s built-in hooks:\n- useLayoutEffect (browser)\n- useEffect (server)\nSupported in all environments where React runs.\n\n### Related Resources\n- [React: useLayoutEffect](https://react.dev/reference/react/useLayoutEffect)\n- [React: useEffect](https://react.dev/reference/react/useEffect)'}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Example={render:()=>{const MeasureExample=()=>{const boxRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[dimensions,setDimensions]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({width:0,height:0});return(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((()=>{boxRef.current&&setDimensions({width:boxRef.current.offsetWidth,height:boxRef.current.offsetHeight})}),[]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Element Measurement"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:boxRef,className:"bg-blue-500 text-white p-4 rounded"},"Dimensions measured on mount:",react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"font-mono mt-1"},dimensions.width,"px × ",dimensions.height,"px")))},TransitionExample=()=>{const[expanded,setExpanded]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),contentRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[height,setHeight]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("auto");return(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((()=>{if(contentRef.current){const newHeight=contentRef.current.scrollHeight;setHeight(expanded?newHeight:48)}}),[expanded]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Smooth Height Transition"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 rounded overflow-hidden"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:contentRef,style:{height:"number"==typeof height?`${height}px`:height},className:"transition-all duration-300 ease-in-out"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"p-4"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"This is a long text that demonstrates smooth height transitions. When you click the button below, this container will smoothly expand or collapse to show or hide the full content."),expanded&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"mt-4 text-slate-600 dark:text-slate-400"},"This additional content appears and disappears with a smooth height animation. The transition is handled by measuring the content height before the browser paints the changes."))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setExpanded(!expanded),className:"w-full p-2 bg-slate-200 dark:bg-slate-600 text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-500 transition-colors"},expanded?"Show Less ↑":"Show More ↓")))};return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-[400px]"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(MeasureExample,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(TransitionExample,null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},'Check out how measurements are taken instantly! Click "Show More" to see smooth height transitions powered by useIsomorphicLayoutEffect! 📏'))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Example 1: Measure and display element dimensions\n    const MeasureExample = () => {\n      const boxRef = useRef<HTMLDivElement>(null);\n      const [dimensions, setDimensions] = useState({\n        width: 0,\n        height: 0\n      });\n      useIsomorphicLayoutEffect(() => {\n        if (boxRef.current) {\n          setDimensions({\n            width: boxRef.current.offsetWidth,\n            height: boxRef.current.offsetHeight\n          });\n        }\n      }, []);\n      return <div className="space-y-2">\n          <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n            Element Measurement\n          </h3>\n          <div ref={boxRef} className="bg-blue-500 text-white p-4 rounded">\n            Dimensions measured on mount:\n            <div className="font-mono mt-1">\n              {dimensions.width}px × {dimensions.height}px\n            </div>\n          </div>\n        </div>;\n    };\n\n    // Example 2: Smooth height transition\n    const TransitionExample = () => {\n      const [expanded, setExpanded] = useState(false);\n      const contentRef = useRef<HTMLDivElement>(null);\n      const [height, setHeight] = useState<number | "auto">("auto");\n      useIsomorphicLayoutEffect(() => {\n        if (contentRef.current) {\n          const newHeight = contentRef.current.scrollHeight;\n          setHeight(expanded ? newHeight : 48);\n        }\n      }, [expanded]);\n      return <div className="space-y-2">\n          <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n            Smooth Height Transition\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-700 rounded overflow-hidden">\n            <div ref={contentRef} style={{\n            height: typeof height === "number" ? `${height}px` : height\n          }} className="transition-all duration-300 ease-in-out">\n              <div className="p-4">\n                <p className="text-slate-700 dark:text-slate-300">\n                  This is a long text that demonstrates smooth height\n                  transitions. When you click the button below, this container\n                  will smoothly expand or collapse to show or hide the full\n                  content.\n                </p>\n                {expanded && <p className="mt-4 text-slate-600 dark:text-slate-400">\n                    This additional content appears and disappears with a smooth\n                    height animation. The transition is handled by measuring the\n                    content height before the browser paints the changes.\n                  </p>}\n              </div>\n            </div>\n            <button onClick={() => setExpanded(!expanded)} className="w-full p-2 bg-slate-200 dark:bg-slate-600 text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-500 transition-colors">\n              {expanded ? "Show Less ↑" : "Show More ↓"}\n            </button>\n          </div>\n        </div>;\n    };\n    return <div className="w-[400px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6">\n          <MeasureExample />\n          <TransitionExample />\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              Check out how measurements are taken instantly! Click "Show More"\n              to see smooth height transitions powered by\n              useIsomorphicLayoutEffect! 📏\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
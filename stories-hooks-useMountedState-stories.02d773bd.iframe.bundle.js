"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[5292],{"./src/hooks/useMountedState.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useMountedState});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useMountedState(){const mountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),get=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>mountedRef.current),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(mountedRef.current=!0,()=>{mountedRef.current=!1})),[]),get}},"./src/stories/hooks/useMountedState.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks_useMountedState__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useMountedState.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/Lifecycle/useMountedState",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useMountedState` is a hook that returns a function which tells you if the component is currently mounted.\nIt\'s particularly useful for preventing state updates on unmounted components in async operations.\n\n### Module Federation Import\n```tsx\nimport { useMountedState } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useMountedState } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const isMounted = useMountedState();\n\n  useEffect(() => {\n    fetchData().then(data => {\n      // Only update state if component is still mounted\n      if (isMounted()) {\n        setData(data);\n      }\n    });\n  }, []);\n\n  return <div>Safe async updates!</div>;\n};\n```\n\n### Parameters\n```tsx\nuseMountedState(): () => boolean\n```\n\n### Returns\n```tsx\n() => boolean // Function that returns true if component is mounted, false otherwise\n```\n\n### Browser Compatibility\nUses standard React hooks (useCallback, useEffect, useRef).\nSupported in all modern browsers.\n\n### Related Resources\n- [React useEffect Hook](https://react.dev/reference/react/useEffect)\n- [React Component Lifecycle](https://react.dev/learn/lifecycle-of-reactive-effects)'}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},AsyncChild=()=>{const isMounted=(0,_hooks_useMountedState__WEBPACK_IMPORTED_MODULE_2__.A)(),[data,setData]=react__WEBPACK_IMPORTED_MODULE_0__.useState(null),[status,setStatus]=react__WEBPACK_IMPORTED_MODULE_0__.useState("idle");return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{(async()=>{setStatus("loading");try{await new Promise((resolve=>setTimeout(resolve,2e3))),isMounted()&&(setData("🎉 Data loaded successfully!"),setStatus("success"))}catch(error){isMounted()&&setStatus("error")}})()}),[]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-slate-900 dark:text-slate-100"},"Mounted Status: ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-green-500"},"true")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-slate-900 dark:text-slate-100"},"Loading Status:"," ","loading"===status&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-blue-500"},"Loading..."),"success"===status&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-green-500"},"Success!"),"error"===status&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-red-500"},"Error!")),data&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-slate-900 dark:text-slate-100"},"Data: ",data)))},MountedStateExample=()=>{const[showChild,setShowChild]=react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-[400px] space-y-4"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex flex-col items-center gap-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setShowChild(!0),className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors",disabled:showChild},"Mount Component"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setShowChild(!1),className:"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600 transition-colors",disabled:!showChild},"Unmount Component")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"min-h-[100px] flex items-center justify-center"},showChild&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(AsyncChild,null)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Mount the component and watch it load data. Try unmounting while loading - the state won't update after unmount! 🛡️")))},Example={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(MountedStateExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <MountedStateExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[1332],{"./src/hooks/useCustomCompareEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=(effect,deps,depsEqual)=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);ref.current&&depsEqual(deps,ref.current)||(ref.current=deps),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect,ref.current)}},"./src/stories/hooks/useCustomCompareEffect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useCustomCompareEffect.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/Lifecycle/useCustomCompareEffect",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:"`useCustomCompareEffect` is a hook that works like useEffect but allows custom comparison of dependencies.\nIt's useful when dealing with complex objects or arrays where reference equality isn't sufficient.\n\n### Module Federation Import\n```tsx\nimport { useCustomCompareEffect } from \"@core/hooks\";\n```\n\n### NPM Package Import\n```tsx\nimport { useCustomCompareEffect } from \"@bernz322/core/hooks\";\n```\n\n### Basic Usage\n```tsx\nconst Component = ({ user }) => {\n  useCustomCompareEffect(\n    () => {\n      console.log('User data changed');\n    },\n    [user],\n    (prevDeps, nextDeps) => prevDeps[0].id === nextDeps[0].id\n  );\n\n  return <div>{user.name}</div>;\n};\n```\n\n### Parameters\n```tsx\nuseCustomCompareEffect<TDeps extends DependencyList>(\n  effect: EffectCallback, // Effect to run\n  deps: TDeps, // Dependencies array\n  depsEqual: (prevDeps: TDeps, nextDeps: TDeps) => boolean // Custom comparison\n): void\n```\n\n### Important Notes\n- Don't use with empty dependency array (use useEffect instead)\n- Don't use with only primitive values (use useEffect instead)\n- Always provide a depsEqual function for comparison\n\n### Browser Compatibility\nUses standard React hooks, supported in all modern browsers."}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Example={render:()=>{const[user,setUser]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({id:1,name:"John Doe",role:"Admin"}),[product,setProduct]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({id:1,name:"Widget",price:9.99,tags:["new","featured"]}),[effectLogs,setEffectLogs]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),addLog=message=>{setEffectLogs((prev=>[message,...prev].slice(0,5)))};return(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((()=>{addLog(`User effect ran - ID: ${user.id}`)}),[user],((prevDeps,nextDeps)=>prevDeps[0].id===nextDeps[0].id)),(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((()=>{addLog(`Product effect ran - ID: ${product.id}`)}),[product],((prevDeps,nextDeps)=>{const prev=prevDeps[0],next=nextDeps[0];return prev.id===next.id&&prev.price===next.price&&prev.tags.length===next.tags.length&&prev.tags.every(((tag,i)=>next.tags[i]===tag))})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-6 max-w-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Custom Compare Effect Examples"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-6"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",{className:"text-sm font-medium text-slate-700 dark:text-slate-300"},"User Updates (Compare by ID)"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-700 p-3 rounded-md"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex items-center justify-between mb-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-sm text-slate-600 dark:text-slate-400"},"Current User:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-sm font-medium text-slate-900 dark:text-slate-100"},"ID: ",user.id,", ",user.name,", ",user.role)),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setUser({...user,name:"Jane Doe"}),className:"px-3 py-1 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded transition-colors"},"Change Name"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setUser({...user,role:"User"}),className:"px-3 py-1 bg-green-500 hover:bg-green-600 text-white text-sm rounded transition-colors"},"Change Role"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setUser({...user,id:user.id+1}),className:"px-3 py-1 bg-purple-500 hover:bg-purple-600 text-white text-sm rounded transition-colors"},"Change ID")))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",{className:"text-sm font-medium text-slate-700 dark:text-slate-300"},"Product Updates (Compare Multiple Properties)"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-700 p-3 rounded-md"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex items-center justify-between mb-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-sm text-slate-600 dark:text-slate-400"},"Current Product:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-sm font-medium text-slate-900 dark:text-slate-100"},product.name," - $",product.price," [",product.tags.join(", "),"]")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setProduct({...product,name:"Super Widget"}),className:"px-3 py-1 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded transition-colors"},"Change Name"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setProduct({...product,price:product.price+1}),className:"px-3 py-1 bg-green-500 hover:bg-green-600 text-white text-sm rounded transition-colors"},"Change Price"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setProduct({...product,tags:[...product.tags,"sale"]}),className:"px-3 py-1 bg-yellow-500 hover:bg-yellow-600 text-white text-sm rounded transition-colors"},"Add Tag")))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h4",{className:"text-sm font-medium text-slate-700 dark:text-slate-300"},"Effect Logs"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-700 dark:bg-slate-900 p-3 rounded-md space-y-1"},effectLogs.map(((log,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key:index,className:"text-sm font-mono text-slate-300 dark:text-slate-400"},log))),0===effectLogs.length&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-slate-400 dark:text-slate-500 italic"},"No effects triggered yet"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try updating different properties and observe when the effects are triggered! 🔍"))))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // User example state\n    const [user, setUser] = useState<User>({\n      id: 1,\n      name: "John Doe",\n      role: "Admin"\n    });\n\n    // Product example state\n    const [product, setProduct] = useState<Product>({\n      id: 1,\n      name: "Widget",\n      price: 9.99,\n      tags: ["new", "featured"]\n    });\n\n    // Effect logs for display\n    const [effectLogs, setEffectLogs] = useState<string[]>([]);\n    const addLog = (message: string) => {\n      setEffectLogs(prev => [message, ...prev].slice(0, 5));\n    };\n\n    // User comparison effect\n    useCustomCompareEffect(() => {\n      addLog(`User effect ran - ID: ${user.id}`);\n    }, [user], (prevDeps, nextDeps) => {\n      // Only trigger if user ID changes\n      return prevDeps[0].id === nextDeps[0].id;\n    });\n\n    // Product comparison effect\n    useCustomCompareEffect(() => {\n      addLog(`Product effect ran - ID: ${product.id}`);\n    }, [product], (prevDeps, nextDeps) => {\n      // Compare specific product properties\n      const prev = prevDeps[0] as Product;\n      const next = nextDeps[0] as Product;\n      return prev.id === next.id && prev.price === next.price && prev.tags.length === next.tags.length && prev.tags.every((tag, i) => next.tags[i] === tag);\n    });\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Custom Compare Effect Examples\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="space-y-6">\n              {/* User Example */}\n              <div className="space-y-2">\n                <h4 className="text-sm font-medium text-slate-700 dark:text-slate-300">\n                  User Updates (Compare by ID)\n                </h4>\n                <div className="bg-white dark:bg-slate-700 p-3 rounded-md">\n                  <div className="flex items-center justify-between mb-2">\n                    <span className="text-sm text-slate-600 dark:text-slate-400">\n                      Current User:\n                    </span>\n                    <span className="text-sm font-medium text-slate-900 dark:text-slate-100">\n                      ID: {user.id}, {user.name}, {user.role}\n                    </span>\n                  </div>\n                  <div className="flex space-x-2">\n                    <button onClick={() => setUser({\n                    ...user,\n                    name: "Jane Doe"\n                  })} className="px-3 py-1 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded transition-colors">\n                      Change Name\n                    </button>\n                    <button onClick={() => setUser({\n                    ...user,\n                    role: "User"\n                  })} className="px-3 py-1 bg-green-500 hover:bg-green-600 text-white text-sm rounded transition-colors">\n                      Change Role\n                    </button>\n                    <button onClick={() => setUser({\n                    ...user,\n                    id: user.id + 1\n                  })} className="px-3 py-1 bg-purple-500 hover:bg-purple-600 text-white text-sm rounded transition-colors">\n                      Change ID\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Product Example */}\n              <div className="space-y-2">\n                <h4 className="text-sm font-medium text-slate-700 dark:text-slate-300">\n                  Product Updates (Compare Multiple Properties)\n                </h4>\n                <div className="bg-white dark:bg-slate-700 p-3 rounded-md">\n                  <div className="flex items-center justify-between mb-2">\n                    <span className="text-sm text-slate-600 dark:text-slate-400">\n                      Current Product:\n                    </span>\n                    <span className="text-sm font-medium text-slate-900 dark:text-slate-100">\n                      {product.name} - ${product.price} [\n                      {product.tags.join(", ")}]\n                    </span>\n                  </div>\n                  <div className="flex space-x-2">\n                    <button onClick={() => setProduct({\n                    ...product,\n                    name: "Super Widget"\n                  })} className="px-3 py-1 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded transition-colors">\n                      Change Name\n                    </button>\n                    <button onClick={() => setProduct({\n                    ...product,\n                    price: product.price + 1\n                  })} className="px-3 py-1 bg-green-500 hover:bg-green-600 text-white text-sm rounded transition-colors">\n                      Change Price\n                    </button>\n                    <button onClick={() => setProduct({\n                    ...product,\n                    tags: [...product.tags, "sale"]\n                  })} className="px-3 py-1 bg-yellow-500 hover:bg-yellow-600 text-white text-sm rounded transition-colors">\n                      Add Tag\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              {/* Effect Logs */}\n              <div className="space-y-2">\n                <h4 className="text-sm font-medium text-slate-700 dark:text-slate-300">\n                  Effect Logs\n                </h4>\n                <div className="bg-slate-700 dark:bg-slate-900 p-3 rounded-md space-y-1">\n                  {effectLogs.map((log, index) => <div key={index} className="text-sm font-mono text-slate-300 dark:text-slate-400">\n                      {log}\n                    </div>)}\n                  {effectLogs.length === 0 && <div className="text-sm text-slate-400 dark:text-slate-500 italic">\n                      No effects triggered yet\n                    </div>}\n                </div>\n              </div>\n\n              {/* Instructions */}\n              <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n                <p className="text-sm text-blue-600 dark:text-blue-400">\n                  Try updating different properties and observe when the effects\n                  are triggered! 🔍\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
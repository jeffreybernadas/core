"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2136],{"./src/components/shadcn/toggle.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>Toggle,v:()=>toggleVariants});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_toggle__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@radix-ui/react-toggle/dist/index.mjs"),class_variance_authority__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),_lib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/utils.ts");const toggleVariants=(0,class_variance_authority__WEBPACK_IMPORTED_MODULE_1__.F)("inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap",{variants:{variant:{default:"bg-transparent",outline:"border border-black dark:border-white bg-transparent shadow-xs hover:bg-accent hover:text-accent-foreground"},size:{default:"h-9 px-2 min-w-9",sm:"h-8 px-1.5 min-w-8",lg:"h-10 px-2.5 min-w-10"}},defaultVariants:{variant:"default",size:"default"}});function Toggle({className,variant,size,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_toggle__WEBPACK_IMPORTED_MODULE_2__.b,{"data-slot":"toggle",className:(0,_lib__WEBPACK_IMPORTED_MODULE_3__.cn)(toggleVariants({variant,size,className})),...props})}Toggle.__docgenInfo={description:"",methods:[],displayName:"Toggle"}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))},"./src/stories/components/shadcn/toggle-group.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStyling:()=>CustomStyling,Default:()=>Default,DisabledItems:()=>DisabledItems,MultipleSelection:()=>MultipleSelection,Sizes:()=>Sizes,ThemeToggle:()=>ThemeToggle,Variants:()=>Variants,WithLabels:()=>WithLabels,__namedExportsOrder:()=>__namedExportsOrder,default:()=>toggle_group_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/react-toggle-group/dist/index.mjs"),utils=__webpack_require__("./src/lib/utils.ts"),toggle=__webpack_require__("./src/components/shadcn/toggle.tsx");const ToggleGroupContext=react.createContext({size:"default",variant:"default"});function ToggleGroup({className,variant,size,children,...props}){return react.createElement(dist.bL,{"data-slot":"toggle-group","data-variant":variant,"data-size":size,className:(0,utils.cn)("group/toggle-group flex w-fit items-center rounded-md data-[variant=outline]:shadow-xs",className),...props},react.createElement(ToggleGroupContext.Provider,{value:{variant,size}},children))}function ToggleGroupItem({className,children,variant,size,...props}){const context=react.useContext(ToggleGroupContext);return react.createElement(dist.q7,{"data-slot":"toggle-group-item","data-variant":context.variant||variant,"data-size":context.size||size,className:(0,utils.cn)((0,toggle.v)({variant:context.variant||variant,size:context.size||size}),"min-w-0 flex-1 shrink-0 rounded-none shadow-none first:rounded-l-md last:rounded-r-md focus:z-10 focus-visible:z-10 data-[variant=outline]:border-l-0 data-[variant=outline]:first:border-l",className),...props},children)}ToggleGroup.__docgenInfo={description:"",methods:[],displayName:"ToggleGroup"},ToggleGroupItem.__docgenInfo={description:"",methods:[],displayName:"ToggleGroupItem"};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx"),align_left=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/align-left.js"),align_center=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/align-center.js"),align_right=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/align-right.js"),align_justify=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/align-justify.js"),bold=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/bold.js"),italic=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/italic.js"),underline=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/underline.js"),layout_list=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/layout-list.js"),layout_grid=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/layout-grid.js"),list=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/list.js"),list_ordered=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/list-ordered.js"),sun=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/sun.js"),moon=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/moon.js"),laptop=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/laptop.js");const toggle_group_stories={title:"Components/Shadcn/ToggleGroup",component:ToggleGroup,parameters:{layout:"centered",docs:{description:{component:"A set of two-state buttons that can be toggled on or off.\n\nSee the [Shadcn docs](https://ui.shadcn.com/docs/components/toggle-group) for more information."}}},tags:["autodocs","stable","version:2.3.0"],argTypes:{children:{control:!1,description:"The content of the toggle group",table:{type:{summary:"React.ReactNode"}}},className:{control:"text",description:"The class name of the toggle group",table:{type:{summary:"string"}}},variant:{control:"select",options:["default","outline"],description:"The variant of the toggle group",table:{type:{summary:"string"}}},size:{control:"select",options:["sm","default","lg"],description:"The size of the toggle group",table:{type:{summary:"string"}}},type:{control:"select",options:["single","multiple"],description:"The type of the toggle group",table:{type:{summary:"string"}}},defaultValue:{control:"text",description:"The value of the default toggle group item",table:{type:{summary:"string"}}}},decorators:[(Story,{args})=>react.createElement(ThemeProvider.N,null,react.createElement("div",{className:"w-full max-w-md"},react.createElement(Story,args)))]},Default={args:{type:"single",defaultValue:"center"},render:args=>react.createElement(ToggleGroup,args,react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right"},react.createElement(align_right.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"justify","aria-label":"Justify"},react.createElement(align_justify.A,{className:"h-4 w-4"})))},MultipleSelection={render:()=>react.createElement(ToggleGroup,{type:"multiple",defaultValue:["bold"],"aria-label":"Text formatting"},react.createElement(ToggleGroupItem,{value:"bold","aria-label":"Bold"},react.createElement(bold.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"italic","aria-label":"Italic"},react.createElement(italic.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"underline","aria-label":"Underline"},react.createElement(underline.A,{className:"h-4 w-4"})))},WithLabels={render:()=>react.createElement(ToggleGroup,{type:"single",defaultValue:"list","aria-label":"View options"},react.createElement(ToggleGroupItem,{value:"list","aria-label":"List view"},react.createElement(layout_list.A,{className:"h-4 w-4 mr-2"}),"List"),react.createElement(ToggleGroupItem,{value:"grid","aria-label":"Grid view"},react.createElement(layout_grid.A,{className:"h-4 w-4 mr-2"}),"Grid"))},DisabledItems={render:()=>react.createElement(ToggleGroup,{type:"single",defaultValue:"list","aria-label":"List type"},react.createElement(ToggleGroupItem,{value:"list","aria-label":"Unordered list"},react.createElement(list.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"ordered","aria-label":"Ordered list"},react.createElement(list_ordered.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"checklist","aria-label":"Checklist",disabled:!0},react.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"h-4 w-4"},react.createElement("path",{d:"M8 6h13"}),react.createElement("path",{d:"M8 12h13"}),react.createElement("path",{d:"M8 18h13"}),react.createElement("path",{d:"M3 6l1 1"}),react.createElement("path",{d:"M3 12l1 1"}),react.createElement("path",{d:"M3 18l1 1"}))))},Sizes={render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("div",null,react.createElement("h3",{className:"mb-2 text-sm font-medium"},"Small"),react.createElement(ToggleGroup,{type:"single",size:"sm",defaultValue:"center"},react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right"},react.createElement(align_right.A,{className:"h-4 w-4"})))),react.createElement("div",null,react.createElement("h3",{className:"mb-2 text-sm font-medium"},"Default"),react.createElement(ToggleGroup,{type:"single",defaultValue:"center"},react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right"},react.createElement(align_right.A,{className:"h-4 w-4"})))),react.createElement("div",null,react.createElement("h3",{className:"mb-2 text-sm font-medium"},"Large"),react.createElement(ToggleGroup,{type:"single",size:"lg",defaultValue:"center"},react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right"},react.createElement(align_right.A,{className:"h-4 w-4"})))))},Variants={render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("div",null,react.createElement("h3",{className:"mb-2 text-sm font-medium"},"Default"),react.createElement(ToggleGroup,{type:"single",defaultValue:"center"},react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right"},react.createElement(align_right.A,{className:"h-4 w-4"})))),react.createElement("div",null,react.createElement("h3",{className:"mb-2 text-sm font-medium"},"Outline"),react.createElement(ToggleGroup,{type:"single",variant:"outline",defaultValue:"center"},react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right"},react.createElement(align_right.A,{className:"h-4 w-4"})))))},ThemeToggle={render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-sm font-medium"},"Theme"),react.createElement(ToggleGroup,{type:"single",defaultValue:"system"},react.createElement(ToggleGroupItem,{value:"light","aria-label":"Light theme"},react.createElement(sun.A,{className:"h-4 w-4 mr-2"}),"Light"),react.createElement(ToggleGroupItem,{value:"dark","aria-label":"Dark theme"},react.createElement(moon.A,{className:"h-4 w-4 mr-2"}),"Dark"),react.createElement(ToggleGroupItem,{value:"system","aria-label":"System theme"},react.createElement(laptop.A,{className:"h-4 w-4 mr-2"}),"System")))},CustomStyling={render:()=>react.createElement("div",{className:"space-y-4"},react.createElement("h3",{className:"text-sm font-medium"},"Custom Styling"),react.createElement(ToggleGroup,{type:"single",defaultValue:"center",className:"border-primary"},react.createElement(ToggleGroupItem,{value:"left","aria-label":"Align left",className:"data-[state=on]:bg-primary data-[state=on]:text-primary-foreground"},react.createElement(align_left.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"center","aria-label":"Align center",className:"data-[state=on]:bg-primary data-[state=on]:text-primary-foreground"},react.createElement(align_center.A,{className:"h-4 w-4"})),react.createElement(ToggleGroupItem,{value:"right","aria-label":"Align right",className:"data-[state=on]:bg-primary data-[state=on]:text-primary-foreground"},react.createElement(align_right.A,{className:"h-4 w-4"}))))},__namedExportsOrder=["Default","MultipleSelection","WithLabels","DisabledItems","Sizes","Variants","ThemeToggle","CustomStyling"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    type: "single",\n    defaultValue: "center"\n  },\n  render: args => <ToggleGroup {...args}>\n      <ToggleGroupItem value="left" aria-label="Align left">\n        <AlignLeft className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="center" aria-label="Align center">\n        <AlignCenter className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="right" aria-label="Align right">\n        <AlignRight className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="justify" aria-label="Justify">\n        <AlignJustify className="h-4 w-4" />\n      </ToggleGroupItem>\n    </ToggleGroup>\n}',...Default.parameters?.docs?.source},description:{story:"Default toggle group with text alignment options.",...Default.parameters?.docs?.description}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:'{\n  render: () => <ToggleGroup type="multiple" defaultValue={["bold"]} aria-label="Text formatting">\n      <ToggleGroupItem value="bold" aria-label="Bold">\n        <Bold className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="italic" aria-label="Italic">\n        <Italic className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="underline" aria-label="Underline">\n        <Underline className="h-4 w-4" />\n      </ToggleGroupItem>\n    </ToggleGroup>\n}',...MultipleSelection.parameters?.docs?.source},description:{story:"Toggle group with multiple selection.",...MultipleSelection.parameters?.docs?.description}}},WithLabels.parameters={...WithLabels.parameters,docs:{...WithLabels.parameters?.docs,source:{originalSource:'{\n  render: () => <ToggleGroup type="single" defaultValue="list" aria-label="View options">\n      <ToggleGroupItem value="list" aria-label="List view">\n        <LayoutList className="h-4 w-4 mr-2" />\n        List\n      </ToggleGroupItem>\n      <ToggleGroupItem value="grid" aria-label="Grid view">\n        <LayoutGrid className="h-4 w-4 mr-2" />\n        Grid\n      </ToggleGroupItem>\n    </ToggleGroup>\n}',...WithLabels.parameters?.docs?.source},description:{story:"Toggle group with text labels.",...WithLabels.parameters?.docs?.description}}},DisabledItems.parameters={...DisabledItems.parameters,docs:{...DisabledItems.parameters?.docs,source:{originalSource:'{\n  render: () => <ToggleGroup type="single" defaultValue="list" aria-label="List type">\n      <ToggleGroupItem value="list" aria-label="Unordered list">\n        <List className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="ordered" aria-label="Ordered list">\n        <ListOrdered className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="checklist" aria-label="Checklist" disabled>\n        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="h-4 w-4">\n          <path d="M8 6h13" />\n          <path d="M8 12h13" />\n          <path d="M8 18h13" />\n          <path d="M3 6l1 1" />\n          <path d="M3 12l1 1" />\n          <path d="M3 18l1 1" />\n        </svg>\n      </ToggleGroupItem>\n    </ToggleGroup>\n}',...DisabledItems.parameters?.docs?.source},description:{story:"Toggle group with disabled items.",...DisabledItems.parameters?.docs?.description}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <div>\n        <h3 className="mb-2 text-sm font-medium">Small</h3>\n        <ToggleGroup type="single" size="sm" defaultValue="center">\n          <ToggleGroupItem value="left" aria-label="Align left">\n            <AlignLeft className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="center" aria-label="Align center">\n            <AlignCenter className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="right" aria-label="Align right">\n            <AlignRight className="h-4 w-4" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n      </div>\n      <div>\n        <h3 className="mb-2 text-sm font-medium">Default</h3>\n        <ToggleGroup type="single" defaultValue="center">\n          <ToggleGroupItem value="left" aria-label="Align left">\n            <AlignLeft className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="center" aria-label="Align center">\n            <AlignCenter className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="right" aria-label="Align right">\n            <AlignRight className="h-4 w-4" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n      </div>\n      <div>\n        <h3 className="mb-2 text-sm font-medium">Large</h3>\n        <ToggleGroup type="single" size="lg" defaultValue="center">\n          <ToggleGroupItem value="left" aria-label="Align left">\n            <AlignLeft className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="center" aria-label="Align center">\n            <AlignCenter className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="right" aria-label="Align right">\n            <AlignRight className="h-4 w-4" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n      </div>\n    </div>\n}',...Sizes.parameters?.docs?.source},description:{story:"Toggle group with different sizes.",...Sizes.parameters?.docs?.description}}},Variants.parameters={...Variants.parameters,docs:{...Variants.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <div>\n        <h3 className="mb-2 text-sm font-medium">Default</h3>\n        <ToggleGroup type="single" defaultValue="center">\n          <ToggleGroupItem value="left" aria-label="Align left">\n            <AlignLeft className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="center" aria-label="Align center">\n            <AlignCenter className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="right" aria-label="Align right">\n            <AlignRight className="h-4 w-4" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n      </div>\n      <div>\n        <h3 className="mb-2 text-sm font-medium">Outline</h3>\n        <ToggleGroup type="single" variant="outline" defaultValue="center">\n          <ToggleGroupItem value="left" aria-label="Align left">\n            <AlignLeft className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="center" aria-label="Align center">\n            <AlignCenter className="h-4 w-4" />\n          </ToggleGroupItem>\n          <ToggleGroupItem value="right" aria-label="Align right">\n            <AlignRight className="h-4 w-4" />\n          </ToggleGroupItem>\n        </ToggleGroup>\n      </div>\n    </div>\n}',...Variants.parameters?.docs?.source},description:{story:"Toggle group with variants.",...Variants.parameters?.docs?.description}}},ThemeToggle.parameters={...ThemeToggle.parameters,docs:{...ThemeToggle.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <h3 className="text-sm font-medium">Theme</h3>\n      <ToggleGroup type="single" defaultValue="system">\n        <ToggleGroupItem value="light" aria-label="Light theme">\n          <Sun className="h-4 w-4 mr-2" />\n          Light\n        </ToggleGroupItem>\n        <ToggleGroupItem value="dark" aria-label="Dark theme">\n          <Moon className="h-4 w-4 mr-2" />\n          Dark\n        </ToggleGroupItem>\n        <ToggleGroupItem value="system" aria-label="System theme">\n          <Laptop className="h-4 w-4 mr-2" />\n          System\n        </ToggleGroupItem>\n      </ToggleGroup>\n    </div>\n}',...ThemeToggle.parameters?.docs?.source},description:{story:"Toggle group for theme selection.",...ThemeToggle.parameters?.docs?.description}}},CustomStyling.parameters={...CustomStyling.parameters,docs:{...CustomStyling.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="space-y-4">\n      <h3 className="text-sm font-medium">Custom Styling</h3>\n      <ToggleGroup type="single" defaultValue="center" className="border-primary">\n        <ToggleGroupItem value="left" aria-label="Align left" className="data-[state=on]:bg-primary data-[state=on]:text-primary-foreground">\n          <AlignLeft className="h-4 w-4" />\n        </ToggleGroupItem>\n        <ToggleGroupItem value="center" aria-label="Align center" className="data-[state=on]:bg-primary data-[state=on]:text-primary-foreground">\n          <AlignCenter className="h-4 w-4" />\n        </ToggleGroupItem>\n        <ToggleGroupItem value="right" aria-label="Align right" className="data-[state=on]:bg-primary data-[state=on]:text-primary-foreground">\n          <AlignRight className="h-4 w-4" />\n        </ToggleGroupItem>\n      </ToggleGroup>\n    </div>\n}',...CustomStyling.parameters?.docs?.source},description:{story:"Toggle group with custom styling.",...CustomStyling.parameters?.docs?.description}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[3567],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/stories/hooks/useClickAway.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useClickAway_stories});var react=__webpack_require__("./node_modules/react/index.js"),util=__webpack_require__("./src/hooks/misc/util.ts");const defaultEvents=["mousedown","touchstart"],hooks_useClickAway=(ref,onClickAway,events=defaultEvents)=>{const savedCallback=(0,react.useRef)(onClickAway);(0,react.useEffect)((()=>{savedCallback.current=onClickAway}),[onClickAway]),(0,react.useEffect)((()=>{const handler=event=>{const{current:el}=ref;el&&!el.contains(event.target)&&savedCallback.current(event)};for(const eventName of events)(0,util.on)(document,eventName,handler);return()=>{for(const eventName of events)(0,util.AU)(document,eventName,handler)}}),[events,ref])};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useClickAway_stories={title:"Hooks/Event & Interaction/useClickAway",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useClickAway` is a hook that detects clicks outside a specified element.\nIt\'s useful for implementing dropdowns, modals, and other interactive components that need to close when clicking outside.\n\n### Module Federation Import\n```tsx\nimport { useClickAway } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useClickAway } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef(null);\n\n  useClickAway(ref, () => {\n    setIsOpen(false);\n  });\n\n  return (\n    <div ref={ref}>\n      <button onClick={() => setIsOpen(true)}>Open Menu</button>\n      {isOpen && <div>Menu Content</div>}\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseClickAway<E extends Event = Event>(\n  ref: RefObject<HTMLElement | null>, // Reference to the element to monitor\n  onClickAway: (event: E) => void, // Callback when click occurs outside\n  events?: string[] // Optional array of event names to listen for\n): void\n```\n\n### Browser Compatibility\n- Uses standard DOM events, supported in all modern browsers\n- Default events: mousedown, touchstart\n- Custom events can be specified for advanced use cases\n\n### Related Resources\n- [MDN: Event reference](https://developer.mozilla.org/en-US/docs/Web/Events)\n- [MDN: Element.contains()](https://developer.mozilla.org/en-US/docs/Web/API/Node/contains)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},Example={render:()=>{const[activeComponent,setActiveComponent]=(0,react.useState)(null),dropdownRef=(0,react.useRef)(null);hooks_useClickAway(dropdownRef,(()=>{"dropdown"===activeComponent&&setActiveComponent(null)}));const modalRef=(0,react.useRef)(null);hooks_useClickAway(modalRef,(()=>{"modal"===activeComponent&&setActiveComponent(null)}));const customRef=(0,react.useRef)(null);return hooks_useClickAway(customRef,(()=>{"custom"===activeComponent&&setActiveComponent(null)}),["mousedown","touchstart","contextmenu"]),react.createElement("div",{className:"space-y-6 max-w-lg"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Click Away Examples"),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react.createElement("div",{className:"grid grid-cols-3 gap-4"},react.createElement("div",{className:"relative",ref:dropdownRef},react.createElement("button",{onClick:()=>setActiveComponent("dropdown"),className:"w-full px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition-colors"},"Dropdown"),"dropdown"===activeComponent&&react.createElement("div",{className:"absolute top-full left-0 mt-1 w-48 bg-white dark:bg-slate-700 rounded-md shadow-lg border border-slate-200 dark:border-slate-600 py-1"},react.createElement("div",{className:"px-4 py-2 text-sm text-slate-700 dark:text-slate-300"},"Click outside to close"),react.createElement("hr",{className:"my-1 border-slate-200 dark:border-slate-600"}),react.createElement("a",{href:"#",className:"block px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-600",onClick:e=>e.preventDefault()},"Option 1"),react.createElement("a",{href:"#",className:"block px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-600",onClick:e=>e.preventDefault()},"Option 2"))),react.createElement("div",{className:"relative",ref:modalRef},react.createElement("button",{onClick:()=>setActiveComponent("modal"),className:"w-full px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-md transition-colors"},"Modal"),"modal"===activeComponent&&react.createElement("div",{className:"fixed inset-0 flex items-center justify-center z-50"},react.createElement("div",{className:"absolute inset-0 bg-black bg-opacity-50"}),react.createElement("div",{className:"relative bg-white dark:bg-slate-700 rounded-lg shadow-xl p-6 max-w-sm mx-auto"},react.createElement("h4",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Modal Content"),react.createElement("p",{className:"text-sm text-slate-600 dark:text-slate-400"},"Click outside the modal to close it. This is a common pattern in web applications.")))),react.createElement("div",{className:"relative",ref:customRef},react.createElement("button",{onClick:()=>setActiveComponent("custom"),className:"w-full px-4 py-2 bg-purple-500 hover:bg-purple-600 text-white rounded-md transition-colors"},"Custom Events"),"custom"===activeComponent&&react.createElement("div",{className:"absolute top-full right-0 mt-1 w-64 bg-white dark:bg-slate-700 rounded-md shadow-lg border border-slate-200 dark:border-slate-600 p-4"},react.createElement("div",{className:"text-sm text-slate-700 dark:text-slate-300"},"This menu closes on:",react.createElement("ul",{className:"list-disc list-inside mt-2 space-y-1 text-xs"},react.createElement("li",null,"Left click outside"),react.createElement("li",null,"Touch outside"),react.createElement("li",null,"Right click outside")))))),react.createElement("div",{className:"mt-6 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try clicking outside each component to see the click-away behavior in action! ðŸŽ¯")))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [activeComponent, setActiveComponent] = useState<string | null>(null);\n\n    // Dropdown example\n    const dropdownRef = useRef(null);\n    useClickAway(dropdownRef, () => {\n      if (activeComponent === "dropdown") setActiveComponent(null);\n    });\n\n    // Modal example\n    const modalRef = useRef(null);\n    useClickAway(modalRef, () => {\n      if (activeComponent === "modal") setActiveComponent(null);\n    });\n\n    // Custom events example\n    const customRef = useRef(null);\n    useClickAway(customRef, () => {\n      if (activeComponent === "custom") setActiveComponent(null);\n    }, ["mousedown", "touchstart", "contextmenu"] // Additional contextmenu event\n    );\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Click Away Examples\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="grid grid-cols-3 gap-4">\n              {/* Dropdown Example */}\n              <div className="relative" ref={dropdownRef}>\n                <button onClick={() => setActiveComponent("dropdown")} className="w-full px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition-colors">\n                  Dropdown\n                </button>\n                {activeComponent === "dropdown" && <div className="absolute top-full left-0 mt-1 w-48 bg-white dark:bg-slate-700 rounded-md shadow-lg border border-slate-200 dark:border-slate-600 py-1">\n                    <div className="px-4 py-2 text-sm text-slate-700 dark:text-slate-300">\n                      Click outside to close\n                    </div>\n                    <hr className="my-1 border-slate-200 dark:border-slate-600" />\n                    <a href="#" className="block px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-600" onClick={e => e.preventDefault()}>\n                      Option 1\n                    </a>\n                    <a href="#" className="block px-4 py-2 text-sm text-slate-700 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-600" onClick={e => e.preventDefault()}>\n                      Option 2\n                    </a>\n                  </div>}\n              </div>\n\n              {/* Modal Example */}\n              <div className="relative" ref={modalRef}>\n                <button onClick={() => setActiveComponent("modal")} className="w-full px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-md transition-colors">\n                  Modal\n                </button>\n                {activeComponent === "modal" && <div className="fixed inset-0 flex items-center justify-center z-50">\n                    <div className="absolute inset-0 bg-black bg-opacity-50" />\n                    <div className="relative bg-white dark:bg-slate-700 rounded-lg shadow-xl p-6 max-w-sm mx-auto">\n                      <h4 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n                        Modal Content\n                      </h4>\n                      <p className="text-sm text-slate-600 dark:text-slate-400">\n                        Click outside the modal to close it. This is a common\n                        pattern in web applications.\n                      </p>\n                    </div>\n                  </div>}\n              </div>\n\n              {/* Custom Events Example */}\n              <div className="relative" ref={customRef}>\n                <button onClick={() => setActiveComponent("custom")} className="w-full px-4 py-2 bg-purple-500 hover:bg-purple-600 text-white rounded-md transition-colors">\n                  Custom Events\n                </button>\n                {activeComponent === "custom" && <div className="absolute top-full right-0 mt-1 w-64 bg-white dark:bg-slate-700 rounded-md shadow-lg border border-slate-200 dark:border-slate-600 p-4">\n                    <div className="text-sm text-slate-700 dark:text-slate-300">\n                      This menu closes on:\n                      <ul className="list-disc list-inside mt-2 space-y-1 text-xs">\n                        <li>Left click outside</li>\n                        <li>Touch outside</li>\n                        <li>Right click outside</li>\n                      </ul>\n                    </div>\n                  </div>}\n              </div>\n            </div>\n\n            {/* Instructions */}\n            <div className="mt-6 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n              <p className="text-sm text-blue-600 dark:text-blue-400">\n                Try clicking outside each component to see the click-away\n                behavior in action! ðŸŽ¯\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
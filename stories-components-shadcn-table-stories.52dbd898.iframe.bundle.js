"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[8558],{"./src/components/shadcn/badge.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>Badge});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs"),class_variance_authority__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),_lib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/utils.ts");const badgeVariants=(0,class_variance_authority__WEBPACK_IMPORTED_MODULE_1__.F)("inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90",secondary:"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90",destructive:"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",outline:"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground"}},defaultVariants:{variant:"default"}});function Badge({className,variant,asChild=!1,...props}){const Comp=asChild?_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__.DX:"span";return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp,{"data-slot":"badge",className:(0,_lib__WEBPACK_IMPORTED_MODULE_3__.cn)(badgeVariants({variant}),className),...props})}Badge.__docgenInfo={description:"",methods:[],displayName:"Badge",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}}},"./src/components/shadcn/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button,r:()=>buttonVariants});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs"),class_variance_authority__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),_lib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/utils.ts");const buttonVariants=(0,class_variance_authority__WEBPACK_IMPORTED_MODULE_1__.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",destructive:"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",outline:"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2 has-[>svg]:px-3",sm:"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",lg:"h-10 rounded-md px-6 has-[>svg]:px-4",icon:"size-9"}},defaultVariants:{variant:"default",size:"default"}});function Button({className,variant,size,asChild=!1,...props}){const Comp=asChild?_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__.DX:"button";return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp,{"data-slot":"button",className:(0,_lib__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({variant,size,className})),...props})}Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}}},"./src/components/shadcn/checkbox.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>Checkbox});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@radix-ui/react-checkbox/dist/index.mjs"),lucide_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/check.js"),_lib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/lib/utils.ts");function Checkbox({className,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_1__.bL,{"data-slot":"checkbox",className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("peer border-input data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50",className),...props},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_checkbox__WEBPACK_IMPORTED_MODULE_1__.C1,{"data-slot":"checkbox-indicator",className:"flex items-center justify-center text-current transition-none"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__.A,{className:"size-3.5"})))}Checkbox.__docgenInfo={description:"",methods:[],displayName:"Checkbox"}},"./src/components/shadcn/dropdown-menu.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Hr:()=>DropdownMenuRadioGroup,Ht:()=>DropdownMenuRadioItem,I:()=>DropdownMenuGroup,M5:()=>DropdownMenuSubContent,SQ:()=>DropdownMenuContent,V0:()=>DropdownMenuShortcut,_2:()=>DropdownMenuItem,dc:()=>DropdownMenuPortal,hO:()=>DropdownMenuCheckboxItem,lp:()=>DropdownMenuLabel,lv:()=>DropdownMenuSub,mB:()=>DropdownMenuSeparator,nV:()=>DropdownMenuSubTrigger,rI:()=>DropdownMenu,ty:()=>DropdownMenuTrigger});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs"),lucide_react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/check.js"),lucide_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/circle.js"),lucide_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-right.js"),_lib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/lib/utils.ts");function DropdownMenu({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.bL,{"data-slot":"dropdown-menu",...props})}function DropdownMenuPortal({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.ZL,{"data-slot":"dropdown-menu-portal",...props})}function DropdownMenuTrigger({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.l9,{"data-slot":"dropdown-menu-trigger",...props})}function DropdownMenuContent({className,sideOffset=4,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.ZL,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.UC,{"data-slot":"dropdown-menu-content",sideOffset,className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md",className),...props}))}function DropdownMenuGroup({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.YJ,{"data-slot":"dropdown-menu-group",...props})}function DropdownMenuItem({className,inset,variant="default",...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.q7,{"data-slot":"dropdown-menu-item","data-inset":inset,"data-variant":variant,className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",className),...props})}function DropdownMenuCheckboxItem({className,children,checked,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.H_,{"data-slot":"dropdown-menu-checkbox-item",className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",className),checked,...props},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.VF,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(lucide_react__WEBPACK_IMPORTED_MODULE_3__.A,{className:"size-4"}))),children)}function DropdownMenuRadioGroup({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.z6,{"data-slot":"dropdown-menu-radio-group",...props})}function DropdownMenuRadioItem({className,children,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.hN,{"data-slot":"dropdown-menu-radio-item",className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",className),...props},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.VF,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(lucide_react__WEBPACK_IMPORTED_MODULE_4__.A,{className:"size-2 fill-current"}))),children)}function DropdownMenuLabel({className,inset,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.JU,{"data-slot":"dropdown-menu-label","data-inset":inset,className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("px-2 py-1.5 text-sm font-medium data-[inset]:pl-8",className),...props})}function DropdownMenuSeparator({className,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.wv,{"data-slot":"dropdown-menu-separator",className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("bg-border -mx-1 my-1 h-px",className),...props})}function DropdownMenuShortcut({className,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{"data-slot":"dropdown-menu-shortcut",className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("text-muted-foreground ml-auto text-xs tracking-widest",className),...props})}function DropdownMenuSub({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.Pb,{"data-slot":"dropdown-menu-sub",...props})}function DropdownMenuSubTrigger({className,inset,children,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.ZP,{"data-slot":"dropdown-menu-sub-trigger","data-inset":inset,className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8",className),...props},children,react__WEBPACK_IMPORTED_MODULE_0__.createElement(lucide_react__WEBPACK_IMPORTED_MODULE_5__.A,{className:"ml-auto size-4"}))}function DropdownMenuSubContent({className,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_1__.G5,{"data-slot":"dropdown-menu-sub-content",className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-lg",className),...props})}DropdownMenu.__docgenInfo={description:"",methods:[],displayName:"DropdownMenu"},DropdownMenuPortal.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuPortal"},DropdownMenuTrigger.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuTrigger"},DropdownMenuContent.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuContent",props:{sideOffset:{defaultValue:{value:"4",computed:!1},required:!1}}},DropdownMenuGroup.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuGroup"},DropdownMenuLabel.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuLabel",props:{inset:{required:!1,tsType:{name:"boolean"},description:""}}},DropdownMenuItem.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuItem",props:{inset:{required:!1,tsType:{name:"boolean"},description:""},variant:{required:!1,tsType:{name:"union",raw:'"default" | "destructive"',elements:[{name:"literal",value:'"default"'},{name:"literal",value:'"destructive"'}]},description:"",defaultValue:{value:'"default"',computed:!1}}}},DropdownMenuCheckboxItem.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuCheckboxItem"},DropdownMenuRadioGroup.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuRadioGroup"},DropdownMenuRadioItem.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuRadioItem"},DropdownMenuSeparator.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuSeparator"},DropdownMenuShortcut.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuShortcut"},DropdownMenuSub.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuSub"},DropdownMenuSubTrigger.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuSubTrigger",props:{inset:{required:!1,tsType:{name:"boolean"},description:""}}},DropdownMenuSubContent.__docgenInfo={description:"",methods:[],displayName:"DropdownMenuSubContent"}},"./src/components/shadcn/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>Input});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_lib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/lib/utils.ts");function Input({className,type,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type,"data-slot":"input",className:(0,_lib__WEBPACK_IMPORTED_MODULE_1__.cn)("border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm","focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]","aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",className),...props})}Input.__docgenInfo={description:"",methods:[],displayName:"Input"}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))},"./src/stories/components/shadcn/table.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ExpandableRows:()=>ExpandableRows,SearchAndFilter:()=>SearchAndFilter,SelectableRows:()=>SelectableRows,SortableColumns:()=>SortableColumns,__namedExportsOrder:()=>__namedExportsOrder,default:()=>table_stories});var react=__webpack_require__("./node_modules/react/index.js"),utils=__webpack_require__("./src/lib/utils.ts");function Table({className,...props}){return react.createElement("div",{"data-slot":"table-container",className:"relative w-full overflow-x-auto"},react.createElement("table",{"data-slot":"table",className:(0,utils.cn)("w-full caption-bottom text-sm",className),...props}))}function TableHeader({className,...props}){return react.createElement("thead",{"data-slot":"table-header",className:(0,utils.cn)("[&_tr]:border-b",className),...props})}function TableBody({className,...props}){return react.createElement("tbody",{"data-slot":"table-body",className:(0,utils.cn)("[&_tr:last-child]:border-0",className),...props})}function TableFooter({className,...props}){return react.createElement("tfoot",{"data-slot":"table-footer",className:(0,utils.cn)("bg-muted/50 border-t font-medium [&>tr]:last:border-b-0",className),...props})}function TableRow({className,...props}){return react.createElement("tr",{"data-slot":"table-row",className:(0,utils.cn)("hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors",className),...props})}function TableHead({className,...props}){return react.createElement("th",{"data-slot":"table-head",className:(0,utils.cn)("text-muted-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",className),...props})}function TableCell({className,...props}){return react.createElement("td",{"data-slot":"table-cell",className:(0,utils.cn)("p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",className),...props})}function TableCaption({className,...props}){return react.createElement("caption",{"data-slot":"table-caption",className:(0,utils.cn)("text-muted-foreground mt-4 text-sm",className),...props})}Table.__docgenInfo={description:"",methods:[],displayName:"Table"},TableHeader.__docgenInfo={description:"",methods:[],displayName:"TableHeader"},TableBody.__docgenInfo={description:"",methods:[],displayName:"TableBody"},TableFooter.__docgenInfo={description:"",methods:[],displayName:"TableFooter"},TableHead.__docgenInfo={description:"",methods:[],displayName:"TableHead"},TableRow.__docgenInfo={description:"",methods:[],displayName:"TableRow"},TableCell.__docgenInfo={description:"",methods:[],displayName:"TableCell"},TableCaption.__docgenInfo={description:"",methods:[],displayName:"TableCaption"};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx"),shadcn_checkbox=__webpack_require__("./src/components/shadcn/checkbox.tsx"),shadcn_button=__webpack_require__("./src/components/shadcn/button.tsx"),input=__webpack_require__("./src/components/shadcn/input.tsx"),badge=__webpack_require__("./src/components/shadcn/badge.tsx"),ellipsis=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/ellipsis.js"),arrow_up_down=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/arrow-up-down.js"),chevron_down=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-down.js"),dropdown_menu=__webpack_require__("./src/components/shadcn/dropdown-menu.tsx");const table_stories={title:"Components/Shadcn/Table",component:Table,parameters:{layout:"centered"},tags:["autodocs","stable","version:2.3.0"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement("div",{className:"w-full max-w-4xl"},react.createElement(Story,null)))]},invoices=[{id:"INV001",paymentStatus:"Paid",totalAmount:"$250.00",paymentMethod:"Credit Card"},{id:"INV002",paymentStatus:"Pending",totalAmount:"$150.00",paymentMethod:"PayPal"},{id:"INV003",paymentStatus:"Unpaid",totalAmount:"$350.00",paymentMethod:"Bank Transfer"},{id:"INV004",paymentStatus:"Paid",totalAmount:"$450.00",paymentMethod:"Credit Card"},{id:"INV005",paymentStatus:"Paid",totalAmount:"$550.00",paymentMethod:"PayPal"},{id:"INV006",paymentStatus:"Pending",totalAmount:"$200.00",paymentMethod:"Bank Transfer"},{id:"INV007",paymentStatus:"Unpaid",totalAmount:"$300.00",paymentMethod:"Credit Card"}],users=[{id:"u1",name:"John Doe",email:"john@example.com",role:"Admin",status:"Active"},{id:"u2",name:"Jane Smith",email:"jane@example.com",role:"User",status:"Active"},{id:"u3",name:"Bob Johnson",email:"bob@example.com",role:"User",status:"Inactive"},{id:"u4",name:"Alice Brown",email:"alice@example.com",role:"Editor",status:"Active"},{id:"u5",name:"Charlie Wilson",email:"charlie@example.com",role:"User",status:"Pending"}],Default={render:()=>react.createElement(Table,null,react.createElement(TableCaption,null,"A list of your recent invoices."),react.createElement(TableHeader,null,react.createElement(TableRow,null,react.createElement(TableHead,{className:"w-[100px]"},"Invoice"),react.createElement(TableHead,null,"Status"),react.createElement(TableHead,null,"Method"),react.createElement(TableHead,{className:"text-right"},"Amount"))),react.createElement(TableBody,null,invoices.map((invoice=>react.createElement(TableRow,{key:invoice.id},react.createElement(TableCell,{className:"font-medium"},invoice.id),react.createElement(TableCell,null,invoice.paymentStatus),react.createElement(TableCell,null,invoice.paymentMethod),react.createElement(TableCell,{className:"text-right"},invoice.totalAmount))))),react.createElement(TableFooter,null,react.createElement(TableRow,null,react.createElement(TableCell,{colSpan:3},"Total"),react.createElement(TableCell,{className:"text-right"},"$2,250.00"))))},SelectableRows={render:function SelectableRowsTable(){const[selectedRows,setSelectedRows]=react.useState([]);return react.createElement("div",{className:"space-y-4"},react.createElement("div",{className:"flex justify-between"},react.createElement("div",null,selectedRows.length>0&&react.createElement("p",{className:"text-sm text-muted-foreground"},selectedRows.length," row(s) selected")),react.createElement("div",null,selectedRows.length>0&&react.createElement(shadcn_button.$,{variant:"outline",size:"sm"},"Delete Selected"))),react.createElement(Table,null,react.createElement(TableHeader,null,react.createElement(TableRow,null,react.createElement(TableHead,{className:"w-[50px]"},react.createElement(shadcn_checkbox.S,{checked:selectedRows.length===users.length,onCheckedChange:()=>{setSelectedRows((prev=>prev.length===users.length?[]:users.map((user=>user.id))))},"aria-label":"Select all"})),react.createElement(TableHead,null,"Name"),react.createElement(TableHead,null,"Email"),react.createElement(TableHead,null,"Role"),react.createElement(TableHead,null,"Status"),react.createElement(TableHead,{className:"w-[100px]"}))),react.createElement(TableBody,null,users.map((user=>react.createElement(TableRow,{key:user.id},react.createElement(TableCell,null,react.createElement(shadcn_checkbox.S,{checked:selectedRows.includes(user.id),onCheckedChange:()=>{return id=user.id,void setSelectedRows((prev=>prev.includes(id)?prev.filter((rowId=>rowId!==id)):[...prev,id]));var id},"aria-label":`Select ${user.name}`})),react.createElement(TableCell,{className:"font-medium"},user.name),react.createElement(TableCell,null,user.email),react.createElement(TableCell,null,user.role),react.createElement(TableCell,null,react.createElement(badge.E,{variant:"Active"===user.status?"default":"Inactive"===user.status?"secondary":"outline"},user.status)),react.createElement(TableCell,null,react.createElement(dropdown_menu.rI,null,react.createElement(dropdown_menu.ty,{asChild:!0},react.createElement(shadcn_button.$,{variant:"ghost",size:"icon"},react.createElement(ellipsis.A,{className:"h-4 w-4"}),react.createElement("span",{className:"sr-only"},"Open menu"))),react.createElement(dropdown_menu.SQ,{align:"end"},react.createElement(dropdown_menu.lp,null,"Actions"),react.createElement(dropdown_menu._2,null,"View details"),react.createElement(dropdown_menu._2,null,"Edit user"),react.createElement(dropdown_menu.mB,null),react.createElement(dropdown_menu._2,{className:"text-destructive"},"Delete user"))))))))))}},SortableColumns={render:function SortableColumnsTable(){const[sortColumn,setSortColumn]=react.useState("name"),[sortDirection,setSortDirection]=react.useState("asc"),[data,setData]=react.useState([...users]),handleSort=column=>{if(sortColumn===column){setSortDirection("asc"===sortDirection?"desc":"asc"),setData([...data].reverse())}else setSortColumn(column),setSortDirection("asc"),setData([...data].sort(((a,b)=>a[column]<b[column]?-1:a[column]>b[column]?1:0)))};return react.createElement(Table,null,react.createElement(TableHeader,null,react.createElement(TableRow,null,react.createElement(TableHead,{className:"cursor-pointer",onClick:()=>handleSort("name")},react.createElement("div",{className:"flex items-center"},"Name","name"===sortColumn&&react.createElement(arrow_up_down.A,{className:`ml-2 h-4 w-4 ${"desc"===sortDirection?"rotate-180":""} transition-transform`}))),react.createElement(TableHead,{className:"cursor-pointer",onClick:()=>handleSort("email")},react.createElement("div",{className:"flex items-center"},"Email","email"===sortColumn&&react.createElement(arrow_up_down.A,{className:`ml-2 h-4 w-4 ${"desc"===sortDirection?"rotate-180":""} transition-transform`}))),react.createElement(TableHead,{className:"cursor-pointer",onClick:()=>handleSort("role")},react.createElement("div",{className:"flex items-center"},"Role","role"===sortColumn&&react.createElement(arrow_up_down.A,{className:`ml-2 h-4 w-4 ${"desc"===sortDirection?"rotate-180":""} transition-transform`}))),react.createElement(TableHead,{className:"cursor-pointer",onClick:()=>handleSort("status")},react.createElement("div",{className:"flex items-center"},"Status","status"===sortColumn&&react.createElement(arrow_up_down.A,{className:`ml-2 h-4 w-4 ${"desc"===sortDirection?"rotate-180":""} transition-transform`}))))),react.createElement(TableBody,null,data.map((user=>react.createElement(TableRow,{key:user.id},react.createElement(TableCell,{className:"font-medium"},user.name),react.createElement(TableCell,null,user.email),react.createElement(TableCell,null,user.role),react.createElement(TableCell,null,react.createElement(badge.E,{variant:"Active"===user.status?"default":"Inactive"===user.status?"secondary":"outline"},user.status)))))))}},SearchAndFilter={render:function SearchAndFilterTable(){const[searchTerm,setSearchTerm]=react.useState(""),[roleFilter,setRoleFilter]=react.useState(null),[filteredData,setFilteredData]=react.useState([...users]);react.useEffect((()=>{let result=[...users];searchTerm&&(result=result.filter((user=>user.name.toLowerCase().includes(searchTerm.toLowerCase())||user.email.toLowerCase().includes(searchTerm.toLowerCase())))),roleFilter&&(result=result.filter((user=>user.role===roleFilter))),setFilteredData(result)}),[searchTerm,roleFilter]);const roles=Array.from(new Set(users.map((user=>user.role))));return react.createElement("div",{className:"space-y-4"},react.createElement("div",{className:"flex items-center justify-between"},react.createElement(input.p,{placeholder:"Search by name or email...",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:"max-w-sm"}),react.createElement(dropdown_menu.rI,null,react.createElement(dropdown_menu.ty,{asChild:!0},react.createElement(shadcn_button.$,{variant:"outline"},roleFilter||"All Roles",react.createElement(chevron_down.A,{className:"ml-2 h-4 w-4"}))),react.createElement(dropdown_menu.SQ,null,react.createElement(dropdown_menu._2,{onClick:()=>setRoleFilter(null)},"All Roles"),react.createElement(dropdown_menu.mB,null),roles.map((role=>react.createElement(dropdown_menu._2,{key:role,onClick:()=>setRoleFilter(role)},role)))))),react.createElement(Table,null,react.createElement(TableHeader,null,react.createElement(TableRow,null,react.createElement(TableHead,null,"Name"),react.createElement(TableHead,null,"Email"),react.createElement(TableHead,null,"Role"),react.createElement(TableHead,null,"Status"))),react.createElement(TableBody,null,filteredData.length>0?filteredData.map((user=>react.createElement(TableRow,{key:user.id},react.createElement(TableCell,{className:"font-medium"},user.name),react.createElement(TableCell,null,user.email),react.createElement(TableCell,null,user.role),react.createElement(TableCell,null,react.createElement(badge.E,{variant:"Active"===user.status?"default":"Inactive"===user.status?"secondary":"outline"},user.status))))):react.createElement(TableRow,null,react.createElement(TableCell,{colSpan:4,className:"text-center"},"No results found.")))))}},ExpandableRows={render:function ExpandableRowsTable(){const[expandedRows,setExpandedRows]=react.useState([]);return react.createElement(Table,null,react.createElement(TableHeader,null,react.createElement(TableRow,null,react.createElement(TableHead,{className:"w-[50px]"}),react.createElement(TableHead,null,"Name"),react.createElement(TableHead,null,"Email"),react.createElement(TableHead,null,"Role"),react.createElement(TableHead,null,"Status"))),react.createElement(TableBody,null,users.map((user=>react.createElement(react.Fragment,{key:user.id},react.createElement(TableRow,null,react.createElement(TableCell,null,react.createElement(shadcn_button.$,{variant:"ghost",size:"icon",onClick:()=>{return id=user.id,void setExpandedRows((prev=>prev.includes(id)?prev.filter((rowId=>rowId!==id)):[...prev,id]));var id}},react.createElement(chevron_down.A,{className:"h-4 w-4 transition-transform "+(expandedRows.includes(user.id)?"rotate-180":"")}))),react.createElement(TableCell,{className:"font-medium"},user.name),react.createElement(TableCell,null,user.email),react.createElement(TableCell,null,user.role),react.createElement(TableCell,null,react.createElement(badge.E,{variant:"Active"===user.status?"default":"Inactive"===user.status?"secondary":"outline"},user.status))),expandedRows.includes(user.id)&&react.createElement(TableRow,{className:"bg-muted/50"},react.createElement(TableCell,{colSpan:5,className:"p-4"},react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"text-sm font-medium"},"User Details"),react.createElement("div",{className:"grid grid-cols-2 gap-4"},react.createElement("div",null,react.createElement("p",{className:"text-sm font-medium"},"User ID"),react.createElement("p",{className:"text-sm text-muted-foreground"},user.id)),react.createElement("div",null,react.createElement("p",{className:"text-sm font-medium"},"Last Login"),react.createElement("p",{className:"text-sm text-muted-foreground"},"2 days ago")),react.createElement("div",null,react.createElement("p",{className:"text-sm font-medium"},"Created At"),react.createElement("p",{className:"text-sm text-muted-foreground"},"Jan 12, 2023")),react.createElement("div",null,react.createElement("p",{className:"text-sm font-medium"},"Updated At"),react.createElement("p",{className:"text-sm text-muted-foreground"},"Mar 5, 2023"))),react.createElement("div",{className:"flex gap-2 pt-2"},react.createElement(shadcn_button.$,{size:"sm",variant:"outline"},"Edit User"),react.createElement(shadcn_button.$,{size:"sm",variant:"outline"},"View Activity"))))))))))}},__namedExportsOrder=["Default","SelectableRows","SortableColumns","SearchAndFilter","ExpandableRows"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: () => <Table>\n      <TableCaption>A list of your recent invoices.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className="w-[100px]">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead className="text-right">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map(invoice => <TableRow key={invoice.id}>\n            <TableCell className="font-medium">{invoice.id}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell>{invoice.paymentMethod}</TableCell>\n            <TableCell className="text-right">{invoice.totalAmount}</TableCell>\n          </TableRow>)}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={3}>Total</TableCell>\n          <TableCell className="text-right">$2,250.00</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n}',...Default.parameters?.docs?.source},description:{story:"Default table with caption, header, body, and footer.",...Default.parameters?.docs?.description}}},SelectableRows.parameters={...SelectableRows.parameters,docs:{...SelectableRows.parameters?.docs,source:{originalSource:'{\n  render: function SelectableRowsTable() {\n    const [selectedRows, setSelectedRows] = React.useState<string[]>([]);\n    const toggleRow = (id: string) => {\n      setSelectedRows(prev => prev.includes(id) ? prev.filter(rowId => rowId !== id) : [...prev, id]);\n    };\n    const toggleAll = () => {\n      setSelectedRows(prev => prev.length === users.length ? [] : users.map(user => user.id));\n    };\n    return <div className="space-y-4">\n        <div className="flex justify-between">\n          <div>\n            {selectedRows.length > 0 && <p className="text-sm text-muted-foreground">\n                {selectedRows.length} row(s) selected\n              </p>}\n          </div>\n          <div>\n            {selectedRows.length > 0 && <Button variant="outline" size="sm">\n                Delete Selected\n              </Button>}\n          </div>\n        </div>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead className="w-[50px]">\n                <Checkbox checked={selectedRows.length === users.length} onCheckedChange={toggleAll} aria-label="Select all" />\n              </TableHead>\n              <TableHead>Name</TableHead>\n              <TableHead>Email</TableHead>\n              <TableHead>Role</TableHead>\n              <TableHead>Status</TableHead>\n              <TableHead className="w-[100px]"></TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {users.map(user => <TableRow key={user.id}>\n                <TableCell>\n                  <Checkbox checked={selectedRows.includes(user.id)} onCheckedChange={() => toggleRow(user.id)} aria-label={`Select ${user.name}`} />\n                </TableCell>\n                <TableCell className="font-medium">{user.name}</TableCell>\n                <TableCell>{user.email}</TableCell>\n                <TableCell>{user.role}</TableCell>\n                <TableCell>\n                  <Badge variant={user.status === "Active" ? "default" : user.status === "Inactive" ? "secondary" : "outline"}>\n                    {user.status}\n                  </Badge>\n                </TableCell>\n                <TableCell>\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button variant="ghost" size="icon">\n                        <MoreHorizontal className="h-4 w-4" />\n                        <span className="sr-only">Open menu</span>\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent align="end">\n                      <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                      <DropdownMenuItem>View details</DropdownMenuItem>\n                      <DropdownMenuItem>Edit user</DropdownMenuItem>\n                      <DropdownMenuSeparator />\n                      <DropdownMenuItem className="text-destructive">\n                        Delete user\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n                </TableCell>\n              </TableRow>)}\n          </TableBody>\n        </Table>\n      </div>;\n  }\n}',...SelectableRows.parameters?.docs?.source},description:{story:"Table with selectable rows using checkboxes.",...SelectableRows.parameters?.docs?.description}}},SortableColumns.parameters={...SortableColumns.parameters,docs:{...SortableColumns.parameters?.docs,source:{originalSource:'{\n  render: function SortableColumnsTable() {\n    const [sortColumn, setSortColumn] = React.useState<string | null>("name");\n    const [sortDirection, setSortDirection] = React.useState<"asc" | "desc">("asc");\n    const [data, setData] = React.useState([...users]);\n    const handleSort = (column: string) => {\n      if (sortColumn === column) {\n        // Toggle direction if same column\n        const newDirection = sortDirection === "asc" ? "desc" : "asc";\n        setSortDirection(newDirection);\n        setData([...data].reverse());\n      } else {\n        // Sort by new column\n        setSortColumn(column);\n        setSortDirection("asc");\n        setData([...data].sort((a, b) => {\n          if (a[column as keyof typeof a] < b[column as keyof typeof b]) {\n            return -1;\n          }\n          if (a[column as keyof typeof a] > b[column as keyof typeof b]) {\n            return 1;\n          }\n          return 0;\n        }));\n      }\n    };\n    return <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className="cursor-pointer" onClick={() => handleSort("name")}>\n              <div className="flex items-center">\n                Name\n                {sortColumn === "name" && <ArrowUpDown className={`ml-2 h-4 w-4 ${sortDirection === "desc" ? "rotate-180" : ""} transition-transform`} />}\n              </div>\n            </TableHead>\n            <TableHead className="cursor-pointer" onClick={() => handleSort("email")}>\n              <div className="flex items-center">\n                Email\n                {sortColumn === "email" && <ArrowUpDown className={`ml-2 h-4 w-4 ${sortDirection === "desc" ? "rotate-180" : ""} transition-transform`} />}\n              </div>\n            </TableHead>\n            <TableHead className="cursor-pointer" onClick={() => handleSort("role")}>\n              <div className="flex items-center">\n                Role\n                {sortColumn === "role" && <ArrowUpDown className={`ml-2 h-4 w-4 ${sortDirection === "desc" ? "rotate-180" : ""} transition-transform`} />}\n              </div>\n            </TableHead>\n            <TableHead className="cursor-pointer" onClick={() => handleSort("status")}>\n              <div className="flex items-center">\n                Status\n                {sortColumn === "status" && <ArrowUpDown className={`ml-2 h-4 w-4 ${sortDirection === "desc" ? "rotate-180" : ""} transition-transform`} />}\n              </div>\n            </TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.map(user => <TableRow key={user.id}>\n              <TableCell className="font-medium">{user.name}</TableCell>\n              <TableCell>{user.email}</TableCell>\n              <TableCell>{user.role}</TableCell>\n              <TableCell>\n                <Badge variant={user.status === "Active" ? "default" : user.status === "Inactive" ? "secondary" : "outline"}>\n                  {user.status}\n                </Badge>\n              </TableCell>\n            </TableRow>)}\n        </TableBody>\n      </Table>;\n  }\n}',...SortableColumns.parameters?.docs?.source},description:{story:"Table with sortable columns.",...SortableColumns.parameters?.docs?.description}}},SearchAndFilter.parameters={...SearchAndFilter.parameters,docs:{...SearchAndFilter.parameters?.docs,source:{originalSource:'{\n  render: function SearchAndFilterTable() {\n    const [searchTerm, setSearchTerm] = React.useState("");\n    const [roleFilter, setRoleFilter] = React.useState<string | null>(null);\n    const [filteredData, setFilteredData] = React.useState([...users]);\n    React.useEffect(() => {\n      let result = [...users];\n\n      // Apply search\n      if (searchTerm) {\n        result = result.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase()) || user.email.toLowerCase().includes(searchTerm.toLowerCase()));\n      }\n\n      // Apply role filter\n      if (roleFilter) {\n        result = result.filter(user => user.role === roleFilter);\n      }\n      setFilteredData(result);\n    }, [searchTerm, roleFilter]);\n    const roles = Array.from(new Set(users.map(user => user.role)));\n    return <div className="space-y-4">\n        <div className="flex items-center justify-between">\n          <Input placeholder="Search by name or email..." value={searchTerm} onChange={e => setSearchTerm(e.target.value)} className="max-w-sm" />\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant="outline">\n                {roleFilter || "All Roles"}\n                <ChevronDown className="ml-2 h-4 w-4" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent>\n              <DropdownMenuItem onClick={() => setRoleFilter(null)}>\n                All Roles\n              </DropdownMenuItem>\n              <DropdownMenuSeparator />\n              {roles.map(role => <DropdownMenuItem key={role} onClick={() => setRoleFilter(role)}>\n                  {role}\n                </DropdownMenuItem>)}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Name</TableHead>\n              <TableHead>Email</TableHead>\n              <TableHead>Role</TableHead>\n              <TableHead>Status</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredData.length > 0 ? filteredData.map(user => <TableRow key={user.id}>\n                  <TableCell className="font-medium">{user.name}</TableCell>\n                  <TableCell>{user.email}</TableCell>\n                  <TableCell>{user.role}</TableCell>\n                  <TableCell>\n                    <Badge variant={user.status === "Active" ? "default" : user.status === "Inactive" ? "secondary" : "outline"}>\n                      {user.status}\n                    </Badge>\n                  </TableCell>\n                </TableRow>) : <TableRow>\n                <TableCell colSpan={4} className="text-center">\n                  No results found.\n                </TableCell>\n              </TableRow>}\n          </TableBody>\n        </Table>\n      </div>;\n  }\n}',...SearchAndFilter.parameters?.docs?.source},description:{story:"Table with search and filter functionality.",...SearchAndFilter.parameters?.docs?.description}}},ExpandableRows.parameters={...ExpandableRows.parameters,docs:{...ExpandableRows.parameters?.docs,source:{originalSource:'{\n  render: function ExpandableRowsTable() {\n    const [expandedRows, setExpandedRows] = React.useState<string[]>([]);\n    const toggleRow = (id: string) => {\n      setExpandedRows(prev => prev.includes(id) ? prev.filter(rowId => rowId !== id) : [...prev, id]);\n    };\n    return <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead className="w-[50px]"></TableHead>\n            <TableHead>Name</TableHead>\n            <TableHead>Email</TableHead>\n            <TableHead>Role</TableHead>\n            <TableHead>Status</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {users.map(user => <React.Fragment key={user.id}>\n              <TableRow>\n                <TableCell>\n                  <Button variant="ghost" size="icon" onClick={() => toggleRow(user.id)}>\n                    <ChevronDown className={`h-4 w-4 transition-transform ${expandedRows.includes(user.id) ? "rotate-180" : ""}`} />\n                  </Button>\n                </TableCell>\n                <TableCell className="font-medium">{user.name}</TableCell>\n                <TableCell>{user.email}</TableCell>\n                <TableCell>{user.role}</TableCell>\n                <TableCell>\n                  <Badge variant={user.status === "Active" ? "default" : user.status === "Inactive" ? "secondary" : "outline"}>\n                    {user.status}\n                  </Badge>\n                </TableCell>\n              </TableRow>\n              {expandedRows.includes(user.id) && <TableRow className="bg-muted/50">\n                  <TableCell colSpan={5} className="p-4">\n                    <div className="space-y-2">\n                      <h4 className="text-sm font-medium">User Details</h4>\n                      <div className="grid grid-cols-2 gap-4">\n                        <div>\n                          <p className="text-sm font-medium">User ID</p>\n                          <p className="text-sm text-muted-foreground">\n                            {user.id}\n                          </p>\n                        </div>\n                        <div>\n                          <p className="text-sm font-medium">Last Login</p>\n                          <p className="text-sm text-muted-foreground">\n                            2 days ago\n                          </p>\n                        </div>\n                        <div>\n                          <p className="text-sm font-medium">Created At</p>\n                          <p className="text-sm text-muted-foreground">\n                            Jan 12, 2023\n                          </p>\n                        </div>\n                        <div>\n                          <p className="text-sm font-medium">Updated At</p>\n                          <p className="text-sm text-muted-foreground">\n                            Mar 5, 2023\n                          </p>\n                        </div>\n                      </div>\n                      <div className="flex gap-2 pt-2">\n                        <Button size="sm" variant="outline">\n                          Edit User\n                        </Button>\n                        <Button size="sm" variant="outline">\n                          View Activity\n                        </Button>\n                      </div>\n                    </div>\n                  </TableCell>\n                </TableRow>}\n            </React.Fragment>)}\n        </TableBody>\n      </Table>;\n  }\n}',...ExpandableRows.parameters?.docs?.source},description:{story:"Table with expandable rows.",...ExpandableRows.parameters?.docs?.description}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
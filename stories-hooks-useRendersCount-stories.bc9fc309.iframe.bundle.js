"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[3695],{"./src/stories/hooks/useRendersCount.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useRendersCount_stories});var react=__webpack_require__("./node_modules/react/index.js");var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useRendersCount_stories={title:"Hooks/Utility/useRendersCount",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useRendersCount` is a hook that tracks the number of times a component has rendered.\n\n### Module Federation Import\n```tsx\nimport { useRendersCount } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useRendersCount } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const renders = useRendersCount();\n  return <div>Rendered {renders} times</div>;\n};\n```\n\n### Parameters\n```tsx\nuseRendersCount(): number\n```\n\n### Returns\n- Returns a number representing the count of renders\n\n### Features\n- Tracks initial and subsequent renders\n- Uses useRef internally to persist count\n- Zero dependencies\n- Handles cleanup automatically\n\n### Browser Compatibility\nCompatible with all browsers that support React.\n\n### Related Resources\n- [React Rendering](https://react.dev/learn/render-and-commit)\n- [useRef Hook](https://react.dev/reference/react/useRef)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},RendersCountExample=()=>{const renders=function useRendersCount(){return++(0,react.useRef)(0).current}(),[count,setCount]=(0,react.useState)(0),[text,setText]=(0,react.useState)("");return react.createElement("div",{className:"w-[500px]"},react.createElement("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Render Counter Demo"),react.createElement("p",{className:"text-sm text-slate-500 dark:text-slate-400 mt-1"},"Watch how state changes trigger re-renders")),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded"},react.createElement("div",{className:"text-2xl font-bold text-blue-600 dark:text-blue-400"},renders," renders")),react.createElement("div",{className:"space-y-4"},react.createElement("div",null,react.createElement("button",{onClick:()=>setCount((c=>c+1)),className:"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors"},"Increment Counter: ",count)),react.createElement("div",null,react.createElement("input",{type:"text",value:text,onChange:e=>setText(e.target.value),placeholder:"Type to trigger re-renders...",className:"w-full px-4 py-2 rounded border border-slate-200 dark:border-slate-600 bg-white dark:bg-slate-700 text-slate-900 dark:text-slate-100 placeholder:text-slate-400"}))),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded space-y-2"},react.createElement("h4",{className:"font-medium text-slate-900 dark:text-slate-100"},"Render Triggers:"),react.createElement("ul",{className:"list-disc list-inside text-sm text-slate-600 dark:text-slate-300 space-y-1"},react.createElement("li",null,"Initial mount"),react.createElement("li",null,"Counter state updates"),react.createElement("li",null,"Text input changes"),react.createElement("li",null,"Parent re-renders"))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try the counter and input to see how different actions affect the render count! ðŸ”„"))))},Example={render:()=>react.createElement(RendersCountExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <RendersCountExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[3025],{"./src/hooks/useAsyncFn.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useAsyncFn});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useMountedState__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useMountedState.ts");function useAsyncFn(fn,deps=[],initialState={loading:!1}){const lastCallId=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0),isMounted=(0,_useMountedState__WEBPACK_IMPORTED_MODULE_1__.A)(),[state,set]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState),callback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((...args)=>{const callId=++lastCallId.current;return state.loading||set((prevState=>({...prevState,loading:!0}))),fn(...args).then((value=>(isMounted()&&callId===lastCallId.current&&set({value,loading:!1}),value)),(error=>(isMounted()&&callId===lastCallId.current&&set({error,loading:!1}),error)))}),deps);return[state,callback]}},"./src/hooks/useMountedState.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useMountedState});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useMountedState(){const mountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),get=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>mountedRef.current),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(mountedRef.current=!0,()=>{mountedRef.current=!1})),[]),get}},"./src/stories/hooks/useAsyncFn.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useAsyncFn.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/State Management/useAsyncFn",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useAsyncFn` is a hook that manages async function state with manual execution control.\nIt\'s useful for handling API calls, data fetching, and other async operations that should be triggered manually.\nUnlike useAsync, this hook doesn\'t execute the async function immediately.\n\n### Module Federation Import\n```tsx\nimport { useAsyncFn } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useAsyncFn } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [query, setQuery] = useState("");\n  const [state, search] = useAsyncFn(async (q: string) => {\n    const response = await fetch(`/api/search?q=${q}`);\n    const data = await response.json();\n    return data;\n  }, []);\n\n  const handleSearch = () => {\n    search(query);\n  };\n\n  return (\n    <div>\n      <input value={query} onChange={(e) => setQuery(e.target.value)} />\n      <button onClick={handleSearch} disabled={state.loading}>\n        {state.loading ? "Searching..." : "Search"}\n      </button>\n      {state.value && <div>Results: {state.value.length}</div>}\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseAsyncFn<T>(\n  fn: (...args: any[]) => Promise<T>, // Async function to execute\n  deps?: DependencyList = [], // Dependencies array for memoization\n  initialState?: AsyncState<T> = { loading: false } // Initial state\n): [AsyncState<T>, (...args: any[]) => Promise<T>]\n```\n\n### Returns\n- [state, callback]: A tuple containing:\n  - state: AsyncState<T>\n    - loading: boolean - Whether the async function is currently executing\n    - error: Error | undefined - Error object if the async function failed\n    - value: T | undefined - Result value if the async function succeeded\n  - callback: The memoized async function to execute\n\n### Browser Compatibility\nUses standard Promise API, supported in all modern browsers.\n\n### Related Resources\n- [MDN: Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- [MDN: async function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)'}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Example={render:()=>{const[email,setEmail]=react__WEBPACK_IMPORTED_MODULE_0__.useState(""),[state,validate]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((async email=>{if(await new Promise((resolve=>setTimeout(resolve,1e3))),!email)throw new Error("Email is required");if(!email.includes("@"))throw new Error("Invalid email format");return{valid:!0,email,domain:email.split("@")[1],suggestions:[`${email.split("@")[0]}@gmail.com`,`${email.split("@")[0]}@outlook.com`,`${email.split("@")[0]}@yahoo.com`]}}));return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-6 max-w-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Email Validation Example"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-4"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("label",{className:"block text-sm font-medium text-slate-700 dark:text-slate-300"},"Email Address"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{type:"email",value:email,onChange:e=>setEmail(e.target.value),className:"w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-700 text-slate-900 dark:text-slate-100",placeholder:"Enter email to validate"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{validate(email)},disabled:state.loading,className:"w-full px-4 py-2 rounded-md text-white transition-colors "+(state.loading?"bg-blue-400 cursor-not-allowed":"bg-blue-500 hover:bg-blue-600")},state.loading?"Validating...":"Validate Email"),state.error&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-red-500 text-sm bg-red-50 dark:bg-red-900/20 p-2 rounded"},state.error.message),state.value&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-700 rounded p-3 space-y-3"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex items-center space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-2 h-2 bg-green-500 rounded-full"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-green-600 dark:text-green-400"},"Email is valid")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-500 dark:text-slate-400"},"Domain:"," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{className:"text-slate-700 dark:text-slate-300"},state.value.domain))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-1"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-slate-500 dark:text-slate-400"},"Suggested alternatives:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-1"},state.value.suggestions.map((suggestion=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key:suggestion,className:"text-sm text-slate-700 dark:text-slate-300 bg-slate-50 dark:bg-slate-600 p-1 rounded"},suggestion))))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Type in email and click validate to see the loading state is managed independently! ðŸ”„")))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Simulated async function that resolves or rejects based on input\n    const validateEmail = async (email: string) => {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      if (!email) throw new Error("Email is required");\n      if (!email.includes("@")) throw new Error("Invalid email format");\n      return {\n        valid: true,\n        email,\n        domain: email.split("@")[1],\n        suggestions: [`${email.split("@")[0]}@gmail.com`, `${email.split("@")[0]}@outlook.com`, `${email.split("@")[0]}@yahoo.com`]\n      };\n    };\n    const [email, setEmail] = React.useState("");\n    const [state, validate] = useAsyncFn(validateEmail);\n    const handleValidate = () => {\n      validate(email);\n    };\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Email Validation Example\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="space-y-4">\n              <div className="space-y-2">\n                <label className="block text-sm font-medium text-slate-700 dark:text-slate-300">\n                  Email Address\n                </label>\n                <input type="email" value={email} onChange={e => setEmail(e.target.value)} className="w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-700 text-slate-900 dark:text-slate-100" placeholder="Enter email to validate" />\n              </div>\n\n              <button onClick={handleValidate} disabled={state.loading} className={`w-full px-4 py-2 rounded-md text-white transition-colors ${state.loading ? "bg-blue-400 cursor-not-allowed" : "bg-blue-500 hover:bg-blue-600"}`}>\n                {state.loading ? "Validating..." : "Validate Email"}\n              </button>\n\n              {state.error && <div className="text-red-500 text-sm bg-red-50 dark:bg-red-900/20 p-2 rounded">\n                  {state.error.message}\n                </div>}\n\n              {state.value && <div className="bg-white dark:bg-slate-700 rounded p-3 space-y-3">\n                  <div className="flex items-center space-x-2">\n                    <div className="w-2 h-2 bg-green-500 rounded-full" />\n                    <div className="text-sm text-green-600 dark:text-green-400">\n                      Email is valid\n                    </div>\n                  </div>\n\n                  <div className="text-sm">\n                    <div className="text-slate-500 dark:text-slate-400">\n                      Domain:{" "}\n                      <span className="text-slate-700 dark:text-slate-300">\n                        {state.value.domain}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className="space-y-1">\n                    <div className="text-sm text-slate-500 dark:text-slate-400">\n                      Suggested alternatives:\n                    </div>\n                    <div className="space-y-1">\n                      {state.value.suggestions.map(suggestion => <div key={suggestion} className="text-sm text-slate-700 dark:text-slate-300 bg-slate-50 dark:bg-slate-600 p-1 rounded">\n                          {suggestion}\n                        </div>)}\n                    </div>\n                  </div>\n                </div>}\n            </div>\n\n            {/* Instructions */}\n            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n              <p className="text-sm text-blue-600 dark:text-blue-400">\n                Type in email and click validate to see the loading state is\n                managed independently! ðŸ”„\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
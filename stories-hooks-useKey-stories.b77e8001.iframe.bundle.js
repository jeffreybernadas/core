"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[8300],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/hooks/useEvent.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/misc/util.ts");const defaultTarget=_misc_util__WEBPACK_IMPORTED_MODULE_1__.Bd?window:null,isListenerType1=target=>!!target&&"function"==typeof target.addEventListener,isListenerType2=target=>!!target&&"function"==typeof target.on,__WEBPACK_DEFAULT_EXPORT__=(name,handler,target=defaultTarget,options)=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(handler&&target)return isListenerType1(target)?(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.on)(target,name,handler,options):isListenerType2(target)&&target.on(name,handler,options),()=>{isListenerType1(target)?(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.AU)(target,name,handler,options):isListenerType2(target)&&target.off(name,handler,options)}}),[name,handler,target,JSON.stringify(options)])}},"./src/hooks/useKey.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useEvent__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useEvent.ts"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/misc/util.ts");const __WEBPACK_DEFAULT_EXPORT__=(key,fn=_misc_util__WEBPACK_IMPORTED_MODULE_1__.lQ,opts={},deps=[key])=>{const{event="keydown",target,options}=opts,useMemoHandler=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{const predicate="function"==typeof(keyFilter=key)?keyFilter:"string"==typeof keyFilter?event=>event.key===keyFilter:keyFilter?()=>!0:()=>!1;var keyFilter;return handlerEvent=>{if(predicate(handlerEvent))return fn(handlerEvent)}}),deps);(0,_useEvent__WEBPACK_IMPORTED_MODULE_2__.A)(event,useMemoHandler,target,options)}},"./src/stories/hooks/useKey.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useKey.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/Event & Interaction/useKey",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useKey` is a hook that handles keyboard events with a simple and flexible API.\nIt supports key filtering, event types, and target elements.\n\n### Module Federation Import\n```tsx\nimport { useKey } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useKey } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  useKey("Escape", () => {\n    console.log("Escape key pressed!");\n  });\n\n  return <div>Press Escape to see the console log</div>;\n};\n```\n\n### Advanced Usage\n```tsx\nconst CustomKeyHandler = () => {\n  const inputRef = useRef(null);\n\n  useKey(\n    (event) => event.key === "Enter" && event.ctrlKey,\n    () => console.log("Ctrl+Enter pressed!"),\n    {\n      event: "keydown",\n      target: inputRef,\n      options: { passive: true }\n    }\n  );\n\n  return <input ref={inputRef} />;\n};\n```\n\n### Parameters\n```tsx\nkey: KeyFilter // String key name or predicate function\nfn?: Handler // Event handler function\nopts?: UseKeyOptions<T> // Options object\ndeps?: DependencyList // Dependencies array\n```\n\n### Returns\n```tsx\nvoid\n```\n\n### Browser Compatibility\nUses standard keyboard events:\n- keydown\n- keypress\n- keyup\nSupported in all modern browsers.\n\n### Related Resources\n- [MDN: KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)\n- [MDN: KeyboardEvent.key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)'}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Example={render:()=>{const[lastKey,setLastKey]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((e=>!0),(e=>setLastKey(e.key)),{event:"keydown"});const[escapeCount,setEscapeCount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("Escape",(()=>setEscapeCount((c=>c+1))));const[ctrlEnterCount,setCtrlEnterCount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((e=>"Enter"===e.key&&e.ctrlKey),(()=>setCtrlEnterCount((c=>c+1))));const inputRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[inputKeyCount,setInputKeyCount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);return(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((e=>!0),(()=>setInputKeyCount((c=>c+1))),{event:"keydown",target:inputRef.current}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-[400px]"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Global Key Logger"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded text-center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-slate-500 dark:text-slate-400"},"Last key pressed:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-2xl font-mono mt-1 text-slate-700 dark:text-slate-300"},lastKey||"None"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Escape Key Counter"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-green-100 dark:bg-green-900/20 p-4 rounded text-center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-green-600 dark:text-green-400"},"Times Escape pressed:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-2xl font-mono mt-1 text-green-700 dark:text-green-300"},escapeCount))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Ctrl+Enter Counter"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-purple-100 dark:bg-purple-900/20 p-4 rounded text-center"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-purple-600 dark:text-purple-400"},"Times Ctrl+Enter pressed:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-2xl font-mono mt-1 text-purple-700 dark:text-purple-300"},ctrlEnterCount))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Input-specific Keys"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{ref:inputRef,type:"text",placeholder:"Type here...",className:"w-full px-4 py-2 rounded border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 text-slate-900 dark:text-slate-100"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-center text-sm text-slate-500 dark:text-slate-400"},"Keys pressed in input: ",inputKeyCount))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try different keyboard interactions! Press any key to see it logged, hit Escape to increment its counter, use Ctrl+Enter for a special count, or type in the input to see input-specific events! ⌨️"))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Example 1: Simple key press logger\n    const [lastKey, setLastKey] = useState<string>("");\n    useKey(e => true,\n    // Accept all keys\n    e => setLastKey(e.key), {\n      event: "keydown"\n    });\n\n    // Example 2: Specific key handler\n    const [escapeCount, setEscapeCount] = useState(0);\n    useKey("Escape", () => setEscapeCount(c => c + 1));\n\n    // Example 3: Custom key combination\n    const [ctrlEnterCount, setCtrlEnterCount] = useState(0);\n    useKey(e => e.key === "Enter" && e.ctrlKey, () => setCtrlEnterCount(c => c + 1));\n\n    // Example 4: Input-specific handler\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [inputKeyCount, setInputKeyCount] = useState(0);\n    useKey(e => true, () => setInputKeyCount(c => c + 1), {\n      event: "keydown",\n      target: inputRef.current as HTMLElement | null | undefined\n    });\n    return <div className="w-[400px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6">\n          {/* Global Key Logger */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Global Key Logger\n            </h3>\n            <div className="bg-slate-100 dark:bg-slate-700 p-4 rounded text-center">\n              <div className="text-sm text-slate-500 dark:text-slate-400">\n                Last key pressed:\n              </div>\n              <div className="text-2xl font-mono mt-1 text-slate-700 dark:text-slate-300">\n                {lastKey || "None"}\n              </div>\n            </div>\n          </div>\n\n          {/* Escape Key Counter */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Escape Key Counter\n            </h3>\n            <div className="bg-green-100 dark:bg-green-900/20 p-4 rounded text-center">\n              <div className="text-sm text-green-600 dark:text-green-400">\n                Times Escape pressed:\n              </div>\n              <div className="text-2xl font-mono mt-1 text-green-700 dark:text-green-300">\n                {escapeCount}\n              </div>\n            </div>\n          </div>\n\n          {/* Ctrl+Enter Counter */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Ctrl+Enter Counter\n            </h3>\n            <div className="bg-purple-100 dark:bg-purple-900/20 p-4 rounded text-center">\n              <div className="text-sm text-purple-600 dark:text-purple-400">\n                Times Ctrl+Enter pressed:\n              </div>\n              <div className="text-2xl font-mono mt-1 text-purple-700 dark:text-purple-300">\n                {ctrlEnterCount}\n              </div>\n            </div>\n          </div>\n\n          {/* Input-specific Key Counter */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Input-specific Keys\n            </h3>\n            <div className="space-y-2">\n              <input ref={inputRef} type="text" placeholder="Type here..." className="w-full px-4 py-2 rounded border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 text-slate-900 dark:text-slate-100" />\n              <div className="text-center text-sm text-slate-500 dark:text-slate-400">\n                Keys pressed in input: {inputKeyCount}\n              </div>\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              Try different keyboard interactions! Press any key to see it\n              logged, hit Escape to increment its counter, use Ctrl+Enter for a\n              special count, or type in the input to see input-specific events!\n              ⌨️\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
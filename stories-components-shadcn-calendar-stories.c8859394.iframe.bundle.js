"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[3968],{"./src/components/shadcn/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button,r:()=>buttonVariants});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@radix-ui/react-slot/dist/index.mjs"),class_variance_authority__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/class-variance-authority/dist/index.mjs"),_lib__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/utils.ts");const buttonVariants=(0,class_variance_authority__WEBPACK_IMPORTED_MODULE_1__.F)("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90",destructive:"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40",outline:"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2 has-[>svg]:px-3",sm:"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",lg:"h-10 rounded-md px-6 has-[>svg]:px-4",icon:"size-9"}},defaultVariants:{variant:"default",size:"default"}});function Button({className,variant,size,asChild=!1,...props}){const Comp=asChild?_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_2__.DX:"button";return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Comp,{"data-slot":"button",className:(0,_lib__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({variant,size,className})),...props})}Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{asChild:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}}},"./src/components/shadcn/popover.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AM:()=>Popover,Wv:()=>PopoverTrigger,hl:()=>PopoverContent});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@radix-ui/react-popover/dist/index.mjs"),_lib__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/lib/utils.ts");function Popover({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_1__.bL,{"data-slot":"popover",...props})}function PopoverTrigger({...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_1__.l9,{"data-slot":"popover-trigger",...props})}function PopoverContent({className,align="center",sideOffset=4,...props}){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_1__.ZL,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_popover__WEBPACK_IMPORTED_MODULE_1__.UC,{"data-slot":"popover-content",align,sideOffset,className:(0,_lib__WEBPACK_IMPORTED_MODULE_2__.cn)("bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 rounded-md border p-4 shadow-md outline-hidden",className),...props}))}Popover.__docgenInfo={description:"",methods:[],displayName:"Popover"},PopoverTrigger.__docgenInfo={description:"",methods:[],displayName:"PopoverTrigger"},PopoverContent.__docgenInfo={description:"",methods:[],displayName:"PopoverContent",props:{align:{defaultValue:{value:'"center"',computed:!1},required:!1},sideOffset:{defaultValue:{value:"4",computed:!1},required:!1}}}},"./src/lib/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.$)(inputs))},"./src/stories/components/shadcn/calendar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DatePicker:()=>DatePicker,DateRangeSelection:()=>DateRangeSelection,Default:()=>Default,DisabledDates:()=>DisabledDates,MultipleSelection:()=>MultipleSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>calendar_stories});var react=__webpack_require__("./node_modules/react/index.js"),shadcn_button=__webpack_require__("./src/components/shadcn/button.tsx"),utils=__webpack_require__("./src/lib/utils.ts"),differenceInCalendarDays=__webpack_require__("./node_modules/date-fns/differenceInCalendarDays.js"),chevron_left=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-left.js"),chevron_right=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/chevron-right.js"),DayPicker=__webpack_require__("./node_modules/react-day-picker/dist/esm/DayPicker.js"),useDayPicker=__webpack_require__("./node_modules/react-day-picker/dist/esm/useDayPicker.js"),labelPrevious=__webpack_require__("./node_modules/react-day-picker/dist/esm/labels/labelPrevious.js"),labelNext=__webpack_require__("./node_modules/react-day-picker/dist/esm/labels/labelNext.js");function Calendar({className,showOutsideDays=!0,showYearSwitcher=!0,yearRange=12,numberOfMonths,...props}){const[navView,setNavView]=react.useState("days"),[displayYears,setDisplayYears]=react.useState(react.useMemo((()=>{const currentYear=(new Date).getFullYear();return{from:currentYear-Math.floor(yearRange/2-1),to:currentYear+Math.ceil(yearRange/2)}}),[yearRange])),{onNextClick,onPrevClick,startMonth,endMonth}=props,columnsDisplayed="years"===navView?1:numberOfMonths,_monthsClassName=(0,utils.cn)("relative flex",props.monthsClassName),_monthCaptionClassName=(0,utils.cn)("relative mx-10 flex h-7 items-center justify-center",props.monthCaptionClassName),_weekdaysClassName=(0,utils.cn)("flex flex-row",props.weekdaysClassName),_weekdayClassName=(0,utils.cn)("w-8 text-sm font-normal text-muted-foreground",props.weekdayClassName),_monthClassName=(0,utils.cn)("w-full",props.monthClassName),_captionClassName=(0,utils.cn)("relative flex items-center justify-center pt-1",props.captionClassName),_captionLabelClassName=(0,utils.cn)("truncate text-sm font-medium",props.captionLabelClassName),buttonNavClassName=(0,shadcn_button.r)({variant:"outline",className:"absolute h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"}),_buttonNextClassName=(0,utils.cn)(buttonNavClassName,"right-0",props.buttonNextClassName),_buttonPreviousClassName=(0,utils.cn)(buttonNavClassName,"left-0",props.buttonPreviousClassName),_navClassName=(0,utils.cn)("flex items-start",props.navClassName),_monthGridClassName=(0,utils.cn)("mx-auto mt-4",props.monthGridClassName),_weekClassName=(0,utils.cn)("mt-2 flex w-max items-start",props.weekClassName),_dayClassName=(0,utils.cn)("flex size-8 flex-1 items-center justify-center p-0 text-sm",props.dayClassName),_dayButtonClassName=(0,utils.cn)((0,shadcn_button.r)({variant:"ghost"}),"size-8 rounded-md p-0 font-normal transition-none aria-selected:opacity-100",props.dayButtonClassName),buttonRangeClassName="bg-accent [&>button]:bg-primary [&>button]:text-primary-foreground [&>button]:hover:bg-primary [&>button]:hover:text-primary-foreground",_rangeStartClassName=(0,utils.cn)(buttonRangeClassName,"day-range-start rounded-s-md",props.rangeStartClassName),_rangeEndClassName=(0,utils.cn)(buttonRangeClassName,"day-range-end rounded-e-md",props.rangeEndClassName),_rangeMiddleClassName=(0,utils.cn)("bg-accent !text-foreground [&>button]:bg-transparent [&>button]:!text-foreground [&>button]:hover:bg-transparent [&>button]:hover:!text-foreground",props.rangeMiddleClassName),_selectedClassName=(0,utils.cn)("[&>button]:bg-primary [&>button]:text-primary-foreground [&>button]:hover:bg-primary [&>button]:hover:text-primary-foreground",props.selectedClassName),_todayClassName=(0,utils.cn)("[&>button]:bg-accent [&>button]:text-accent-foreground",props.todayClassName),_outsideClassName=(0,utils.cn)("day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30",props.outsideClassName),_disabledClassName=(0,utils.cn)("text-muted-foreground opacity-50",props.disabledClassName),_hiddenClassName=(0,utils.cn)("invisible flex-1",props.hiddenClassName);return react.createElement(DayPicker.h,{showOutsideDays,className:(0,utils.cn)("p-3",className),style:{width:248.8*(columnsDisplayed??1)+"px"},classNames:{months:_monthsClassName,month_caption:_monthCaptionClassName,weekdays:_weekdaysClassName,weekday:_weekdayClassName,month:_monthClassName,caption:_captionClassName,caption_label:_captionLabelClassName,button_next:_buttonNextClassName,button_previous:_buttonPreviousClassName,nav:_navClassName,month_grid:_monthGridClassName,week:_weekClassName,day:_dayClassName,day_button:_dayButtonClassName,range_start:_rangeStartClassName,range_middle:_rangeMiddleClassName,range_end:_rangeEndClassName,selected:_selectedClassName,today:_todayClassName,outside:_outsideClassName,disabled:_disabledClassName,hidden:_hiddenClassName},components:{Chevron:({orientation})=>{const Icon="left"===orientation?chevron_left.A:chevron_right.A;return react.createElement(Icon,{className:"h-4 w-4"})},Nav:({className})=>react.createElement(Nav,{className,displayYears,navView,setDisplayYears,startMonth,endMonth,onPrevClick}),CaptionLabel:props=>react.createElement(CaptionLabel,{showYearSwitcher,navView,setNavView,displayYears,...props}),MonthGrid:({className,children,...props})=>react.createElement(MonthGrid,{children,className,displayYears,startMonth,endMonth,navView,setNavView,...props})},numberOfMonths:columnsDisplayed,...props})}function Nav({className,navView,startMonth,endMonth,displayYears,setDisplayYears,onPrevClick,onNextClick}){const{nextMonth,previousMonth,goToMonth}=(0,useDayPicker.w)(),isPreviousDisabled="years"===navView?startMonth&&(0,differenceInCalendarDays.m)(new Date(displayYears.from-1,0,1),startMonth)<0||endMonth&&(0,differenceInCalendarDays.m)(new Date(displayYears.from-1,0,1),endMonth)>0:!previousMonth,isNextDisabled="years"===navView?startMonth&&(0,differenceInCalendarDays.m)(new Date(displayYears.to+1,0,1),startMonth)<0||endMonth&&(0,differenceInCalendarDays.m)(new Date(displayYears.to+1,0,1),endMonth)>0:!nextMonth,handlePreviousClick=react.useCallback((()=>{if(previousMonth){if("years"===navView)return setDisplayYears((prev=>({from:prev.from-(prev.to-prev.from+1),to:prev.to-(prev.to-prev.from+1)}))),void onPrevClick?.(new Date(displayYears.from-(displayYears.to-displayYears.from),0,1));goToMonth(previousMonth),onPrevClick?.(previousMonth)}}),[previousMonth,goToMonth]),handleNextClick=react.useCallback((()=>{if(nextMonth){if("years"===navView)return setDisplayYears((prev=>({from:prev.from+(prev.to-prev.from+1),to:prev.to+(prev.to-prev.from+1)}))),void onNextClick?.(new Date(displayYears.from+(displayYears.to-displayYears.from),0,1));goToMonth(nextMonth),onNextClick?.(nextMonth)}}),[goToMonth,nextMonth]);return react.createElement("nav",{className:(0,utils.cn)("flex items-center",className)},react.createElement(shadcn_button.$,{variant:"outline",className:"absolute left-0 h-7 w-7 bg-transparent p-0 opacity-80 hover:opacity-100",type:"button",tabIndex:isPreviousDisabled?void 0:-1,disabled:isPreviousDisabled,"aria-label":"years"===navView?`Go to the previous ${displayYears.to-displayYears.from+1} years`:(0,labelPrevious.o)(previousMonth),onClick:handlePreviousClick},react.createElement(chevron_left.A,{className:"h-4 w-4"})),react.createElement(shadcn_button.$,{variant:"outline",className:"absolute right-0 h-7 w-7 bg-transparent p-0 opacity-80 hover:opacity-100",type:"button",tabIndex:isNextDisabled?void 0:-1,disabled:isNextDisabled,"aria-label":"years"===navView?`Go to the next ${displayYears.to-displayYears.from+1} years`:(0,labelNext.s)(nextMonth),onClick:handleNextClick},react.createElement(chevron_right.A,{className:"h-4 w-4"})))}function CaptionLabel({children,showYearSwitcher,navView,setNavView,displayYears,...props}){return showYearSwitcher?react.createElement(shadcn_button.$,{className:"h-7 w-full truncate text-sm font-medium",variant:"ghost",size:"sm",onClick:()=>setNavView((prev=>"days"===prev?"years":"days"))},"days"===navView?children:displayYears.from+" - "+displayYears.to):react.createElement("span",props,children)}function MonthGrid({className,children,displayYears,startMonth,endMonth,navView,setNavView,...props}){return"years"===navView?react.createElement(YearGrid,{displayYears,startMonth,endMonth,setNavView,navView,className,...props}):react.createElement("table",{className,...props},children)}function YearGrid({className,displayYears,startMonth,endMonth,setNavView,navView,...props}){const{goToMonth,selected}=(0,useDayPicker.w)();return react.createElement("div",{className:(0,utils.cn)("grid grid-cols-4 gap-y-2",className),...props},Array.from({length:displayYears.to-displayYears.from+1},((_,i)=>{const isBefore=(0,differenceInCalendarDays.m)(new Date(displayYears.from+i,11,31),startMonth)<0,isAfter=(0,differenceInCalendarDays.m)(new Date(displayYears.from+i,0,0),endMonth)>0,isDisabled=isBefore||isAfter;return react.createElement(shadcn_button.$,{key:i,className:(0,utils.cn)("h-7 w-full text-sm font-normal text-foreground",displayYears.from+i===(new Date).getFullYear()&&"bg-accent font-medium text-accent-foreground"),variant:"ghost",onClick:()=>{setNavView("days"),goToMonth(new Date(displayYears.from+i,selected?.getMonth()??0))},disabled:"years"===navView?isDisabled:void 0},displayYears.from+i)})))}Calendar.displayName="Calendar",Calendar.__docgenInfo={description:"A custom calendar component built on top of react-day-picker.\n@param props The props for the calendar.\n@default yearRange 12\n@returns",methods:[],displayName:"Calendar",props:{yearRange:{required:!1,tsType:{name:"number"},description:"In the year view, the number of years to display at once.\n@default 12",defaultValue:{value:"12",computed:!1}},showYearSwitcher:{required:!1,tsType:{name:"boolean"},description:"Wether to show the year switcher in the caption.\n@default true",defaultValue:{value:"true",computed:!1}},monthsClassName:{required:!1,tsType:{name:"string"},description:""},monthCaptionClassName:{required:!1,tsType:{name:"string"},description:""},weekdaysClassName:{required:!1,tsType:{name:"string"},description:""},weekdayClassName:{required:!1,tsType:{name:"string"},description:""},monthClassName:{required:!1,tsType:{name:"string"},description:""},captionClassName:{required:!1,tsType:{name:"string"},description:""},captionLabelClassName:{required:!1,tsType:{name:"string"},description:""},buttonNextClassName:{required:!1,tsType:{name:"string"},description:""},buttonPreviousClassName:{required:!1,tsType:{name:"string"},description:""},navClassName:{required:!1,tsType:{name:"string"},description:""},monthGridClassName:{required:!1,tsType:{name:"string"},description:""},weekClassName:{required:!1,tsType:{name:"string"},description:""},dayClassName:{required:!1,tsType:{name:"string"},description:""},dayButtonClassName:{required:!1,tsType:{name:"string"},description:""},rangeStartClassName:{required:!1,tsType:{name:"string"},description:""},rangeEndClassName:{required:!1,tsType:{name:"string"},description:""},selectedClassName:{required:!1,tsType:{name:"string"},description:""},todayClassName:{required:!1,tsType:{name:"string"},description:""},outsideClassName:{required:!1,tsType:{name:"string"},description:""},disabledClassName:{required:!1,tsType:{name:"string"},description:""},rangeMiddleClassName:{required:!1,tsType:{name:"string"},description:""},hiddenClassName:{required:!1,tsType:{name:"string"},description:""},showOutsideDays:{defaultValue:{value:"true",computed:!1},required:!1}}};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx"),popover=__webpack_require__("./src/components/shadcn/popover.tsx"),calendar=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/calendar.js"),format=__webpack_require__("./node_modules/date-fns/format.js");const calendar_stories={title:"Components/Shadcn/Calendar",component:Calendar,parameters:{layout:"centered",docs:{controls:{exclude:["monthsClassName","monthCaptionClassName","weekdaysClassName","weekdayClassName","monthClassName","captionClassName","captionLabelClassName","buttonNextClassName","buttonPreviousClassName","navClassName","monthGridClassName","weekClassName","dayClassName","dayButtonClassName","rangeStartClassName","rangeEndClassName","selectedClassName","todayClassName","outsideClassName","disabledClassName","rangeMiddleClassName","hiddenClassName","showYearSwitcher","showOutsideDays","yearRange"]},description:{component:"A date field component that allows users to enter and edit date.\n\nSee the [Shadcn docs](https://ui.shadcn.com/docs/components/calendar) for more information."}}},tags:["autodocs","stable","version:2.3.0"],argTypes:{className:{control:"text",description:"Additional CSS classes to apply",table:{type:{summary:"string"}}},mode:{control:!1,options:["single","multiple","range"],description:"The mode of the calendar.",table:{type:{summary:"'single' | 'multiple' | 'range'"},defaultValue:{summary:"single"}}},selected:{control:"object",description:"The selected date or dates.",table:{type:{summary:"Date | Date[]"}}},onSelect:{control:!1,description:"The function to call when a date is selected.",table:{type:{summary:"function"}}},numberOfMonths:{control:"number",description:"The number of months to display.",table:{type:{summary:"number"}}},disabled:{control:"object",description:"The dates to disable.",table:{type:{summary:"Date[]"}}},defaultMonth:{control:"object",description:"The default month to display.",table:{type:{summary:"Date"}}}},decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},Default={args:{mode:"single",selected:new Date,className:"rounded-md border"}},DateRangeSelection={render:()=>{const[date,setDate]=react.useState({from:new Date,to:new Date((new Date).setDate((new Date).getDate()+7))});return react.createElement(Calendar,{mode:"range",selected:date,onSelect:setDate,className:"rounded-md border",numberOfMonths:2})}},MultipleSelection={render:()=>{const[dates,setDates]=react.useState([new Date,new Date((new Date).setDate((new Date).getDate()+3)),new Date((new Date).setDate((new Date).getDate()+7))]);return react.createElement(Calendar,{mode:"multiple",selected:dates,onSelect:setDates,className:"rounded-md border"})}},DisabledDates={args:{mode:"single",selected:new Date,className:"rounded-md border",disabled:[{before:new Date(2023,0,10)},{after:new Date(2023,0,20)},{dayOfWeek:[0,6]},new Date(2023,0,15)],defaultMonth:new Date(2023,0)}},DatePicker={render:()=>{const[date,setDate]=react.useState();return react.createElement(popover.AM,null,react.createElement(popover.Wv,{asChild:!0},react.createElement(shadcn_button.$,{variant:"outline",className:(0,utils.cn)("w-[240px] justify-start text-left font-normal",!date&&"text-muted-foreground")},react.createElement(calendar.A,{className:"mr-2 h-4 w-4"}),date?(0,format.GP)(date,"PPP"):react.createElement("span",null,"Pick a date"))),react.createElement(popover.hl,{className:"w-auto p-0",align:"start"},react.createElement(Calendar,{mode:"single",selected:date,onSelect:setDate})))}},__namedExportsOrder=["Default","DateRangeSelection","MultipleSelection","DisabledDates","DatePicker"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    mode: "single",\n    selected: new Date(),\n    className: "rounded-md border"\n  }\n}',...Default.parameters?.docs?.source},description:{story:"Default calendar with a single date selection.",...Default.parameters?.docs?.description}}},DateRangeSelection.parameters={...DateRangeSelection.parameters,docs:{...DateRangeSelection.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [date, setDate] = React.useState<DayPickerDateRange | undefined>({\n      from: new Date(),\n      to: new Date(new Date().setDate(new Date().getDate() + 7))\n    });\n    return <Calendar mode="range" selected={date} onSelect={setDate} className="rounded-md border" numberOfMonths={2} />;\n  }\n}',...DateRangeSelection.parameters?.docs?.source},description:{story:"Calendar with date range selection.",...DateRangeSelection.parameters?.docs?.description}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [dates, setDates] = React.useState<Date[] | undefined>([new Date(), new Date(new Date().setDate(new Date().getDate() + 3)), new Date(new Date().setDate(new Date().getDate() + 7))]);\n    return <Calendar mode="multiple" selected={dates} onSelect={setDates} className="rounded-md border" />;\n  }\n}',...MultipleSelection.parameters?.docs?.source},description:{story:"Calendar with multiple date selection.",...MultipleSelection.parameters?.docs?.description}}},DisabledDates.parameters={...DisabledDates.parameters,docs:{...DisabledDates.parameters?.docs,source:{originalSource:'{\n  args: {\n    mode: "single",\n    selected: new Date(),\n    className: "rounded-md border",\n    disabled: [{\n      before: new Date(2023, 0, 10)\n    }, {\n      after: new Date(2023, 0, 20)\n    }, {\n      dayOfWeek: [0, 6]\n    },\n    // Disable weekends\n    new Date(2023, 0, 15) // Disable specific date\n    ],\n    defaultMonth: new Date(2023, 0)\n  }\n}',...DisabledDates.parameters?.docs?.source},description:{story:"Calendar with disabled dates.",...DisabledDates.parameters?.docs?.description}}},DatePicker.parameters={...DatePicker.parameters,docs:{...DatePicker.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [date, setDate] = React.useState<Date>();\n    return <Popover>\n        <PopoverTrigger asChild>\n          <Button variant={"outline"} className={cn("w-[240px] justify-start text-left font-normal", !date && "text-muted-foreground")}>\n            <CalendarIcon className="mr-2 h-4 w-4" />\n            {date ? format(date, "PPP") : <span>Pick a date</span>}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className="w-auto p-0" align="start">\n          <Calendar mode="single" selected={date} onSelect={setDate} />\n        </PopoverContent>\n      </Popover>;\n  }\n}',...DatePicker.parameters?.docs?.source},description:{story:"Calendar in a date picker with a popover.",...DatePicker.parameters?.docs?.description}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
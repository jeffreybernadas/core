/*! For license information please see stories-hooks-useMeasure-stories.11802edb.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[481],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/hooks/useIsomorphicLayoutEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/hooks/misc/util.ts").Bd?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect},"./src/stories/hooks/useMeasure.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useMeasure_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),useIsomorphicLayoutEffect=__webpack_require__("./src/hooks/useIsomorphicLayoutEffect.ts"),util=__webpack_require__("./src/hooks/misc/util.ts");const defaultState={x:0,y:0,width:0,height:0,top:0,left:0,bottom:0,right:0};const hooks_useMeasure=util.Bd&&void 0!==window.ResizeObserver?function useMeasure(){const[element,ref]=(0,react.useState)(null),[rect,setRect]=(0,react.useState)(defaultState),observer=(0,react.useMemo)((()=>new window.ResizeObserver((entries=>{if(entries[0]){const{x,y,width,height,top,left,bottom,right}=entries[0].contentRect;setRect({x,y,width,height,top,left,bottom,right})}}))),[]);return(0,useIsomorphicLayoutEffect.A)((()=>{if(element)return observer.observe(element),()=>{observer.disconnect()}}),[element]),[ref,rect]}:()=>[util.lQ,defaultState];var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useMeasure_stories={title:"Hooks/Utility/useMeasure",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useMeasure` is a hook that measures DOM elements using ResizeObserver.\nIt provides real-time measurements of an element\'s size and position.\n\n### Module Federation Import\n```tsx\nimport { useMeasure } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useMeasure } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [ref, { width, height }] = useMeasure();\n\n  return (\n    <div ref={ref}>\n      Width: {width}px, Height: {height}px\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseMeasure<E extends Element = Element>(): [\n  ref: (element: E) => void,\n  rect: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    top: number;\n    left: number;\n    bottom: number;\n    right: number;\n  }\n]\n```\n\n### Returns\n```tsx\n[\n  ref: (element: E) => void,  // Ref callback to attach to element\n  rect: {                     // Element measurements\n    x: number;               // X position relative to viewport\n    y: number;               // Y position relative to viewport\n    width: number;           // Element width\n    height: number;          // Element height\n    top: number;             // Distance from top of viewport\n    left: number;            // Distance from left of viewport\n    bottom: number;          // Distance from bottom of viewport\n    right: number;           // Distance from right of viewport\n  }\n]\n```\n\n### Features\n- Real-time measurements using ResizeObserver\n- SSR compatible with fallback\n- Type-safe with TypeScript\n- Zero dependencies\n- Handles cleanup automatically\n\n### Browser Compatibility\nUses ResizeObserver API.\nFalls back gracefully when ResizeObserver is not available.\n\n### Related Resources\n- [MDN: ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n- [MDN: Element.getBoundingClientRect()](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect)'}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},Example={render:()=>{const[size,setSize]=(0,react.useState)({width:200,height:150}),[ref,rect]=hooks_useMeasure(),resizableRef=(0,react.useRef)(null);return(0,react.useEffect)((()=>{let rafId;const updateMeasurements=()=>{resizableRef.current&&ref(resizableRef.current),rafId=requestAnimationFrame(updateMeasurements)};return rafId=requestAnimationFrame(updateMeasurements),()=>cancelAnimationFrame(rafId)}),[ref]),(0,jsx_runtime.jsx)("div",{className:"w-[500px]",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-8",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Resizable Element"}),(0,jsx_runtime.jsx)("div",{className:"relative",children:(0,jsx_runtime.jsxs)("div",{ref:resizableRef,style:{width:size.width,height:size.height},className:"bg-blue-100 dark:bg-blue-900/20 rounded-lg p-4 relative",children:[(0,jsx_runtime.jsx)("div",{className:"absolute inset-0 flex items-center justify-center",children:(0,jsx_runtime.jsx)("p",{className:"text-blue-600 dark:text-blue-400 text-sm",children:"Resize me using the handles!"})}),(0,jsx_runtime.jsx)("div",{className:"absolute right-0 inset-y-0 w-2 cursor-ew-resize hover:bg-blue-300 dark:hover:bg-blue-700 rounded",onMouseDown:e=>{const startX=e.clientX,startWidth=size.width,handleMouseMove=e=>{const delta=e.clientX-startX;setSize((prev=>({...prev,width:Math.max(50,startWidth+delta)})))},handleMouseUp=()=>{document.removeEventListener("mousemove",handleMouseMove),document.removeEventListener("mouseup",handleMouseUp)};document.addEventListener("mousemove",handleMouseMove),document.addEventListener("mouseup",handleMouseUp)}}),(0,jsx_runtime.jsx)("div",{className:"absolute bottom-0 inset-x-0 h-2 cursor-ns-resize hover:bg-blue-300 dark:hover:bg-blue-700 rounded",onMouseDown:e=>{const startY=e.clientY,startHeight=size.height,handleMouseMove=e=>{const delta=e.clientY-startY;setSize((prev=>({...prev,height:Math.max(50,startHeight+delta)})))},handleMouseUp=()=>{document.removeEventListener("mousemove",handleMouseMove),document.removeEventListener("mouseup",handleMouseUp)};document.addEventListener("mousemove",handleMouseMove),document.addEventListener("mouseup",handleMouseUp)}})]})}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded space-y-2",children:[(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-2 gap-4",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-slate-500 dark:text-slate-400",children:"Width:"}),(0,jsx_runtime.jsxs)("p",{className:"font-mono text-slate-700 dark:text-slate-300",children:[Math.round(rect.width),"px"]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-slate-500 dark:text-slate-400",children:"Height:"}),(0,jsx_runtime.jsxs)("p",{className:"font-mono text-slate-700 dark:text-slate-300",children:[Math.round(rect.height),"px"]})]})]}),(0,jsx_runtime.jsxs)("div",{className:"grid grid-cols-2 gap-4",children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-slate-500 dark:text-slate-400",children:"Position:"}),(0,jsx_runtime.jsxs)("p",{className:"font-mono text-slate-700 dark:text-slate-300",children:["x: ",Math.round(rect.x),"px, y: ",Math.round(rect.y),"px"]})]}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-slate-500 dark:text-slate-400",children:"Bounds:"}),(0,jsx_runtime.jsxs)("p",{className:"font-mono text-slate-700 dark:text-slate-300",children:[Math.round(rect.left),"px, ",Math.round(rect.top),"px,"," ",Math.round(rect.right),"px, ",Math.round(rect.bottom),"px"]})]})]})]})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"Try resizing the blue box using the right and bottom handles! Watch how the measurements update in real-time as you interact with the element! 📏"})})]})})}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // State for resizable element\n    const [size, setSize] = useState({\n      width: 200,\n      height: 150\n    });\n    const [ref, rect] = useMeasure<HTMLDivElement>();\n    const resizableRef = useRef<HTMLDivElement>(null);\n\n    // Update measurements on animation frame\n    useEffect(() => {\n      let rafId: number;\n      const updateMeasurements = () => {\n        if (resizableRef.current) {\n          ref(resizableRef.current);\n        }\n        rafId = requestAnimationFrame(updateMeasurements);\n      };\n      rafId = requestAnimationFrame(updateMeasurements);\n      return () => cancelAnimationFrame(rafId);\n    }, [ref]);\n    return <div className="w-[500px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-8">\n          {/* Resizable Element */}\n          <div className="space-y-4">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Resizable Element\n            </h3>\n            <div className="relative">\n              <div ref={resizableRef} style={{\n              width: size.width,\n              height: size.height\n            }} className="bg-blue-100 dark:bg-blue-900/20 rounded-lg p-4 relative">\n                <div className="absolute inset-0 flex items-center justify-center">\n                  <p className="text-blue-600 dark:text-blue-400 text-sm">\n                    Resize me using the handles!\n                  </p>\n                </div>\n                {/* Resize handles */}\n                <div className="absolute right-0 inset-y-0 w-2 cursor-ew-resize hover:bg-blue-300 dark:hover:bg-blue-700 rounded" onMouseDown={e => {\n                const startX = e.clientX;\n                const startWidth = size.width;\n                const handleMouseMove = (e: MouseEvent) => {\n                  const delta = e.clientX - startX;\n                  setSize(prev => ({\n                    ...prev,\n                    width: Math.max(50, startWidth + delta)\n                  }));\n                };\n                const handleMouseUp = () => {\n                  document.removeEventListener("mousemove", handleMouseMove);\n                  document.removeEventListener("mouseup", handleMouseUp);\n                };\n                document.addEventListener("mousemove", handleMouseMove);\n                document.addEventListener("mouseup", handleMouseUp);\n              }} />\n                <div className="absolute bottom-0 inset-x-0 h-2 cursor-ns-resize hover:bg-blue-300 dark:hover:bg-blue-700 rounded" onMouseDown={e => {\n                const startY = e.clientY;\n                const startHeight = size.height;\n                const handleMouseMove = (e: MouseEvent) => {\n                  const delta = e.clientY - startY;\n                  setSize(prev => ({\n                    ...prev,\n                    height: Math.max(50, startHeight + delta)\n                  }));\n                };\n                const handleMouseUp = () => {\n                  document.removeEventListener("mousemove", handleMouseMove);\n                  document.removeEventListener("mouseup", handleMouseUp);\n                };\n                document.addEventListener("mousemove", handleMouseMove);\n                document.addEventListener("mouseup", handleMouseUp);\n              }} />\n              </div>\n            </div>\n            <div className="bg-slate-100 dark:bg-slate-700 p-4 rounded space-y-2">\n              <div className="grid grid-cols-2 gap-4">\n                <div>\n                  <p className="text-sm text-slate-500 dark:text-slate-400">\n                    Width:\n                  </p>\n                  <p className="font-mono text-slate-700 dark:text-slate-300">\n                    {Math.round(rect.width)}px\n                  </p>\n                </div>\n                <div>\n                  <p className="text-sm text-slate-500 dark:text-slate-400">\n                    Height:\n                  </p>\n                  <p className="font-mono text-slate-700 dark:text-slate-300">\n                    {Math.round(rect.height)}px\n                  </p>\n                </div>\n              </div>\n              <div className="grid grid-cols-2 gap-4">\n                <div>\n                  <p className="text-sm text-slate-500 dark:text-slate-400">\n                    Position:\n                  </p>\n                  <p className="font-mono text-slate-700 dark:text-slate-300">\n                    x: {Math.round(rect.x)}px, y: {Math.round(rect.y)}px\n                  </p>\n                </div>\n                <div>\n                  <p className="text-sm text-slate-500 dark:text-slate-400">\n                    Bounds:\n                  </p>\n                  <p className="font-mono text-slate-700 dark:text-slate-300">\n                    {Math.round(rect.left)}px, {Math.round(rect.top)}px,{" "}\n                    {Math.round(rect.right)}px, {Math.round(rect.bottom)}px\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              Try resizing the blue box using the right and bottom handles!\n              Watch how the measurements update in real-time as you interact\n              with the element! 📏\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
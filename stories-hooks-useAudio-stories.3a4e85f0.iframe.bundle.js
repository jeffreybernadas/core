"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[4327],{"./src/hooks/factory/createHTMLMediaHook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>createHTMLMediaHook});var react=__webpack_require__("./node_modules/react/index.js"),useSetState=__webpack_require__("./src/hooks/useSetState.ts");function parseTimeRanges(ranges){const result=[];for(let i=0;i<ranges.length;i++)result.push({start:ranges.start(i),end:ranges.end(i)});return result}function createHTMLMediaHook(tag){return elOrProps=>{let element,props;react.isValidElement(elOrProps)?(element=elOrProps,props=element.props):props=elOrProps;const[state,setState]=(0,useSetState.A)({buffered:[],time:0,duration:0,paused:!0,muted:!1,volume:1,playing:!1}),ref=(0,react.useRef)(null),wrapEvent=(userEvent,proxyEvent)=>event=>{try{proxyEvent&&proxyEvent(event)}finally{userEvent&&userEvent(event)}},onPlay=()=>setState({paused:!1}),onPlaying=()=>setState({playing:!0}),onWaiting=()=>setState({playing:!1}),onPause=()=>setState({paused:!0,playing:!1}),onVolumeChange=()=>{const el=ref.current;el&&setState({muted:el.muted,volume:el.volume})},onDurationChange=()=>{const el=ref.current;if(!el)return;const{duration,buffered}=el;setState({duration,buffered:parseTimeRanges(buffered)})},onTimeUpdate=()=>{const el=ref.current;el&&setState({time:el.currentTime})},onProgress=()=>{const el=ref.current;el&&setState({buffered:parseTimeRanges(el.buffered)})};element=element?react.cloneElement(element,{controls:!1,...props,ref,onPlay:wrapEvent(props.onPlay,onPlay),onPlaying:wrapEvent(props.onPlaying,onPlaying),onWaiting:wrapEvent(props.onWaiting,onWaiting),onPause:wrapEvent(props.onPause,onPause),onVolumeChange:wrapEvent(props.onVolumeChange,onVolumeChange),onDurationChange:wrapEvent(props.onDurationChange,onDurationChange),onTimeUpdate:wrapEvent(props.onTimeUpdate,onTimeUpdate),onProgress:wrapEvent(props.onProgress,onProgress)}):react.createElement(tag,{controls:!1,...props,ref,onPlay:wrapEvent(props.onPlay,onPlay),onPlaying:wrapEvent(props.onPlaying,onPlaying),onWaiting:wrapEvent(props.onWaiting,onWaiting),onPause:wrapEvent(props.onPause,onPause),onVolumeChange:wrapEvent(props.onVolumeChange,onVolumeChange),onDurationChange:wrapEvent(props.onDurationChange,onDurationChange),onTimeUpdate:wrapEvent(props.onTimeUpdate,onTimeUpdate),onProgress:wrapEvent(props.onProgress,onProgress)});let lockPlay=!1;const controls={play:()=>{const el=ref.current;if(el&&!lockPlay){const promise=el.play();if("object"==typeof promise){lockPlay=!0;const resetLock=()=>{lockPlay=!1};promise.then(resetLock,resetLock)}return promise}},pause:()=>{const el=ref.current;if(el&&!lockPlay)return el.pause()},seek:time=>{const el=ref.current;el&&void 0!==state.duration&&(time=Math.min(state.duration,Math.max(0,time)),el.currentTime=time)},volume:volume=>{const el=ref.current;el&&(volume=Math.min(1,Math.max(0,volume)),el.volume=volume,setState({volume}))},mute:()=>{const el=ref.current;el&&(el.muted=!0)},unmute:()=>{const el=ref.current;el&&(el.muted=!1)}};return(0,react.useEffect)((()=>{const el=ref.current;el&&(setState({volume:el.volume,muted:el.muted,paused:el.paused}),props.autoPlay&&el.paused&&controls.play())}),[props.src]),[element,state,controls,ref]}}},"./src/hooks/useSetState.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=(initialState={})=>{const[state,set]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);return[state,(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((patch=>{set((prevState=>Object.assign({},prevState,patch instanceof Function?patch(prevState):patch)))}),[])]}},"./src/stories/hooks/useAudio.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useAudio_stories});var react=__webpack_require__("./node_modules/react/index.js");const hooks_useAudio=(0,__webpack_require__("./src/hooks/factory/createHTMLMediaHook.ts").A)("audio");var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useAudio_stories={title:"Hooks/Browser API/useAudio",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useAudio` is a hook that provides a declarative way to control HTML5 audio elements.\nIt offers a rich API for controlling audio playback, volume, seeking, and monitoring state.\n\n### Module Federation Import\n```tsx\nimport { useAudio } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useAudio } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [audio, state, controls] = useAudio({\n    src: "https://example.com/audio.mp3",\n    autoPlay: false,\n  });\n\n  return (\n    <div>\n      {audio}\n      <button onClick={controls.play}>Play</button>\n      <button onClick={controls.pause}>Pause</button>\n      <div>Current time: {state.time}</div>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseAudio(\n  props: HTMLMediaProps | ReactElement<HTMLMediaProps>\n): [ReactElement<HTMLMediaProps>, HTMLMediaState, HTMLMediaControls]\n```\n\n### Returns\n- [audio, state, controls]: A tuple containing:\n  - audio: ReactElement - The audio element to render\n  - state: HTMLMediaState\n    - buffered: Array of time ranges that have been buffered\n    - duration: Total duration of the audio\n    - paused: Whether the audio is paused\n    - muted: Whether the audio is muted\n    - time: Current playback time\n    - volume: Current volume (0 to 1)\n    - playing: Whether the audio is currently playing\n  - controls: HTMLMediaControls\n    - play(): Start playback\n    - pause(): Pause playback\n    - mute(): Mute audio\n    - unmute(): Unmute audio\n    - volume(value): Set volume (0 to 1)\n    - seek(time): Seek to specific time\n\n### Browser Compatibility\nUses HTML5 Audio API, supported in all modern browsers.\n\n### Related Resources\n- [MDN: HTMLAudioElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement)\n- [MDN: Using HTML5 audio](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},Example={render:()=>{const[audio,state,controls]=hooks_useAudio({src:"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3",autoPlay:!1});return react.createElement("div",{className:"space-y-6 max-w-lg"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Audio Player Example"),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react.createElement("div",{className:"space-y-4"},audio,react.createElement("div",{className:"flex items-center justify-center space-x-2"},react.createElement("button",{onClick:state.paused?controls.play:controls.pause,className:"p-3 rounded-full bg-blue-500 hover:bg-blue-600 text-white transition-colors"},state.paused?react.createElement("svg",{className:"w-6 h-6",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"}),react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})):react.createElement("svg",{className:"w-6 h-6",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"}))),react.createElement("button",{onClick:state.muted?controls.unmute:controls.mute,className:"p-3 rounded-full bg-slate-200 hover:bg-slate-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-200 transition-colors"},state.muted?react.createElement("svg",{className:"w-6 h-6",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"}),react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2"})):react.createElement("svg",{className:"w-6 h-6",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z"})))),react.createElement("div",{className:"space-y-2"},react.createElement("div",{className:"h-1 bg-slate-200 dark:bg-slate-700 rounded-full overflow-hidden"},react.createElement("div",{className:"h-full bg-blue-500 transition-all duration-100",style:{width:`${state.time/state.duration*100||0}%`}})),react.createElement("div",{className:"flex justify-between text-xs text-slate-500 dark:text-slate-400"},react.createElement("span",null,formatTime(state.time)),react.createElement("span",null,formatTime(state.duration)))),react.createElement("div",{className:"flex items-center space-x-2"},react.createElement("span",{className:"text-sm text-slate-600 dark:text-slate-400"},"Volume"),react.createElement("input",{type:"range",min:"0",max:"1",step:"0.1",value:state.volume,onChange:e=>controls.volume(Number(e.target.value)),className:"flex-grow h-1 bg-slate-200 dark:bg-slate-700 rounded-lg appearance-none cursor-pointer"}),react.createElement("span",{className:"text-sm text-slate-600 dark:text-slate-400"},Math.round(100*state.volume),"%")),react.createElement("div",{className:"text-sm text-center text-slate-500 dark:text-slate-400"},state.playing?react.createElement("span",{className:"flex items-center justify-center"},react.createElement("span",{className:"w-2 h-2 bg-green-500 rounded-full mr-2"}),"Playing"):react.createElement("span",{className:"flex items-center justify-center"},react.createElement("span",{className:"w-2 h-2 bg-slate-400 rounded-full mr-2"}),state.paused?"Paused":"Loading..."))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Play with the audio controls - try playing/pausing, adjusting volume, and seeking through the track! 🎵")))))}},formatTime=time=>`${Math.floor(time/60)}:${Math.floor(time%60).toString().padStart(2,"0")}`,__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [audio, state, controls] = useAudio({\n      src: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3",\n      autoPlay: false\n    });\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Audio Player Example\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="space-y-4">\n              {/* Hidden audio element */}\n              {audio}\n\n              {/* Playback controls */}\n              <div className="flex items-center justify-center space-x-2">\n                <button onClick={state.paused ? controls.play : controls.pause} className="p-3 rounded-full bg-blue-500 hover:bg-blue-600 text-white transition-colors">\n                  {state.paused ? <svg className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />\n                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />\n                    </svg> : <svg className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z" />\n                    </svg>}\n                </button>\n                <button onClick={state.muted ? controls.unmute : controls.mute} className="p-3 rounded-full bg-slate-200 hover:bg-slate-300 dark:bg-slate-700 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-200 transition-colors">\n                  {state.muted ? <svg className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />\n                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2" />\n                    </svg> : <svg className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">\n                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />\n                    </svg>}\n                </button>\n              </div>\n\n              {/* Progress bar */}\n              <div className="space-y-2">\n                <div className="h-1 bg-slate-200 dark:bg-slate-700 rounded-full overflow-hidden">\n                  <div className="h-full bg-blue-500 transition-all duration-100" style={{\n                  width: `${state.time / state.duration * 100 || 0}%`\n                }} />\n                </div>\n                <div className="flex justify-between text-xs text-slate-500 dark:text-slate-400">\n                  <span>{formatTime(state.time)}</span>\n                  <span>{formatTime(state.duration)}</span>\n                </div>\n              </div>\n\n              {/* Volume control */}\n              <div className="flex items-center space-x-2">\n                <span className="text-sm text-slate-600 dark:text-slate-400">\n                  Volume\n                </span>\n                <input type="range" min="0" max="1" step="0.1" value={state.volume} onChange={e => controls.volume(Number(e.target.value))} className="flex-grow h-1 bg-slate-200 dark:bg-slate-700 rounded-lg appearance-none cursor-pointer" />\n                <span className="text-sm text-slate-600 dark:text-slate-400">\n                  {Math.round(state.volume * 100)}%\n                </span>\n              </div>\n\n              {/* Status */}\n              <div className="text-sm text-center text-slate-500 dark:text-slate-400">\n                {state.playing ? <span className="flex items-center justify-center">\n                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2" />\n                    Playing\n                  </span> : <span className="flex items-center justify-center">\n                    <span className="w-2 h-2 bg-slate-400 rounded-full mr-2" />\n                    {state.paused ? "Paused" : "Loading..."}\n                  </span>}\n              </div>\n            </div>\n\n            {/* Instructions */}\n            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n              <p className="text-sm text-blue-600 dark:text-blue-400">\n                Play with the audio controls - try playing/pausing, adjusting\n                volume, and seeking through the track! 🎵\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2312],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/hooks/useIsomorphicLayoutEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__("./src/hooks/misc/util.ts").Bd?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect},"./src/stories/hooks/useStartTyping.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useStartTyping_stories});var react=__webpack_require__("./node_modules/react/index.js"),useIsomorphicLayoutEffect=__webpack_require__("./src/hooks/useIsomorphicLayoutEffect.ts"),util=__webpack_require__("./src/hooks/misc/util.ts");const hooks_useStartTyping=onStartTyping=>{(0,useIsomorphicLayoutEffect.A)((()=>{const keydown=event=>{!(()=>{const{activeElement,body}=document;if(!activeElement)return!1;if(activeElement===body)return!1;switch(activeElement.tagName){case"INPUT":case"TEXTAREA":return!0}return activeElement.hasAttribute("contenteditable")})()&&(({keyCode,metaKey,ctrlKey,altKey})=>!(metaKey||ctrlKey||altKey)&&(keyCode>=48&&keyCode<=57||keyCode>=65&&keyCode<=90))(event)&&onStartTyping(event)};return(0,util.on)(document,"keydown",keydown),()=>{(0,util.AU)(document,"keydown",keydown)}}),[])};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useStartTyping_stories={title:"Hooks/Event & Interaction/useStartTyping",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useStartTyping` is a hook that detects when a user starts typing on non-editable elements.\n\n### Module Federation Import\n```tsx\nimport { useStartTyping } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useStartTyping } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  useStartTyping((event) => {\n    console.log(\'User started typing:\', event.key);\n  });\n\n  return <div>Start typing anywhere...</div>;\n};\n```\n\n### Parameters\n```tsx\nuseStartTyping(\n  onStartTyping: (event: KeyboardEvent) => void\n): void\n```\n\n### Returns\n- void\n\n### Browser Compatibility\n- Uses standard DOM KeyboardEvent\n- Works in all modern browsers\n\n### Related Resources\n- [KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},StartTypingExample=()=>{const[typedKeys,setTypedKeys]=(0,react.useState)([]),[searchOpen,setSearchOpen]=(0,react.useState)(!1),[searchQuery,setSearchQuery]=(0,react.useState)("");return hooks_useStartTyping((event=>{setTypedKeys((prev=>[{key:event.key,timestamp:Date.now()},...prev.slice(0,9)])),searchOpen||setSearchOpen(!0)})),react.createElement("div",{className:"space-y-6 w-[500px]"},react.createElement("h3",{className:"text-lg font-semibold"},"Typing Detection Demo"),react.createElement("div",{className:"space-y-4"},searchOpen&&react.createElement("div",{className:"fixed inset-0 bg-black/50 flex items-start justify-center pt-20"},react.createElement("div",{className:"bg-background p-6 rounded-lg shadow-lg w-96"},react.createElement("div",{className:"space-y-4"},react.createElement("div",{className:"flex justify-between items-center"},react.createElement("h4",{className:"text-lg font-medium"},"Quick Search"),react.createElement("button",{onClick:()=>{setSearchOpen(!1),setSearchQuery("")},className:"text-muted-foreground hover:text-foreground"},"✕")),react.createElement("input",{type:"text",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),placeholder:"Search...",autoFocus:!0,className:"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50"})))),react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"text-sm font-medium"},"Recent Typing History"),react.createElement("div",{className:"grid grid-cols-5 gap-2"},typedKeys.map(((item,index)=>react.createElement("div",{key:item.timestamp,className:"p-2 text-center rounded bg-muted"},react.createElement("div",{className:"text-lg font-mono"},item.key),react.createElement("div",{className:"text-xs text-muted-foreground"},new Date(item.timestamp).toLocaleTimeString())))))),react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"text-sm font-medium"},"Test Area"),react.createElement("div",{className:"p-4 bg-muted rounded-md"},react.createElement("p",{className:"text-sm"},"This is a non-editable area."),react.createElement("p",{className:"text-sm mt-2"},"Start typing to see the hook in action!")),react.createElement("div",{className:"space-y-2"},react.createElement("p",{className:"text-sm font-medium"},"Try an editable field:"),react.createElement("input",{type:"text",placeholder:"Type here...",className:"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50"}),react.createElement("p",{className:"text-xs text-muted-foreground"},"Note: The hook won't trigger while typing in this input field.")))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Start typing anywhere (except in input fields) to see the hook detect your keystrokes! ⌨️")))},Example={render:()=>react.createElement(StartTypingExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <StartTypingExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
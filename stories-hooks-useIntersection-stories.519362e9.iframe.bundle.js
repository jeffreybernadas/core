/*! For license information please see stories-hooks-useIntersection-stories.519362e9.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[9392],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/stories/hooks/useIntersection.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useIntersection_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js");const hooks_useIntersection=(ref,options)=>{const[intersectionObserverEntry,setIntersectionObserverEntry]=(0,react.useState)(null);return(0,react.useEffect)((()=>{if(ref.current&&"function"==typeof IntersectionObserver){const observer=new IntersectionObserver((entries=>{setIntersectionObserverEntry(entries[0])}),options);return observer.observe(ref.current),()=>{setIntersectionObserverEntry(null),observer.disconnect()}}return()=>{}}),[ref.current,options.threshold,options.root,options.rootMargin]),intersectionObserverEntry};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useIntersection_stories={title:"Hooks/Browser API/useIntersection",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:"`useIntersection` is a hook that detects when an element enters or leaves the viewport using the Intersection Observer API.\nIt's useful for implementing infinite scroll, lazy loading images, or any feature that needs to respond to element visibility.\n\n### Module Federation Import\n```tsx\nimport { useIntersection } from \"@core/hooks\";\n```\n\n### NPM Package Import\n```tsx\nimport { useIntersection } from \"@bernz322/core/hooks\";\n```\n\n### Basic Usage\n```tsx\nconst Component = ({ src, alt }) => {\n  const ref = useRef(null);\n  const intersection = useIntersection(ref, {\n    threshold: 0.5,\n  });\n\n  return (\n    <img\n      ref={ref}\n      src={intersection?.isIntersecting ? src : ''}\n      alt={alt}\n    />\n  );\n};\n```\n\n### Advanced Usage\n```tsx\nconst InfiniteScroll = () => {\n  const loaderRef = useRef(null);\n  const intersection = useIntersection(loaderRef, {\n    root: null,\n    rootMargin: '100px',\n    threshold: 1.0,\n  });\n\n  useEffect(() => {\n    if (intersection?.isIntersecting) {\n      loadMoreItems();\n    }\n  }, [intersection]);\n\n  return (\n    <div>\n      {items}\n      <div ref={loaderRef}>Loading...</div>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nref: RefObject<HTMLElement> // Reference to the target element\noptions: IntersectionObserverInit // Intersection Observer options\n```\n\n### Returns\n```tsx\nIntersectionObserverEntry | null // Entry containing intersection data\n```\n\n### Browser Compatibility\nUses the Intersection Observer API:\n- Modern browsers: Full support\n- IE: No support\n- Polyfill available for older browsers\n\n### Related Resources\n- [MDN: Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\n- [W3C: Intersection Observer](https://w3c.github.io/IntersectionObserver/)"}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},Example={render:()=>{const refs=Array.from({length:5},(()=>(0,react.useRef)(null))),intersections=refs.map((ref=>hooks_useIntersection(ref,{threshold:.5,rootMargin:"0px"}))),colors=["bg-blue-500","bg-green-500","bg-purple-500","bg-yellow-500","bg-red-500"];return(0,jsx_runtime.jsx)("div",{className:"w-[400px]",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-4",children:[(0,jsx_runtime.jsxs)("div",{className:"sticky top-0 bg-white dark:bg-slate-800 p-4 rounded-lg shadow-md z-10",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100",children:"Intersection Status"}),(0,jsx_runtime.jsx)("div",{className:"grid grid-cols-5 gap-2",children:intersections.map(((intersection,index)=>(0,jsx_runtime.jsx)("div",{className:"text-center p-2 rounded transition-colors "+(intersection?.isIntersecting?"bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-300":"bg-slate-100 dark:bg-slate-700 text-slate-500 dark:text-slate-400"),children:index+1},index)))})]}),(0,jsx_runtime.jsx)("div",{className:"h-[400px] overflow-y-auto rounded-lg",children:refs.map(((ref,index)=>(0,jsx_runtime.jsx)("div",{ref,className:`${colors[index]} p-8 min-h-[200px] flex items-center justify-center transition-transform ${intersections[index]?.isIntersecting?"scale-100 opacity-100":"scale-95 opacity-50"}`,children:(0,jsx_runtime.jsxs)("div",{className:"text-center text-white",children:[(0,jsx_runtime.jsxs)("div",{className:"text-3xl font-bold mb-2",children:["Section ",index+1]}),(0,jsx_runtime.jsx)("div",{className:"text-sm opacity-75",children:intersections[index]?.isIntersecting?"üëÅÔ∏è Visible":"üëª Hidden"}),(0,jsx_runtime.jsxs)("div",{className:"text-xs mt-2",children:["Intersection ratio:"," ",Math.round(100*(intersections[index]?.intersectionRatio||0)),"%"]})]})},index)))}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"Scroll through the colored sections and watch how the intersection status changes! Each section becomes fully visible when it's 50% in view üîç"})})]})})}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Create refs for each section\n    const refs = Array.from({\n      length: 5\n    }, () => useRef<HTMLDivElement>(null));\n\n    // Create intersection observers for each section\n    const intersections = refs.map(ref => useIntersection(ref as unknown as React.RefObject<HTMLElement>, {\n      threshold: 0.5,\n      rootMargin: "0px"\n    }));\n\n    // Generate random colors for sections\n    const colors = ["bg-blue-500", "bg-green-500", "bg-purple-500", "bg-yellow-500", "bg-red-500"];\n    return <div className="w-[400px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-4">\n          {/* Fixed status display */}\n          <div className="sticky top-0 bg-white dark:bg-slate-800 p-4 rounded-lg shadow-md z-10">\n            <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n              Intersection Status\n            </h3>\n            <div className="grid grid-cols-5 gap-2">\n              {intersections.map((intersection, index) => <div key={index} className={`text-center p-2 rounded transition-colors ${intersection?.isIntersecting ? "bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-300" : "bg-slate-100 dark:bg-slate-700 text-slate-500 dark:text-slate-400"}`}>\n                  {index + 1}\n                </div>)}\n            </div>\n          </div>\n\n          {/* Scrollable container */}\n          <div className="h-[400px] overflow-y-auto rounded-lg">\n            {refs.map((ref, index) => <div key={index} ref={ref} className={`${colors[index]} p-8 min-h-[200px] flex items-center justify-center transition-transform ${intersections[index]?.isIntersecting ? "scale-100 opacity-100" : "scale-95 opacity-50"}`}>\n                <div className="text-center text-white">\n                  <div className="text-3xl font-bold mb-2">\n                    Section {index + 1}\n                  </div>\n                  <div className="text-sm opacity-75">\n                    {intersections[index]?.isIntersecting ? "üëÅÔ∏è Visible" : "üëª Hidden"}\n                  </div>\n                  <div className="text-xs mt-2">\n                    Intersection ratio:{" "}\n                    {Math.round((intersections[index]?.intersectionRatio || 0) * 100)}\n                    %\n                  </div>\n                </div>\n              </div>)}\n          </div>\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              Scroll through the colored sections and watch how the intersection\n              status changes! Each section becomes fully visible when it\'s 50%\n              in view üîç\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
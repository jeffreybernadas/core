"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[9238],{"./src/hooks/useTimeoutFn.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useTimeoutFn});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useTimeoutFn(fn,ms=0){const ready=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),timeout=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0),callback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(fn),isReady=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>ready.current),[]),set=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{ready.current=!1,timeout.current&&clearTimeout(timeout.current),timeout.current=setTimeout((()=>{ready.current=!0,callback.current()}),ms)}),[ms]),clear=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>{ready.current=null,timeout.current&&clearTimeout(timeout.current)}),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{callback.current=fn}),[fn]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(set(),clear)),[ms]),[isReady,clear,set]}},"./src/stories/hooks/useDebounce.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useDebounce_stories});var react=__webpack_require__("./node_modules/react/index.js"),useTimeoutFn=__webpack_require__("./src/hooks/useTimeoutFn.ts");function useDebounce(fn,ms=0,deps=[]){const[isReady,cancel,reset]=(0,useTimeoutFn.A)(fn,ms);return(0,react.useEffect)(reset,deps),[isReady,cancel]}var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useDebounce_stories={title:"Hooks/Utility/useDebounce",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useDebounce` is a hook that delays the execution of a function until after a specified time has elapsed since its last call.\nIt\'s useful for handling frequent updates like search inputs, window resizing, or any rapid-fire events.\n\n### Module Federation Import\n```tsx\nimport { useDebounce } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useDebounce } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [query, setQuery] = useState("");\n\n  const [isReady, cancel] = useDebounce(\n    () => {\n      // This will run 500ms after the last change\n      console.log("Searching for:", query);\n    },\n    500,\n    [query]\n  );\n\n  return (\n    <input\n      type="text"\n      value={query}\n      onChange={(e) => setQuery(e.target.value)}\n    />\n  );\n};\n```\n\n### Parameters\n```tsx\nuseDebounce(\n  fn: Function, // Function to debounce\n  ms?: number = 0, // Delay in milliseconds\n  deps?: DependencyList = [] // Dependencies that trigger the debounce\n): [\n  isReady: () => boolean | null, // Function to check if debounce is ready\n  cancel: () => void // Function to cancel the debounce\n]\n```\n\n### Browser Compatibility\nUses standard setTimeout, supported in all modern browsers.\n\n### Related Resources\n- [MDN: setTimeout](https://developer.mozilla.org/en-US/docs/Web/API/setTimeout)\n- [Debouncing Explained](https://css-tricks.com/debouncing-throttling-explained-examples/)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},Example={render:()=>{const[searchQuery,setSearchQuery]=(0,react.useState)(""),[searchResults,setSearchResults]=(0,react.useState)([]),[isSearching,setIsSearching]=(0,react.useState)(!1),[isSearchReady]=useDebounce((()=>{setIsSearching(!0),setTimeout((()=>{const results=["apple","banana","cherry","date","elderberry"].filter((fruit=>fruit.includes(searchQuery.toLowerCase()))).map((fruit=>fruit.charAt(0).toUpperCase()+fruit.slice(1)));setSearchResults(results),setIsSearching(!1)}),500)}),500,[searchQuery]),[draftText,setDraftText]=(0,react.useState)(""),[saveStatus,setSaveStatus]=(0,react.useState)(""),[isSaveReady]=useDebounce((()=>{setSaveStatus("Saving..."),setTimeout((()=>{setSaveStatus("Draft saved!"),setTimeout((()=>setSaveStatus("")),2e3)}),500)}),1e3,[draftText]);return react.createElement("div",{className:"space-y-6 max-w-lg"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Debounce Examples"),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react.createElement("div",{className:"space-y-6"},react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"text-sm font-medium text-slate-700 dark:text-slate-300"},"Search with Debounce (500ms)"),react.createElement("div",{className:"space-y-2"},react.createElement("input",{type:"text",value:searchQuery,onChange:e=>setSearchQuery(e.target.value),placeholder:"Search fruits...",className:"w-full px-3 py-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md text-slate-900 dark:text-slate-100"}),react.createElement("div",{className:"min-h-[100px] bg-white dark:bg-slate-700 p-3 rounded-md"},isSearching?react.createElement("div",{className:"text-sm text-slate-500 dark:text-slate-400"},"Searching..."):searchQuery?searchResults.length>0?react.createElement("ul",{className:"space-y-1"},searchResults.map((result=>react.createElement("li",{key:result,className:"text-sm text-slate-700 dark:text-slate-300"},result)))):react.createElement("div",{className:"text-sm text-slate-500 dark:text-slate-400"},"No results found"):react.createElement("div",{className:"text-sm text-slate-500 dark:text-slate-400"},"Type to search...")))),react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"text-sm font-medium text-slate-700 dark:text-slate-300"},"Auto-Save Draft (1000ms)"),react.createElement("div",{className:"space-y-2"},react.createElement("textarea",{value:draftText,onChange:e=>setDraftText(e.target.value),placeholder:"Start typing to auto-save...",rows:3,className:"w-full px-3 py-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md text-slate-900 dark:text-slate-100"}),saveStatus&&react.createElement("div",{className:"text-sm "+("Saving..."===saveStatus?"text-yellow-600 dark:text-yellow-400":"text-green-600 dark:text-green-400")},saveStatus))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try these examples to see debouncing in action! Type quickly in the search or draft, or resize your window to see how debouncing reduces the number of updates. ⏱️"))))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Search example\n    const [searchQuery, setSearchQuery] = useState("");\n    const [searchResults, setSearchResults] = useState<string[]>([]);\n    const [isSearching, setIsSearching] = useState(false);\n    const [isSearchReady] = useDebounce(() => {\n      setIsSearching(true);\n      // Simulate API call\n      setTimeout(() => {\n        const results = ["apple", "banana", "cherry", "date", "elderberry"].filter(fruit => fruit.includes(searchQuery.toLowerCase())).map(fruit => fruit.charAt(0).toUpperCase() + fruit.slice(1));\n        setSearchResults(results);\n        setIsSearching(false);\n      }, 500);\n    }, 500, [searchQuery]);\n\n    // Save draft example\n    const [draftText, setDraftText] = useState("");\n    const [saveStatus, setSaveStatus] = useState("");\n    const [isSaveReady] = useDebounce(() => {\n      setSaveStatus("Saving...");\n      // Simulate API call\n      setTimeout(() => {\n        setSaveStatus("Draft saved!");\n        setTimeout(() => setSaveStatus(""), 2000);\n      }, 500);\n    }, 1000, [draftText]);\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Debounce Examples\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="space-y-6">\n              {/* Search Example */}\n              <div className="space-y-2">\n                <h4 className="text-sm font-medium text-slate-700 dark:text-slate-300">\n                  Search with Debounce (500ms)\n                </h4>\n                <div className="space-y-2">\n                  <input type="text" value={searchQuery} onChange={e => setSearchQuery(e.target.value)} placeholder="Search fruits..." className="w-full px-3 py-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md text-slate-900 dark:text-slate-100" />\n                  <div className="min-h-[100px] bg-white dark:bg-slate-700 p-3 rounded-md">\n                    {isSearching ? <div className="text-sm text-slate-500 dark:text-slate-400">\n                        Searching...\n                      </div> : searchQuery ? searchResults.length > 0 ? <ul className="space-y-1">\n                          {searchResults.map(result => <li key={result} className="text-sm text-slate-700 dark:text-slate-300">\n                              {result}\n                            </li>)}\n                        </ul> : <div className="text-sm text-slate-500 dark:text-slate-400">\n                          No results found\n                        </div> : <div className="text-sm text-slate-500 dark:text-slate-400">\n                        Type to search...\n                      </div>}\n                  </div>\n                </div>\n              </div>\n\n              {/* Auto Save Example */}\n              <div className="space-y-2">\n                <h4 className="text-sm font-medium text-slate-700 dark:text-slate-300">\n                  Auto-Save Draft (1000ms)\n                </h4>\n                <div className="space-y-2">\n                  <textarea value={draftText} onChange={e => setDraftText(e.target.value)} placeholder="Start typing to auto-save..." rows={3} className="w-full px-3 py-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md text-slate-900 dark:text-slate-100" />\n                  {saveStatus && <div className={`text-sm ${saveStatus === "Saving..." ? "text-yellow-600 dark:text-yellow-400" : "text-green-600 dark:text-green-400"}`}>\n                      {saveStatus}\n                    </div>}\n                </div>\n              </div>\n\n              {/* Instructions */}\n              <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n                <p className="text-sm text-blue-600 dark:text-blue-400">\n                  Try these examples to see debouncing in action! Type quickly\n                  in the search or draft, or resize your window to see how\n                  debouncing reduces the number of updates. ⏱️\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
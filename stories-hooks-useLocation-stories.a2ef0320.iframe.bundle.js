"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[3298],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/stories/hooks/useLocation.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useLocation_stories});var react=__webpack_require__("./node_modules/react/index.js"),util=__webpack_require__("./src/hooks/misc/util.ts");const patchHistoryMethod=method=>{const history=window.history,original=history[method].bind(history);history[method]=function(state,title,url){const result=original(state,title,url),event=new Event(method.toLowerCase());return event.state=state,window.dispatchEvent(event),result}};util.Bd&&(patchHistoryMethod("pushState"),patchHistoryMethod("replaceState"));const buildState=trigger=>{const{state,length}=window.history,{hash,host,hostname,href,origin,pathname,port,protocol,search}=window.location;return{trigger,state,length,hash,host,hostname,href,origin,pathname,port,protocol,search}},hasEventConstructor="function"==typeof Event,useLocation=util.Bd&&hasEventConstructor?()=>{const[state,setState]=(0,react.useState)(buildState("load"));return(0,react.useEffect)((()=>{const onPopstate=()=>setState(buildState("popstate")),onPushstate=()=>setState(buildState("pushstate")),onReplacestate=()=>setState(buildState("replacestate"));return(0,util.on)(window,"popstate",onPopstate),(0,util.on)(window,"pushstate",onPushstate),(0,util.on)(window,"replacestate",onReplacestate),()=>{(0,util.AU)(window,"popstate",onPopstate),(0,util.AU)(window,"pushstate",onPushstate),(0,util.AU)(window,"replacestate",onReplacestate)}}),[]),state}:()=>({trigger:"load",length:1});var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useLocation_stories={title:"Hooks/Browser API/useLocation",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useLocation` is a hook that tracks browser location and history state changes.\nIt provides real-time updates when the URL or history state changes.\n\n### Module Federation Import\n```tsx\nimport { useLocation } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useLocation } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <p>Current Path: {location.pathname}</p>\n      <p>Search Query: {location.search}</p>\n      <p>Hash: {location.hash}</p>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseLocation(): LocationSensorState\n```\n\n### Returns\n```tsx\n{\n  trigger: string; // What triggered the location change\n  state?: any; // History state\n  length?: number; // History length\n  hash?: string; // URL hash\n  host?: string; // Host with port\n  hostname?: string; // Host without port\n  href?: string; // Full URL\n  origin?: string; // Protocol and host\n  pathname?: string; // URL path\n  port?: string; // Port number\n  protocol?: string; // Protocol\n  search?: string; // Query string\n}\n```\n\n### Browser Compatibility\nUses standard Web APIs:\n- window.history\n- window.location\n- History API\nSupported in all modern browsers.\n\n### Related Resources\n- [MDN: History API](https://developer.mozilla.org/en-US/docs/Web/API/History_API)\n- [MDN: Location](https://developer.mozilla.org/en-US/docs/Web/API/Location)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},Example={render:()=>{const location=useLocation(),pushNewState=(0,react.useCallback)((()=>{const newState={page:"example",time:Date.now()};window.history.pushState(newState,"","?page=example")}),[]),replaceState=(0,react.useCallback)((()=>{const newState={page:"replaced",time:Date.now()};window.history.replaceState(newState,"","?page=replaced")}),[]),addHash=(0,react.useCallback)((()=>{window.location.hash=`section-${Date.now()}`}),[]);return react.createElement("div",{className:"w-[500px]"},react.createElement("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6"},react.createElement("div",{className:"space-y-2"},react.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Current Location"),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded space-y-3"},react.createElement("div",null,react.createElement("p",{className:"text-sm text-slate-500 dark:text-slate-400"},"Pathname:"),react.createElement("p",{className:"text-lg font-mono text-slate-700 dark:text-slate-300"},location.pathname||"/")),react.createElement("div",null,react.createElement("p",{className:"text-sm text-slate-500 dark:text-slate-400"},"Search:"),react.createElement("p",{className:"text-lg font-mono text-slate-700 dark:text-slate-300"},location.search||"(none)")),react.createElement("div",null,react.createElement("p",{className:"text-sm text-slate-500 dark:text-slate-400"},"Hash:"),react.createElement("p",{className:"text-lg font-mono text-slate-700 dark:text-slate-300"},location.hash||"(none)")))),react.createElement("div",{className:"space-y-2"},react.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"History State"),react.createElement("div",{className:"bg-purple-100 dark:bg-purple-900/20 p-4 rounded space-y-3"},react.createElement("div",null,react.createElement("p",{className:"text-sm text-purple-600 dark:text-purple-400"},"Trigger:"),react.createElement("p",{className:"text-lg font-mono text-purple-700 dark:text-purple-300"},location.trigger)),react.createElement("div",null,react.createElement("p",{className:"text-sm text-purple-600 dark:text-purple-400"},"History Length:"),react.createElement("p",{className:"text-lg font-mono text-purple-700 dark:text-purple-300"},location.length)),react.createElement("div",null,react.createElement("p",{className:"text-sm text-purple-600 dark:text-purple-400"},"Current State:"),react.createElement("p",{className:"text-lg font-mono text-purple-700 dark:text-purple-300"},location.state?JSON.stringify(location.state):"(none)")))),react.createElement("div",{className:"space-y-2"},react.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"URL Components"),react.createElement("div",{className:"bg-green-100 dark:bg-green-900/20 p-4 rounded space-y-3"},react.createElement("div",null,react.createElement("p",{className:"text-sm text-green-600 dark:text-green-400"},"Host:"),react.createElement("p",{className:"text-lg font-mono text-green-700 dark:text-green-300"},location.host)),react.createElement("div",null,react.createElement("p",{className:"text-sm text-green-600 dark:text-green-400"},"Protocol:"),react.createElement("p",{className:"text-lg font-mono text-green-700 dark:text-green-300"},location.protocol)),react.createElement("div",null,react.createElement("p",{className:"text-sm text-green-600 dark:text-green-400"},"Origin:"),react.createElement("p",{className:"text-lg font-mono text-green-700 dark:text-green-300"},location.origin)))),react.createElement("div",{className:"space-y-2"},react.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"History Controls"),react.createElement("div",{className:"bg-blue-100 dark:bg-blue-900/20 p-4 rounded space-y-3"},react.createElement("div",{className:"space-x-2"},react.createElement("button",{onClick:pushNewState,className:"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm"},"Push New State"),react.createElement("button",{onClick:replaceState,className:"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm"},"Replace State"),react.createElement("button",{onClick:addHash,className:"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm"},"Add Hash")))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Try the different buttons to modify the browser history and URL! Watch how the location information updates in real-time. You can also use the browser's back/forward buttons to see the history navigation in action! 🌐"))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const location = useLocation();\n\n    // Example functions to modify history\n    const pushNewState = useCallback(() => {\n      const newState = {\n        page: "example",\n        time: Date.now()\n      };\n      window.history.pushState(newState, "", "?page=example");\n    }, []);\n    const replaceState = useCallback(() => {\n      const newState = {\n        page: "replaced",\n        time: Date.now()\n      };\n      window.history.replaceState(newState, "", "?page=replaced");\n    }, []);\n    const addHash = useCallback(() => {\n      window.location.hash = `section-${Date.now()}`;\n    }, []);\n    return <div className="w-[500px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6">\n          {/* Current Location Info */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Current Location\n            </h3>\n            <div className="bg-slate-100 dark:bg-slate-700 p-4 rounded space-y-3">\n              <div>\n                <p className="text-sm text-slate-500 dark:text-slate-400">\n                  Pathname:\n                </p>\n                <p className="text-lg font-mono text-slate-700 dark:text-slate-300">\n                  {location.pathname || "/"}\n                </p>\n              </div>\n              <div>\n                <p className="text-sm text-slate-500 dark:text-slate-400">\n                  Search:\n                </p>\n                <p className="text-lg font-mono text-slate-700 dark:text-slate-300">\n                  {location.search || "(none)"}\n                </p>\n              </div>\n              <div>\n                <p className="text-sm text-slate-500 dark:text-slate-400">\n                  Hash:\n                </p>\n                <p className="text-lg font-mono text-slate-700 dark:text-slate-300">\n                  {location.hash || "(none)"}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* History State */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              History State\n            </h3>\n            <div className="bg-purple-100 dark:bg-purple-900/20 p-4 rounded space-y-3">\n              <div>\n                <p className="text-sm text-purple-600 dark:text-purple-400">\n                  Trigger:\n                </p>\n                <p className="text-lg font-mono text-purple-700 dark:text-purple-300">\n                  {location.trigger}\n                </p>\n              </div>\n              <div>\n                <p className="text-sm text-purple-600 dark:text-purple-400">\n                  History Length:\n                </p>\n                <p className="text-lg font-mono text-purple-700 dark:text-purple-300">\n                  {location.length}\n                </p>\n              </div>\n              <div>\n                <p className="text-sm text-purple-600 dark:text-purple-400">\n                  Current State:\n                </p>\n                <p className="text-lg font-mono text-purple-700 dark:text-purple-300">\n                  {location.state ? JSON.stringify(location.state) : "(none)"}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* URL Components */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              URL Components\n            </h3>\n            <div className="bg-green-100 dark:bg-green-900/20 p-4 rounded space-y-3">\n              <div>\n                <p className="text-sm text-green-600 dark:text-green-400">\n                  Host:\n                </p>\n                <p className="text-lg font-mono text-green-700 dark:text-green-300">\n                  {location.host}\n                </p>\n              </div>\n              <div>\n                <p className="text-sm text-green-600 dark:text-green-400">\n                  Protocol:\n                </p>\n                <p className="text-lg font-mono text-green-700 dark:text-green-300">\n                  {location.protocol}\n                </p>\n              </div>\n              <div>\n                <p className="text-sm text-green-600 dark:text-green-400">\n                  Origin:\n                </p>\n                <p className="text-lg font-mono text-green-700 dark:text-green-300">\n                  {location.origin}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* History Controls */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              History Controls\n            </h3>\n            <div className="bg-blue-100 dark:bg-blue-900/20 p-4 rounded space-y-3">\n              <div className="space-x-2">\n                <button onClick={pushNewState} className="px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm">\n                  Push New State\n                </button>\n                <button onClick={replaceState} className="px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm">\n                  Replace State\n                </button>\n                <button onClick={addHash} className="px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm">\n                  Add Hash\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              Try the different buttons to modify the browser history and URL!\n              Watch how the location information updates in real-time. You can\n              also use the browser\'s back/forward buttons to see the history\n              navigation in action! 🌐\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
/*! For license information please see stories-hooks-useDeepCompareEffect-stories.2dbb4a5c.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[109],{"./node_modules/fast-deep-equal/react.js":module=>{module.exports=function equal(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(a.constructor!==b.constructor)return!1;var length,i,keys;if(Array.isArray(a)){if((length=a.length)!=b.length)return!1;for(i=length;0!=i--;)if(!equal(a[i],b[i]))return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();if((length=(keys=Object.keys(a)).length)!==Object.keys(b).length)return!1;for(i=length;0!=i--;)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(i=length;0!=i--;){var key=keys[i];if(("_owner"!==key||!a.$$typeof)&&!equal(a[key],b[key]))return!1}return!0}return a!=a&&b!=b}},"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/hooks/misc/isDeepEqual.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/fast-deep-equal/react.js");const __WEBPACK_DEFAULT_EXPORT__=__webpack_require__.n(fast_deep_equal_react__WEBPACK_IMPORTED_MODULE_0__)()},"./src/hooks/useCustomCompareEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=(effect,deps,depsEqual)=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(void 0);ref.current&&depsEqual(deps,ref.current)||(ref.current=deps),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect,ref.current)}},"./src/stories/hooks/useDeepCompareEffect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useDeepCompareEffect_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),useCustomCompareEffect=__webpack_require__("./src/hooks/useCustomCompareEffect.ts"),isDeepEqual=__webpack_require__("./src/hooks/misc/isDeepEqual.ts");const hooks_useDeepCompareEffect=(effect,deps)=>{(0,useCustomCompareEffect.A)(effect,deps,isDeepEqual.A)};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useDeepCompareEffect_stories={title:"Hooks/Lifecycle/useDeepCompareEffect",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:"`useDeepCompareEffect` is a hook that performs a deep comparison of dependencies for React's useEffect.\nIt's useful when dealing with object or array dependencies that need deep equality checks rather than reference equality.\n\n### Module Federation Import\n```tsx\nimport { useDeepCompareEffect } from \"@core/hooks\";\n```\n\n### NPM Package Import\n```tsx\nimport { useDeepCompareEffect } from \"@bernz322/core/hooks\";\n```\n\n### Basic Usage\n```tsx\nconst Component = ({ config }) => {\n  useDeepCompareEffect(() => {\n    // Effect runs only when config deeply changes\n    console.log('Config changed:', config);\n  }, [config]);\n\n  return <div>Check console for effect logs</div>;\n};\n```\n\n### Advanced Usage\n```tsx\nconst ComplexDataComponent = () => {\n  const [data, setData] = useState({\n    user: { name: 'John', settings: { theme: 'dark' } },\n    preferences: ['music', 'sports']\n  });\n\n  useDeepCompareEffect(() => {\n    // Only runs when data deeply changes\n    saveToDatabase(data);\n  }, [data]);\n\n  return <div>Data: {JSON.stringify(data)}</div>;\n};\n```\n\n### Parameters\n```tsx\nuseDeepCompareEffect(\n  effect: EffectCallback,  // Effect function to run\n  deps: DependencyList    // Dependencies array to compare deeply\n): void\n```\n\n### Returns\nvoid\n\n### Browser Compatibility\nUses standard JavaScript features, supported in all modern browsers.\n\n### Related Resources\n- [React useEffect](https://react.dev/reference/react/useEffect)\n- [Deep equality in JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness)"}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},Example={render:()=>{const[config,setConfig]=(0,react.useState)({theme:{primary:"#3B82F6",secondary:"#1E40AF",mode:"light"},user:{preferences:{notifications:!0,language:"en"}}}),[regularEffectCount,setRegularEffectCount]=(0,react.useState)(0),[deepEffectCount,setDeepEffectCount]=(0,react.useState)(0);(0,react.useEffect)((()=>{setRegularEffectCount((prev=>prev+1))}),[config]),hooks_useDeepCompareEffect((()=>{setDeepEffectCount((prev=>prev+1))}),[config]);return(0,jsx_runtime.jsx)("div",{className:"space-y-6 max-w-lg",children:(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100",children:"Deep Compare Effect Demo"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg space-y-4",children:[(0,jsx_runtime.jsx)("div",{className:"bg-white dark:bg-slate-700 p-3 rounded",children:(0,jsx_runtime.jsx)("pre",{className:"text-xs text-slate-600 dark:text-slate-400 overflow-auto",children:JSON.stringify(config,null,2)})}),(0,jsx_runtime.jsxs)("div",{className:"flex gap-2",children:[(0,jsx_runtime.jsx)("button",{onClick:()=>{setConfig({...config,theme:{...config.theme,mode:"light"===config.theme.mode?"dark":"light"}})},className:"px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600",children:"Toggle Theme"}),(0,jsx_runtime.jsx)("button",{onClick:()=>{setConfig({...config})},className:"px-3 py-2 bg-slate-500 text-white rounded hover:bg-slate-600",children:"Recreate Object"})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsxs)("div",{className:"flex justify-between text-sm",children:[(0,jsx_runtime.jsx)("span",{className:"text-slate-600 dark:text-slate-400",children:"Regular Effect Triggers:"}),(0,jsx_runtime.jsx)("span",{className:"text-slate-900 dark:text-slate-100",children:regularEffectCount})]}),(0,jsx_runtime.jsxs)("div",{className:"flex justify-between text-sm",children:[(0,jsx_runtime.jsx)("span",{className:"text-slate-600 dark:text-slate-400",children:"Deep Effect Triggers:"}),(0,jsx_runtime.jsx)("span",{className:"text-slate-900 dark:text-slate-100",children:deepEffectCount})]})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"Try both buttons to see the difference! 'Toggle Theme' changes values (both effects trigger), while 'Recreate Object' only triggers the regular effect since the values remain the same! 🔍"})})]})]})})}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Complex object state\n    const [config, setConfig] = useState({\n      theme: {\n        primary: "#3B82F6",\n        secondary: "#1E40AF",\n        mode: "light"\n      },\n      user: {\n        preferences: {\n          notifications: true,\n          language: "en"\n        }\n      }\n    });\n\n    // Counter for regular effect\n    const [regularEffectCount, setRegularEffectCount] = useState(0);\n    // Counter for deep compare effect\n    const [deepEffectCount, setDeepEffectCount] = useState(0);\n\n    // Regular useEffect for comparison\n    useEffect(() => {\n      setRegularEffectCount(prev => prev + 1);\n    }, [config]);\n\n    // Deep compare effect\n    useDeepCompareEffect(() => {\n      setDeepEffectCount(prev => prev + 1);\n    }, [config]);\n\n    // Function to update theme mode\n    const toggleTheme = () => {\n      setConfig({\n        ...config,\n        theme: {\n          ...config.theme,\n          mode: config.theme.mode === "light" ? "dark" : "light"\n        }\n      });\n    };\n\n    // Function to create a new object with same values\n    const recreateObject = () => {\n      setConfig({\n        ...config\n      });\n    };\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Deep Compare Effect Demo\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg space-y-4">\n            {/* Configuration Display */}\n            <div className="bg-white dark:bg-slate-700 p-3 rounded">\n              <pre className="text-xs text-slate-600 dark:text-slate-400 overflow-auto">\n                {JSON.stringify(config, null, 2)}\n              </pre>\n            </div>\n\n            {/* Action Buttons */}\n            <div className="flex gap-2">\n              <button onClick={toggleTheme} className="px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">\n                Toggle Theme\n              </button>\n              <button onClick={recreateObject} className="px-3 py-2 bg-slate-500 text-white rounded hover:bg-slate-600">\n                Recreate Object\n              </button>\n            </div>\n\n            {/* Effect Counters */}\n            <div className="space-y-2">\n              <div className="flex justify-between text-sm">\n                <span className="text-slate-600 dark:text-slate-400">\n                  Regular Effect Triggers:\n                </span>\n                <span className="text-slate-900 dark:text-slate-100">\n                  {regularEffectCount}\n                </span>\n              </div>\n              <div className="flex justify-between text-sm">\n                <span className="text-slate-600 dark:text-slate-400">\n                  Deep Effect Triggers:\n                </span>\n                <span className="text-slate-900 dark:text-slate-100">\n                  {deepEffectCount}\n                </span>\n              </div>\n            </div>\n\n            {/* Instructions */}\n            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n              <p className="text-sm text-blue-600 dark:text-blue-400">\n                Try both buttons to see the difference! \'Toggle Theme\' changes\n                values (both effects trigger), while \'Recreate Object\' only\n                triggers the regular effect since the values remain the same! 🔍\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
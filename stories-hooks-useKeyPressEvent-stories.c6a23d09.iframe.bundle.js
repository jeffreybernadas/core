/*! For license information please see stories-hooks-useKeyPressEvent-stories.c6a23d09.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[1439],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/hooks/useEvent.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/misc/util.ts");const defaultTarget=_misc_util__WEBPACK_IMPORTED_MODULE_1__.Bd?window:null,isListenerType1=target=>!!target&&"function"==typeof target.addEventListener,isListenerType2=target=>!!target&&"function"==typeof target.on,__WEBPACK_DEFAULT_EXPORT__=(name,handler,target=defaultTarget,options)=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(handler&&target)return isListenerType1(target)?(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.on)(target,name,handler,options):isListenerType2(target)&&target.on(name,handler,options),()=>{isListenerType1(target)?(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.AU)(target,name,handler,options):isListenerType2(target)&&target.off(name,handler,options)}}),[name,handler,target,JSON.stringify(options)])}},"./src/hooks/useFirstMountState.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>useFirstMountState});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useFirstMountState(){const isFirst=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!0);return isFirst.current?(isFirst.current=!1,!0):isFirst.current}},"./src/hooks/useKey.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useEvent__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useEvent.ts"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/misc/util.ts");const __WEBPACK_DEFAULT_EXPORT__=(key,fn=_misc_util__WEBPACK_IMPORTED_MODULE_1__.lQ,opts={},deps=[key])=>{const{event="keydown",target,options}=opts,useMemoHandler=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{const predicate="function"==typeof(keyFilter=key)?keyFilter:"string"==typeof keyFilter?event=>event.key===keyFilter:keyFilter?()=>!0:()=>!1;var keyFilter;return handlerEvent=>{if(predicate(handlerEvent))return fn(handlerEvent)}}),deps);(0,_useEvent__WEBPACK_IMPORTED_MODULE_2__.A)(event,useMemoHandler,target,options)}},"./src/hooks/useKeyPress.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useKey__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useKey.ts");const __WEBPACK_DEFAULT_EXPORT__=keyFilter=>{const[state,set]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([!1,null]);return(0,_useKey__WEBPACK_IMPORTED_MODULE_1__.A)(keyFilter,(event=>set([!0,event])),{event:"keydown"},[state]),(0,_useKey__WEBPACK_IMPORTED_MODULE_1__.A)(keyFilter,(event=>set([!1,event])),{event:"keyup"},[state]),state}},"./src/hooks/useUpdateEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useFirstMountState__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useFirstMountState.ts");const __WEBPACK_DEFAULT_EXPORT__=(effect,deps)=>{const isFirstMount=(0,_useFirstMountState__WEBPACK_IMPORTED_MODULE_1__.S)();(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!isFirstMount)return effect()}),deps)}},"./src/stories/hooks/useKeyPressEvent.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useKeyPressEvent_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),hooks_useKeyPress=__webpack_require__("./src/hooks/useKeyPress.ts"),useUpdateEffect=__webpack_require__("./src/hooks/useUpdateEffect.ts");const hooks_useKeyPressEvent=(key,keydown,keyup,useKeyPress=hooks_useKeyPress.A)=>{const[pressed,event]=useKeyPress(key);(0,useUpdateEffect.A)((()=>{!pressed&&keyup?keyup(event):pressed&&keydown&&keydown(event)}),[pressed])};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useKeyPressEvent_stories={title:"Hooks/Event & Interaction/useKeyPressEvent",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useKeyPressEvent` is a hook that handles keydown and keyup events separately for a specific key.\nIt\'s useful for creating interactive keyboard controls that need different behaviors for press and release.\n\n### Module Federation Import\n```tsx\nimport { useKeyPressEvent } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useKeyPressEvent } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  useKeyPressEvent(\n    "Space",\n    () => console.log("Space pressed down"),\n    () => console.log("Space released")\n  );\n  return <div>Press and release the space bar</div>;\n};\n```\n\n### Advanced Usage\n```tsx\nconst GameControl = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const speed = 5;\n\n  useKeyPressEvent(\n    "ArrowRight",\n    () => setPosition(p => ({ ...p, x: p.x + speed })),\n    null\n  );\n\n  return <div style={{ transform: `translate(${position.x}px, ${position.y}px)` }}>üêç</div>;\n};\n```\n\n### Parameters\n```tsx\nuseKeyPressEvent(\n  key: string | KeyFilter,     // Key to listen for\n  keydown?: Handler | null,    // Handler for keydown event\n  keyup?: Handler | null,      // Handler for keyup event\n  useKeyPress?: Function       // Optional custom useKeyPress implementation\n): void\n```\n\n### Returns\nvoid\n\n### Browser Compatibility\nUses standard keyboard events:\n- keydown\n- keyup\nSupported in all modern browsers.\n\n### Related Resources\n- [MDN: KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)\n- [MDN: KeyboardEvent.key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)'}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},Example={render:()=>{const[spaceState,setSpaceState]=(0,react.useState)("idle");hooks_useKeyPressEvent(" ",(()=>setSpaceState("pressed")),(()=>setSpaceState("released")));const[position,setPosition]=(0,react.useState)({x:0,y:0});hooks_useKeyPressEvent("ArrowRight",(()=>setPosition((p=>({...p,x:p.x+10})))),null),hooks_useKeyPressEvent("ArrowLeft",(()=>setPosition((p=>({...p,x:p.x-10})))),null),hooks_useKeyPressEvent("ArrowUp",(()=>setPosition((p=>({...p,y:p.y-10})))),null),hooks_useKeyPressEvent("ArrowDown",(()=>setPosition((p=>({...p,y:p.y+10})))),null);const[shiftState,setShiftState]=(0,react.useState)("idle");return hooks_useKeyPressEvent((event=>"Shift"===event.key),(()=>setShiftState("pressed")),(()=>setShiftState("released"))),(0,jsx_runtime.jsxs)("div",{className:"space-y-8 max-w-lg",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Space Bar State"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg text-center",children:[(0,jsx_runtime.jsx)("div",{className:"text-sm text-slate-600 dark:text-slate-400 mb-2",children:"Press and hold the space bar"}),(0,jsx_runtime.jsx)("div",{className:"text-xl font-mono "+("pressed"===spaceState?"text-green-600 dark:text-green-400":"released"===spaceState?"text-red-600 dark:text-red-400":"text-slate-600 dark:text-slate-400"),children:spaceState.toUpperCase()})]})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Arrow Key Movement"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg",children:[(0,jsx_runtime.jsx)("div",{className:"text-sm text-slate-600 dark:text-slate-400 mb-4 text-center",children:"Use arrow keys to move the character"}),(0,jsx_runtime.jsx)("div",{className:"relative h-32 border-2 border-dashed border-slate-300 dark:border-slate-600 rounded",children:(0,jsx_runtime.jsx)("div",{className:"absolute transition-transform",style:{transform:`translate(${position.x}px, ${position.y}px)`},children:"üêç"})})]})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Shift Key State"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg text-center",children:[(0,jsx_runtime.jsx)("div",{className:"text-sm text-slate-600 dark:text-slate-400 mb-2",children:"Press and hold the Shift key"}),(0,jsx_runtime.jsx)("div",{className:"text-xl font-mono "+("pressed"===shiftState?"text-blue-600 dark:text-blue-400":"released"===shiftState?"text-purple-600 dark:text-purple-400":"text-slate-600 dark:text-slate-400"),children:shiftState.toUpperCase()})]})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"Try these keyboard interactions: press and hold the space bar to see state changes, use arrow keys to move the character around, and hold the shift key to track modifier key states! üêç"})})]})}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Example 1: Basic key press tracking\n    const [spaceState, setSpaceState] = useState("idle");\n    useKeyPressEvent(" ", () => setSpaceState("pressed"), () => setSpaceState("released"));\n\n    // Example 2: Character movement\n    const [position, setPosition] = useState({\n      x: 0,\n      y: 0\n    });\n    const speed = 10;\n    useKeyPressEvent("ArrowRight", () => setPosition(p => ({\n      ...p,\n      x: p.x + speed\n    })), null);\n    useKeyPressEvent("ArrowLeft", () => setPosition(p => ({\n      ...p,\n      x: p.x - speed\n    })), null);\n    useKeyPressEvent("ArrowUp", () => setPosition(p => ({\n      ...p,\n      y: p.y - speed\n    })), null);\n    useKeyPressEvent("ArrowDown", () => setPosition(p => ({\n      ...p,\n      y: p.y + speed\n    })), null);\n\n    // Example 3: Key combination tracking\n    const [shiftState, setShiftState] = useState("idle");\n    useKeyPressEvent(event => event.key === "Shift", () => setShiftState("pressed"), () => setShiftState("released"));\n    return <div className="space-y-8 max-w-lg">\n        {/* Space Bar Example */}\n        <div className="space-y-2">\n          <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n            Space Bar State\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg text-center">\n            <div className="text-sm text-slate-600 dark:text-slate-400 mb-2">\n              Press and hold the space bar\n            </div>\n            <div className={`text-xl font-mono ${spaceState === "pressed" ? "text-green-600 dark:text-green-400" : spaceState === "released" ? "text-red-600 dark:text-red-400" : "text-slate-600 dark:text-slate-400"}`}>\n              {spaceState.toUpperCase()}\n            </div>\n          </div>\n        </div>\n\n        {/* Character Movement */}\n        <div className="space-y-2">\n          <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n            Arrow Key Movement\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="text-sm text-slate-600 dark:text-slate-400 mb-4 text-center">\n              Use arrow keys to move the character\n            </div>\n            <div className="relative h-32 border-2 border-dashed border-slate-300 dark:border-slate-600 rounded">\n              <div className="absolute transition-transform" style={{\n              transform: `translate(${position.x}px, ${position.y}px)`\n            }}>\n                üêç\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Shift Key Example */}\n        <div className="space-y-2">\n          <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n            Shift Key State\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg text-center">\n            <div className="text-sm text-slate-600 dark:text-slate-400 mb-2">\n              Press and hold the Shift key\n            </div>\n            <div className={`text-xl font-mono ${shiftState === "pressed" ? "text-blue-600 dark:text-blue-400" : shiftState === "released" ? "text-purple-600 dark:text-purple-400" : "text-slate-600 dark:text-slate-400"}`}>\n              {shiftState.toUpperCase()}\n            </div>\n          </div>\n        </div>\n\n        {/* Instructions */}\n        <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n          <p className="text-sm text-blue-600 dark:text-blue-400">\n            Try these keyboard interactions: press and hold the space bar to see\n            state changes, use arrow keys to move the character around, and hold\n            the shift key to track modifier key states! üêç\n          </p>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
/*! For license information please see stories-hooks-useLogger-stories.9cbcb9e1.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2923],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/hooks/useEffectOnce.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=effect=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(effect,[])}},"./src/hooks/useFirstMountState.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>useFirstMountState});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useFirstMountState(){const isFirst=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!0);return isFirst.current?(isFirst.current=!1,!0):isFirst.current}},"./src/hooks/useUpdateEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useFirstMountState__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useFirstMountState.ts");const __WEBPACK_DEFAULT_EXPORT__=(effect,deps)=>{const isFirstMount=(0,_useFirstMountState__WEBPACK_IMPORTED_MODULE_1__.S)();(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(!isFirstMount)return effect()}),deps)}},"./src/stories/hooks/useLogger.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useLogger_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),useEffectOnce=__webpack_require__("./src/hooks/useEffectOnce.ts"),useUpdateEffect=__webpack_require__("./src/hooks/useUpdateEffect.ts");const hooks_useLogger=(componentName,...rest)=>{(0,useEffectOnce.A)((()=>(console.log(`${componentName} mounted`,...rest),()=>console.log(`${componentName} unmounted`)))),(0,useUpdateEffect.A)((()=>{console.log(`${componentName} updated`,...rest)}))};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useLogger_stories={title:"Hooks/Utility/useLogger",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useLogger` is a hook that provides lifecycle logging for React components.\nIt logs when a component mounts, updates, and unmounts, making it useful for debugging and development.\n\n### Module Federation Import\n```tsx\nimport { useLogger } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useLogger } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [count, setCount] = useState(0);\n  useLogger(\'MyComponent\', { count });\n\n  return (\n    <button onClick={() => setCount(c => c + 1)}>\n      Count: {count}\n    </button>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseLogger(\n  componentName: string,  // Name of the component for logging\n  ...rest: any[]         // Additional values to log\n): void\n```\n\n### Features\n- Logs component mount with initial values\n- Logs component updates with latest values\n- Logs component unmount\n- Supports logging multiple values\n- Useful for debugging component lifecycle\n\n### Browser Compatibility\nUses standard console.log API.\nWorks in all environments that support console logging.\n\n### Related Resources\n- [MDN: Console API](https://developer.mozilla.org/en-US/docs/Web/API/Console)\n- [React Component Lifecycle](https://reactjs.org/docs/react-component.html#the-component-lifecycle)'}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},LoggedComponent=({name,data})=>{const[count,setCount]=(0,react.useState)(0);return hooks_useLogger(name,{count,data}),(0,jsx_runtime.jsxs)("div",{className:"p-4 bg-white dark:bg-slate-800 rounded-lg shadow-md",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100 mb-2",children:name}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsxs)("p",{className:"text-slate-600 dark:text-slate-400",children:["Count: ",count]}),(0,jsx_runtime.jsx)("button",{onClick:()=>setCount((c=>c+1)),className:"px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm",children:"Increment"})]})]})},Example={render:()=>{const[showComponent,setShowComponent]=(0,react.useState)(!0),[showSecond,setShowSecond]=(0,react.useState)(!1),[userData,setUserData]=(0,react.useState)({name:"John",age:30});return(0,jsx_runtime.jsx)("div",{className:"w-[500px]",children:(0,jsx_runtime.jsxs)("div",{className:"space-y-6",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[(0,jsx_runtime.jsxs)("div",{className:"flex space-x-2",children:[(0,jsx_runtime.jsxs)("button",{onClick:()=>setShowComponent((prev=>!prev)),className:"px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 text-sm",children:[showComponent?"Unmount":"Mount"," First Component"]}),(0,jsx_runtime.jsxs)("button",{onClick:()=>setShowSecond((prev=>!prev)),className:"px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm",children:[showSecond?"Unmount":"Mount"," Second Component"]})]}),(0,jsx_runtime.jsx)("button",{onClick:()=>setUserData((prev=>({...prev,age:prev.age+1}))),className:"px-3 py-1 bg-orange-500 text-white rounded hover:bg-orange-600 text-sm",children:"Update User Data"})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-4",children:[showComponent&&(0,jsx_runtime.jsx)(LoggedComponent,{name:"FirstComponent",data:userData}),showSecond&&(0,jsx_runtime.jsx)(LoggedComponent,{name:"SecondComponent",data:userData})]}),(0,jsx_runtime.jsxs)("div",{className:"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg",children:[(0,jsx_runtime.jsx)("h4",{className:"font-semibold text-blue-700 dark:text-blue-300 mb-2",children:"Instructions"}),(0,jsx_runtime.jsxs)("ul",{className:"list-disc list-inside space-y-2 text-sm text-blue-600 dark:text-blue-400",children:[(0,jsx_runtime.jsx)("li",{children:"Open your browser's DevTools console (F12) to see the logs üîç"}),(0,jsx_runtime.jsx)("li",{children:"Try mounting/unmounting components using the buttons above"}),(0,jsx_runtime.jsx)("li",{children:"Increment the counter to see update logs"}),(0,jsx_runtime.jsx)("li",{children:"Update user data to see how prop changes are logged"}),(0,jsx_runtime.jsx)("li",{children:"Notice how each lifecycle event (mount, update, unmount) is logged"})]})]})]})})}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [showComponent, setShowComponent] = useState(true);\n    const [showSecond, setShowSecond] = useState(false);\n    const [userData, setUserData] = useState({\n      name: "John",\n      age: 30\n    });\n    return <div className="w-[500px]">\n        <div className="space-y-6">\n          {/* Controls */}\n          <div className="space-y-4">\n            <div className="flex space-x-2">\n              <button onClick={() => setShowComponent(prev => !prev)} className="px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 text-sm">\n                {showComponent ? "Unmount" : "Mount"} First Component\n              </button>\n              <button onClick={() => setShowSecond(prev => !prev)} className="px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm">\n                {showSecond ? "Unmount" : "Mount"} Second Component\n              </button>\n            </div>\n            <button onClick={() => setUserData(prev => ({\n            ...prev,\n            age: prev.age + 1\n          }))} className="px-3 py-1 bg-orange-500 text-white rounded hover:bg-orange-600 text-sm">\n              Update User Data\n            </button>\n          </div>\n\n          {/* Components */}\n          <div className="space-y-4">\n            {showComponent && <LoggedComponent name="FirstComponent" data={userData} />}\n            {showSecond && <LoggedComponent name="SecondComponent" data={userData} />}\n          </div>\n\n          {/* Console Instructions */}\n          <div className="p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">\n            <h4 className="font-semibold text-blue-700 dark:text-blue-300 mb-2">\n              Instructions\n            </h4>\n            <ul className="list-disc list-inside space-y-2 text-sm text-blue-600 dark:text-blue-400">\n              <li>\n                Open your browser&apos;s DevTools console (F12) to see the logs\n                üîç\n              </li>\n              <li>\n                Try mounting/unmounting components using the buttons above\n              </li>\n              <li>Increment the counter to see update logs</li>\n              <li>Update user data to see how prop changes are logged</li>\n              <li>\n                Notice how each lifecycle event (mount, update, unmount) is\n                logged\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
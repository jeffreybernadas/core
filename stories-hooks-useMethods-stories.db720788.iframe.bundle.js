/*! For license information please see stories-hooks-useMethods-stories.db720788.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[5431],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/stories/hooks/useMethods.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useMethods_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js");const hooks_useMethods=(createMethods,initialState)=>{const reducer=(0,react.useMemo)((()=>(reducerState,action)=>createMethods(reducerState)[action.type](...action.payload?[action.payload]:[])),[createMethods]),[state,dispatch]=(0,react.useReducer)(reducer,initialState);return[state,(0,react.useMemo)((()=>{const methods=createMethods(initialState);return Object.keys(methods).reduce(((acc,type)=>(acc[type]=(...payload)=>dispatch({type,payload}),acc)),{})}),[createMethods,initialState])]};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useMethods_stories={title:"Hooks/State Management/useMethods",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useMethods` is a hook that provides a simpler alternative to useReducer by allowing you to define state updates as methods.\nIt automatically wraps your methods to dispatch actions, eliminating the need for action types and switch statements.\n\n### Module Federation Import\n```tsx\nimport { useMethods } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useMethods } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\ninterface CounterState {\n  count: number;\n}\n\ninterface CounterMethods {\n  increment: () => void;\n  decrement: () => void;\n}\n\nconst Component = () => {\n  const [state, methods] = useMethods<CounterMethods, CounterState>(\n    (state) => ({\n      increment: () => ({ count: state.count + 1 }),\n      decrement: () => ({ count: state.count - 1 }),\n    }),\n    { count: 0 }\n  );\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={methods.increment}>+1</button>\n      <button onClick={methods.decrement}>-1</button>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseMethods<M extends Record<string, unknown>, T>(\n  createMethods: (state: T) => MethodsMap<M, T>, // Function that creates state update methods\n  initialState: T                                // Initial state value\n): [T, WrappedMethods<M>]\n```\n\n### Returns\n```tsx\n[\n  state: T,                    // Current state\n  methods: WrappedMethods<M>   // Object containing wrapped methods that update state\n]\n```\n\n### Browser Compatibility\nUses standard React hooks (useReducer, useMemo).\nSupported in all modern browsers.\n\n### Related Resources\n- [React useReducer](https://react.dev/reference/react/useReducer)\n- [React useMemo](https://react.dev/reference/react/useMemo)'}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},CounterExample=()=>{const[state,methods]=hooks_useMethods((state=>({increment:()=>({count:state.count+1}),decrement:()=>({count:state.count-1})})),{count:0});return(0,jsx_runtime.jsx)("div",{className:"w-[400px]",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Counter Example"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded text-center",children:[(0,jsx_runtime.jsx)("p",{className:"text-3xl font-bold text-slate-900 dark:text-slate-100",children:state.count}),(0,jsx_runtime.jsxs)("div",{className:"mt-4 flex justify-center space-x-2",children:[(0,jsx_runtime.jsx)("button",{onClick:methods.decrement,className:"px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-sm",children:"-1"}),(0,jsx_runtime.jsx)("button",{onClick:methods.increment,className:"px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm",children:"+1"})]})]})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"Try the increment and decrement buttons! Notice how useMethods simplifies state management by handling the action dispatching for you. No need for action types or switch statements! ðŸ”„"})})]})})},Example={render:()=>(0,jsx_runtime.jsx)(CounterExample,{})},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <CounterExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[1871],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/stories/hooks/useOrientation.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useOrientation_stories});var react=__webpack_require__("./node_modules/react/index.js"),util=__webpack_require__("./src/hooks/misc/util.ts");const defaultState={angle:0,type:"landscape-primary"},hooks_useOrientation=(initialState=defaultState)=>{const[state,setState]=(0,react.useState)(initialState);return(0,react.useEffect)((()=>{const screen=window.screen;let mounted=!0;const onChange=()=>{if(mounted){const{orientation}=screen;if(orientation){const{angle,type}=orientation;setState({angle,type})}else void 0!==window.orientation?setState({angle:"number"==typeof window.orientation?window.orientation:0,type:""}):setState(initialState)}};return(0,util.on)(window,"orientationchange",onChange),onChange(),()=>{mounted=!1,(0,util.AU)(window,"orientationchange",onChange)}}),[]),state};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useOrientation_stories={title:"Hooks/Utility/useOrientation",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useOrientation` is a hook that tracks the device\'s screen orientation.\nIt provides both the angle and type of orientation, useful for responsive design and mobile-first applications.\n\n### Module Federation Import\n```tsx\nimport { useOrientation } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useOrientation } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const { angle, type } = useOrientation();\n\n  return (\n    <div>\n      <div>Angle: {angle}Â°</div>\n      <div>Type: {type}</div>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseOrientation(\n  initialState?: OrientationState = { // Optional initial state\n    angle: 0,\n    type: "landscape-primary"\n  }\n): OrientationState\n```\n\n### Returns\n```tsx\n{\n  angle: number, // The angle of rotation (0, 90, 180, or 270)\n  type: string // The orientation type (e.g., "landscape-primary", "portrait-secondary")\n}\n```\n\n### Browser Compatibility\nUses the Screen Orientation API and fallbacks.\n- Screen Orientation API: Modern browsers\n- window.orientation: Legacy support\n\n### Related Resources\n- [MDN: Screen Orientation API](https://developer.mozilla.org/en-US/docs/Web/API/Screen_Orientation_API)\n- [MDN: Window.orientation](https://developer.mozilla.org/en-US/docs/Web/API/Window/orientation)'}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},OrientationExample=()=>{const{angle,type}=hooks_useOrientation(),frameRotation=angle,isPortrait=type.includes("portrait");return react.createElement("div",{className:"w-[400px] space-y-6"},react.createElement("div",{className:"relative h-80 bg-slate-100 dark:bg-slate-800 rounded-lg flex items-center justify-center"},react.createElement("div",{className:"relative transition-transform duration-300",style:{transform:`rotate(${frameRotation}deg)`}},react.createElement("div",{className:`\n              relative border-8 border-slate-300 dark:border-slate-600 rounded-[3rem] bg-white dark:bg-slate-700\n              ${isPortrait?"w-48 h-80":"w-80 h-48"}\n              transition-all duration-300\n            `},react.createElement("div",{className:"absolute inset-2 bg-slate-100 dark:bg-slate-800 rounded-[2rem] flex items-center justify-center"},react.createElement("div",{className:"text-center space-y-2"},react.createElement("div",{className:"text-4xl"},"ðŸ“±"),react.createElement("div",{className:"text-sm font-medium"},type))))),react.createElement("div",{className:"absolute bottom-4 left-4 bg-slate-200 dark:bg-slate-700 rounded-full px-3 py-1"},react.createElement("span",{className:"font-mono text-sm"},angle,"Â°"))),react.createElement("div",{className:"p-4 bg-slate-100 dark:bg-slate-800 rounded-lg space-y-2"},react.createElement("div",{className:"flex justify-between items-center"},react.createElement("span",{className:"text-sm font-medium"},"Angle"),react.createElement("span",{className:"font-mono"},angle,"Â°")),react.createElement("div",{className:"flex justify-between items-center"},react.createElement("span",{className:"text-sm font-medium"},"Type"),react.createElement("span",{className:"font-mono"},type||"unknown")),react.createElement("div",{className:"flex justify-between items-center"},react.createElement("span",{className:"text-sm font-medium"},"Mode"),react.createElement("span",{className:"font-mono"},isPortrait?"Portrait":"Landscape"))),react.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Rotate your device or use device orientation controls to see the visualization update! ðŸ“±")))},Example={render:()=>react.createElement(OrientationExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <OrientationExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
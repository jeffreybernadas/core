/*! For license information please see stories-hooks-useDefault-stories.f288cc0a.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[8714],{"./node_modules/react/cjs/react-jsx-runtime.production.js":(__unused_webpack_module,exports)=>{var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment");function jsxProd(type,config,maybeKey){var key=null;if(void 0!==maybeKey&&(key=""+maybeKey),void 0!==config.key&&(key=""+config.key),"key"in config)for(var propName in maybeKey={},config)"key"!==propName&&(maybeKey[propName]=config[propName]);else maybeKey=config;return config=maybeKey.ref,{$$typeof:REACT_ELEMENT_TYPE,type,key,ref:void 0!==config?config:null,props:maybeKey}}exports.Fragment=REACT_FRAGMENT_TYPE,exports.jsx=jsxProd,exports.jsxs=jsxProd},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.js")},"./src/stories/hooks/useDefault.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useDefault_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js");const hooks_useDefault=(defaultValue,initialValue)=>{const[value,setValue]=(0,react.useState)(initialValue);return null==value?[defaultValue,setValue]:[value,setValue]};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useDefault_stories={title:"Hooks/State Management/useDefault",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useDefault` is a hook that provides a default value when the state is undefined or null.\nIt\'s useful for handling cases where you want to ensure a fallback value when the state is empty.\n\n### Module Federation Import\n```tsx\nimport { useDefault } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useDefault } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [value, setValue] = useDefault("Default Value", null);\n  return <div>{value}</div>; // Shows "Default Value"\n};\n```\n\n### Parameters\n```tsx\nuseDefault<T>(\n  defaultValue: T, // The fallback value when state is null/undefined\n  initialValue: T | (() => T) // Initial state value or initializer function\n): [T, React.Dispatch<React.SetStateAction<T | undefined | null>>]\n```\n\n### Returns\n```tsx\n[value, setValue] // Tuple of current value and state setter function\n```'}}},tags:["autodocs"],decorators:[Story=>(0,jsx_runtime.jsx)(ThemeProvider.N,{children:(0,jsx_runtime.jsx)(Story,{})})]},Example={render:()=>{const[text,setText]=hooks_useDefault("Default Text",null),[count,setCount]=hooks_useDefault(10,void 0),[user,setUser]=hooks_useDefault({name:"Default User",age:0},{name:"John Doe",age:25}),[list,setList]=hooks_useDefault(["Default Item"],[]);return(0,jsx_runtime.jsx)("div",{className:"w-[400px]",children:(0,jsx_runtime.jsxs)("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6",children:[(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"String with null initial value"}),(0,jsx_runtime.jsxs)("div",{className:"bg-slate-100 dark:bg-slate-700 p-4 rounded",children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-slate-500 dark:text-slate-400",children:'Current value: (should show "Default Text" initially)'}),(0,jsx_runtime.jsx)("p",{className:"text-lg font-mono mt-1 text-slate-700 dark:text-slate-300",children:text}),(0,jsx_runtime.jsxs)("div",{className:"space-x-2",children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setText("Custom Text"),className:"mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm",children:"Set Custom Text"}),(0,jsx_runtime.jsx)("button",{onClick:()=>setText(null),className:"mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm",children:"Set to null"})]})]})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Number with undefined initial value"}),(0,jsx_runtime.jsxs)("div",{className:"bg-green-100 dark:bg-green-900/20 p-4 rounded",children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-green-600 dark:text-green-400",children:"Current value: (should show 10 initially)"}),(0,jsx_runtime.jsx)("p",{className:"text-lg font-mono mt-1 text-green-700 dark:text-green-300",children:count}),(0,jsx_runtime.jsxs)("div",{className:"space-x-2",children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setCount(20),className:"mt-2 px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm",children:"Set to 20"}),(0,jsx_runtime.jsx)("button",{onClick:()=>setCount(void 0),className:"mt-2 px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm",children:"Set to undefined"})]})]})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Object with non-null initial value"}),(0,jsx_runtime.jsxs)("div",{className:"bg-purple-100 dark:bg-purple-900/20 p-4 rounded",children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-purple-600 dark:text-purple-400",children:"Current user: (should show John Doe initially)"}),(0,jsx_runtime.jsxs)("p",{className:"text-lg font-mono mt-1 text-purple-700 dark:text-purple-300",children:[user.name,", ",user.age]}),(0,jsx_runtime.jsxs)("div",{className:"space-x-2",children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setUser({name:"Jane Smith",age:30}),className:"mt-2 px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 text-sm",children:"Set New User"}),(0,jsx_runtime.jsx)("button",{onClick:()=>setUser(null),className:"mt-2 px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 text-sm",children:"Set to null"})]})]})]}),(0,jsx_runtime.jsxs)("div",{className:"space-y-2",children:[(0,jsx_runtime.jsx)("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100",children:"Array with empty initial array"}),(0,jsx_runtime.jsxs)("div",{className:"bg-orange-100 dark:bg-orange-900/20 p-4 rounded",children:[(0,jsx_runtime.jsx)("p",{className:"text-sm text-orange-600 dark:text-orange-400",children:"Current list: (should show empty array initially)"}),(0,jsx_runtime.jsx)("p",{className:"text-lg font-mono mt-1 text-orange-700 dark:text-orange-300",children:list.length?list.join(", "):"(empty)"}),(0,jsx_runtime.jsxs)("div",{className:"space-x-2",children:[(0,jsx_runtime.jsx)("button",{onClick:()=>setList(["Custom Item"]),className:"mt-2 px-3 py-1 bg-orange-500 text-white rounded hover:bg-orange-600 text-sm",children:"Set Custom Item"}),(0,jsx_runtime.jsx)("button",{onClick:()=>setList(null),className:"mt-2 px-3 py-1 bg-orange-500 text-white rounded hover:bg-orange-600 text-sm",children:"Set to null"})]})]})]}),(0,jsx_runtime.jsx)("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded",children:(0,jsx_runtime.jsx)("p",{className:"text-sm text-blue-600 dark:text-blue-400",children:"The hook provides a default value when the state becomes null/undefined. Try the buttons to see how it works! ðŸŽ¯"})})]})})}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Example 1: String with null initial value\n    const [text, setText] = useDefault("Default Text", null);\n\n    // Example 2: Number with undefined initial value\n    const [count, setCount] = useDefault(10, undefined);\n\n    // Example 3: Object with non-null initial value\n    const [user, setUser] = useDefault({\n      name: "Default User",\n      age: 0\n    }, {\n      name: "John Doe",\n      age: 25\n    });\n\n    // Example 4: Array with empty initial array\n    const [list, setList] = useDefault<string[]>(["Default Item"], []);\n    return <div className="w-[400px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6">\n          {/* String Example */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              String with null initial value\n            </h3>\n            <div className="bg-slate-100 dark:bg-slate-700 p-4 rounded">\n              <p className="text-sm text-slate-500 dark:text-slate-400">\n                Current value: (should show "Default Text" initially)\n              </p>\n              <p className="text-lg font-mono mt-1 text-slate-700 dark:text-slate-300">\n                {text}\n              </p>\n              <div className="space-x-2">\n                <button onClick={() => setText("Custom Text")} className="mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm">\n                  Set Custom Text\n                </button>\n                <button onClick={() => setText(null)} className="mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-sm">\n                  Set to null\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Number Example */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Number with undefined initial value\n            </h3>\n            <div className="bg-green-100 dark:bg-green-900/20 p-4 rounded">\n              <p className="text-sm text-green-600 dark:text-green-400">\n                Current value: (should show 10 initially)\n              </p>\n              <p className="text-lg font-mono mt-1 text-green-700 dark:text-green-300">\n                {count}\n              </p>\n              <div className="space-x-2">\n                <button onClick={() => setCount(20)} className="mt-2 px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm">\n                  Set to 20\n                </button>\n                <button onClick={() => setCount(undefined)} className="mt-2 px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600 text-sm">\n                  Set to undefined\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Object Example */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Object with non-null initial value\n            </h3>\n            <div className="bg-purple-100 dark:bg-purple-900/20 p-4 rounded">\n              <p className="text-sm text-purple-600 dark:text-purple-400">\n                Current user: (should show John Doe initially)\n              </p>\n              <p className="text-lg font-mono mt-1 text-purple-700 dark:text-purple-300">\n                {user.name}, {user.age}\n              </p>\n              <div className="space-x-2">\n                <button onClick={() => setUser({\n                name: "Jane Smith",\n                age: 30\n              })} className="mt-2 px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 text-sm">\n                  Set New User\n                </button>\n                <button onClick={() => setUser(null)} className="mt-2 px-3 py-1 bg-purple-500 text-white rounded hover:bg-purple-600 text-sm">\n                  Set to null\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Array Example */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Array with empty initial array\n            </h3>\n            <div className="bg-orange-100 dark:bg-orange-900/20 p-4 rounded">\n              <p className="text-sm text-orange-600 dark:text-orange-400">\n                Current list: (should show empty array initially)\n              </p>\n              <p className="text-lg font-mono mt-1 text-orange-700 dark:text-orange-300">\n                {list.length ? list.join(", ") : "(empty)"}\n              </p>\n              <div className="space-x-2">\n                <button onClick={() => setList(["Custom Item"])} className="mt-2 px-3 py-1 bg-orange-500 text-white rounded hover:bg-orange-600 text-sm">\n                  Set Custom Item\n                </button>\n                <button onClick={() => setList(null)} className="mt-2 px-3 py-1 bg-orange-500 text-white rounded hover:bg-orange-600 text-sm">\n                  Set to null\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              The hook provides a default value when the state becomes\n              null/undefined. Try the buttons to see how it works! ðŸŽ¯\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeProviderContext.Provider,{...props,value,children})}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
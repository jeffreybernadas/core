"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[8033],{"./src/hooks/useAsync.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useAsync});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useAsyncFn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useAsyncFn.ts");function useAsync(fn,deps=[]){const[state,callback]=(0,_useAsyncFn__WEBPACK_IMPORTED_MODULE_1__.A)(fn,deps,{loading:!0});return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{callback()}),[callback]),state}},"./src/hooks/useAsyncFn.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useAsyncFn});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useMountedState__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useMountedState.ts");function useAsyncFn(fn,deps=[],initialState={loading:!1}){const lastCallId=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0),isMounted=(0,_useMountedState__WEBPACK_IMPORTED_MODULE_1__.A)(),[state,set]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState),callback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((...args)=>{const callId=++lastCallId.current;return state.loading||set((prevState=>({...prevState,loading:!0}))),fn(...args).then((value=>(isMounted()&&callId===lastCallId.current&&set({value,loading:!1}),value)),(error=>(isMounted()&&callId===lastCallId.current&&set({error,loading:!1}),error)))}),deps);return[state,callback]}},"./src/hooks/useMountedState.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>useMountedState});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");function useMountedState(){const mountedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),get=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>mountedRef.current),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>(mountedRef.current=!0,()=>{mountedRef.current=!1})),[]),get}},"./src/stories/hooks/useAsync.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useAsync.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/State Management/useAsync",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useAsync` is a hook that manages async function state with automatic execution.\nIt\'s useful for handling API calls, data fetching, and other async operations that should run immediately.\n\n### Module Federation Import\n```tsx\nimport { useAsync } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useAsync } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = ({ userId }: { userId: string }) => {\n  const state = useAsync(async () => {\n    const response = await fetch(`/api/users/${userId}`);\n    const data = await response.json();\n    return data;\n  }, [userId]);\n\n  if (state.loading) return <div>Loading...</div>;\n  if (state.error) return <div>Error: {state.error.message}</div>;\n  return <div>User: {state.value?.name}</div>;\n};\n```\n\n### Parameters\n```tsx\nuseAsync<T>(\n  fn: () => Promise<T>, // Async function to execute\n  deps?: DependencyList = [] // Dependencies array that triggers re-execution\n): AsyncState<T>\n```\n\n### Returns\n- AsyncState<T>:\n  - loading: boolean - Whether the async function is currently executing\n  - error: Error | undefined - Error object if the async function failed\n  - value: T | undefined - Result value if the async function succeeded\n\n### Browser Compatibility\nUses standard Promise API, supported in all modern browsers.\n\n### Related Resources\n- [MDN: Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- [MDN: async function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function)'}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Example={render:()=>{const state=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((async()=>(await new Promise((resolve=>setTimeout(resolve,1500))),{id:1,name:"John Doe",email:"john@example.com",role:"Admin"})));return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-6 max-w-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Async Data Fetching Example"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-4"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"flex items-center space-x-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-3 h-3 rounded-full flex-shrink-0"},state.loading?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-3 h-3 bg-blue-500 rounded-full animate-pulse"}):state.error?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-3 h-3 bg-red-500 rounded-full"}):react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-3 h-3 bg-green-500 rounded-full"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-slate-600 dark:text-slate-400"},state.loading?"Fetching user data...":state.error?"Error fetching data":"Data fetched successfully")),state.error&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-red-500 text-sm"},"Error: ",state.error.message),state.value&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-700 rounded p-3 space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"grid grid-cols-[100px_1fr] gap-2 text-sm"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-500 dark:text-slate-400"},"Name:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-900 dark:text-slate-100"},state.value.name),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-500 dark:text-slate-400"},"Email:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-900 dark:text-slate-100"},state.value.email),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-500 dark:text-slate-400"},"Role:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-slate-900 dark:text-slate-100"},state.value.role)))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"See the loading, success, and error states in action! Try toggling your network connection to see error handling. âš¡")))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Simulated async function that resolves after a delay\n    const fetchUserData = async () => {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      return {\n        id: 1,\n        name: "John Doe",\n        email: "john@example.com",\n        role: "Admin"\n      };\n    };\n    const state = useAsync(fetchUserData);\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Async Data Fetching Example\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg">\n            <div className="space-y-4">\n              <div className="flex items-center space-x-2">\n                <div className="w-3 h-3 rounded-full flex-shrink-0">\n                  {state.loading ? <div className="w-3 h-3 bg-blue-500 rounded-full animate-pulse" /> : state.error ? <div className="w-3 h-3 bg-red-500 rounded-full" /> : <div className="w-3 h-3 bg-green-500 rounded-full" />}\n                </div>\n                <div className="text-sm text-slate-600 dark:text-slate-400">\n                  {state.loading ? "Fetching user data..." : state.error ? "Error fetching data" : "Data fetched successfully"}\n                </div>\n              </div>\n\n              {state.error && <div className="text-red-500 text-sm">\n                  Error: {state.error.message}\n                </div>}\n\n              {state.value && <div className="bg-white dark:bg-slate-700 rounded p-3 space-y-2">\n                  <div className="grid grid-cols-[100px_1fr] gap-2 text-sm">\n                    <div className="text-slate-500 dark:text-slate-400">\n                      Name:\n                    </div>\n                    <div className="text-slate-900 dark:text-slate-100">\n                      {state.value.name}\n                    </div>\n                    <div className="text-slate-500 dark:text-slate-400">\n                      Email:\n                    </div>\n                    <div className="text-slate-900 dark:text-slate-100">\n                      {state.value.email}\n                    </div>\n                    <div className="text-slate-500 dark:text-slate-400">\n                      Role:\n                    </div>\n                    <div className="text-slate-900 dark:text-slate-100">\n                      {state.value.role}\n                    </div>\n                  </div>\n                </div>}\n            </div>\n\n            {/* Instructions */}\n            <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n              <p className="text-sm text-blue-600 dark:text-blue-400">\n                See the loading, success, and error states in action! Try\n                toggling your network connection to see error handling. âš¡\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2796],{"./src/stories/lib/format.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>format_stories});var react=__webpack_require__("./node_modules/react/index.js");const format_number=(num,decimals)=>new Intl.NumberFormat("en-US",{minimumFractionDigits:decimals,maximumFractionDigits:decimals}).format(num),format_currency=(num,currency="USD",locale="en-US")=>new Intl.NumberFormat(locale,{style:"currency",currency}).format(num),format_date=(date,pattern)=>{if(pattern){const year=date.getFullYear(),month=String(date.getMonth()+1).padStart(2,"0"),day=String(date.getDate()).padStart(2,"0");return pattern.replace("yyyy",String(year)).replace("MM",month).replace("dd",day)}return new Intl.DateTimeFormat("en-US",{year:"numeric",month:"short",day:"numeric"}).format(date)},format_time=(date,pattern)=>{if(pattern){const hours24=String(date.getHours()).padStart(2,"0"),minutes=String(date.getMinutes()).padStart(2,"0");return pattern.replace("HH",hours24).replace("mm",minutes)}return new Intl.DateTimeFormat("en-US",{hour:"numeric",minute:"numeric",hour12:!0}).format(date)};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const format_stories={title:"Lib/format",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},Example={render:()=>{const number=1234567.89,date=new Date("2024-03-15T14:30:00");return react.createElement("div",{className:"space-y-6 max-w-lg"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100"},"Format Utility Examples"),react.createElement("div",{className:"bg-slate-100 dark:bg-slate-800 p-4 rounded-lg space-y-6"},react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"font-medium text-slate-800 dark:text-slate-200"},"Number Formatting"),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"Original: ",react.createElement("span",{className:"font-mono"},number)),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"Formatted:"," ",react.createElement("span",{className:"font-mono"},format_number(number))),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"With 2 decimals:"," ",react.createElement("span",{className:"font-mono"},format_number(number,2)))),react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"font-medium text-slate-800 dark:text-slate-200"},"Currency Formatting"),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"USD:"," ",react.createElement("span",{className:"font-mono"},format_currency(number))),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"EUR:"," ",react.createElement("span",{className:"font-mono"},format_currency(number,"EUR","de-DE")))),react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"font-medium text-slate-800 dark:text-slate-200"},"Date Formatting"),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"Default: ",react.createElement("span",{className:"font-mono"},format_date(date))),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"Custom:"," ",react.createElement("span",{className:"font-mono"},format_date(date,"yyyy-MM-dd")))),react.createElement("div",{className:"space-y-2"},react.createElement("h4",{className:"font-medium text-slate-800 dark:text-slate-200"},"Time Formatting"),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"12-hour: ",react.createElement("span",{className:"font-mono"},format_time(date))),react.createElement("p",{className:"text-slate-700 dark:text-slate-300"},"24-hour:"," ",react.createElement("span",{className:"font-mono"},format_time(date,"HH:mm")))))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const number = 1234567.89;\n    const date = new Date("2024-03-15T14:30:00");\n    return <div className="space-y-6 max-w-lg">\n        <div>\n          <h3 className="text-lg font-semibold mb-2 text-slate-900 dark:text-slate-100">\n            Format Utility Examples\n          </h3>\n          <div className="bg-slate-100 dark:bg-slate-800 p-4 rounded-lg space-y-6">\n            <div className="space-y-2">\n              <h4 className="font-medium text-slate-800 dark:text-slate-200">\n                Number Formatting\n              </h4>\n              <p className="text-slate-700 dark:text-slate-300">\n                Original: <span className="font-mono">{number}</span>\n              </p>\n              <p className="text-slate-700 dark:text-slate-300">\n                Formatted:{" "}\n                <span className="font-mono">{format.number(number)}</span>\n              </p>\n              <p className="text-slate-700 dark:text-slate-300">\n                With 2 decimals:{" "}\n                <span className="font-mono">{format.number(number, 2)}</span>\n              </p>\n            </div>\n\n            <div className="space-y-2">\n              <h4 className="font-medium text-slate-800 dark:text-slate-200">\n                Currency Formatting\n              </h4>\n              <p className="text-slate-700 dark:text-slate-300">\n                USD:{" "}\n                <span className="font-mono">{format.currency(number)}</span>\n              </p>\n              <p className="text-slate-700 dark:text-slate-300">\n                EUR:{" "}\n                <span className="font-mono">\n                  {format.currency(number, "EUR", "de-DE")}\n                </span>\n              </p>\n            </div>\n\n            <div className="space-y-2">\n              <h4 className="font-medium text-slate-800 dark:text-slate-200">\n                Date Formatting\n              </h4>\n              <p className="text-slate-700 dark:text-slate-300">\n                Default: <span className="font-mono">{format.date(date)}</span>\n              </p>\n              <p className="text-slate-700 dark:text-slate-300">\n                Custom:{" "}\n                <span className="font-mono">\n                  {format.date(date, "yyyy-MM-dd")}\n                </span>\n              </p>\n            </div>\n\n            <div className="space-y-2">\n              <h4 className="font-medium text-slate-800 dark:text-slate-200">\n                Time Formatting\n              </h4>\n              <p className="text-slate-700 dark:text-slate-300">\n                12-hour: <span className="font-mono">{format.time(date)}</span>\n              </p>\n              <p className="text-slate-700 dark:text-slate-300">\n                24-hour:{" "}\n                <span className="font-mono">{format.time(date, "HH:mm")}</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source},description:{story:'A collection of utility functions for formatting numbers, dates, and text.\n\n### Module Federation Import\n```tsx\nimport { format } from "@core/lib";\n```\n\n### NPM Package Import\n```tsx\nimport { format } from "@bernz322/core/lib";\n```\n\n### Available Functions\n\n#### formatNumber\n```tsx\n// Format number with commas\nformat.number(1234567); // "1,234,567"\n\n// Format with decimal places\nformat.number(1234.5678, 2); // "1,234.57"\n```\n\n#### formatCurrency\n```tsx\n// Format as USD\nformat.currency(1234.56); // "$1,234.56"\n\n// Format as EUR with custom locale\nformat.currency(1234.56, "EUR", "de-DE"); // "1.234,56 â‚¬"\n```\n\n#### formatDate\n```tsx\n// Format date with default pattern\nformat.date(new Date("2024-03-15")); // "Mar 15, 2024"\n\n// Format with custom pattern\nformat.date(new Date("2024-03-15"), "yyyy-MM-dd"); // "2024-03-15"\n```\n\n#### formatTime\n```tsx\n// Format time with default pattern\nformat.time(new Date("2024-03-15T14:30:00")); // "2:30 PM"\n\n// Format with 24-hour pattern\nformat.time(new Date("2024-03-15T14:30:00"), "HH:mm"); // "14:30"\n```\n\n### Browser Compatibility\nThese functions use the following Web APIs:\n- [Intl.NumberFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat)\n- [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat)\n\nSupported in all modern browsers. For older browsers, consider using a polyfill.',...Example.parameters?.docs?.description}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
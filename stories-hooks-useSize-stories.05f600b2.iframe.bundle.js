"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[2348],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/stories/hooks/useSize.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useSize_stories});var react=__webpack_require__("./node_modules/react/index.js"),react_namespaceObject=__webpack_require__.t(react,2),util=__webpack_require__("./src/hooks/misc/util.ts");const{useState,useEffect,useRef}=react_namespaceObject,hooks_useSize=(element,{width=1/0,height=1/0}={})=>{if(!util.Bd)return["function"==typeof element?element({width,height}):element,{width,height}];const[state,setState]=useState({width,height});"function"==typeof element&&(element=element(state));const style=element.props.style||{},ref=useRef(null);let window=null;const setSize=()=>{const iframe=ref.current,size=iframe?{width:iframe.offsetWidth,height:iframe.offsetHeight}:{width,height};setState(size)},onWindow=windowToListenOn=>{(0,util.on)(windowToListenOn,"resize",setSize),setTimeout(setSize,35)};useEffect((()=>{const iframe=ref.current;if(iframe){if(iframe.contentWindow)window=iframe.contentWindow,onWindow(window);else{const onLoad=()=>{(0,util.on)(iframe,"load",onLoad),window=iframe.contentWindow,onWindow(window)};(0,util.AU)(iframe,"load",onLoad)}return()=>{window&&(0,util.AU)(window,"resize",setSize)}}}),[]),style.position="relative";return[react.cloneElement(element,{style},react.createElement("iframe",{ref,style:{background:"transparent",border:"none",height:"100%",left:0,position:"absolute",top:0,width:"100%",zIndex:-1}}),...react.Children.toArray(element.props.children)),state]};var ThemeProvider=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const useSize_stories={title:"Hooks/Browser API/useSize",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:"`useSize` is a hook that tracks an element's dimensions using an iframe-based approach.\nIt's useful for responsive layouts, dynamic sizing, and element measurements.\n\n### Module Federation Import\n```tsx\nimport { useSize } from \"@core/hooks\";\n```\n\n### NPM Package Import\n```tsx\nimport { useSize } from \"@bernz322/core/hooks\";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [sized, size] = useSize(\n    <div>Resize me!</div>\n  );\n\n  return (\n    <div>\n      {sized}\n      <div>\n        Width: {size.width}px\n        Height: {size.height}px\n      </div>\n    </div>\n  );\n};\n```\n\n### Advanced Usage\n```tsx\nconst ResponsiveGrid = () => {\n  const containerRef = useRef(null);\n  const size = useSize(containerRef);\n\n  const columns = Math.max(1, Math.floor((size?.width ?? 0) / 100));\n\n  return (\n    <div ref={containerRef}>\n      <div>\n        {Array.from({ length: columns }, (_, i) => (\n          <div key={i}>Column {i + 1}</div>\n        ))}\n      </div>\n      <div>\n        Container width: {size?.width}px\n        Columns: {columns}\n      </div>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nuseSize(\n  ref: RefObject<HTMLElement> // Reference to the element to observe\n): { width: number; height: number } | undefined\n```\n\n### Returns\n- An object containing:\n  - width (number): Element's width in pixels\n  - height (number): Element's height in pixels\n- undefined if the element is not yet mounted\n\n### Browser Compatibility\nUses ResizeObserver API, supported in all modern browsers.\nConsider using a polyfill for older browsers.\n\n### Related Resources\n- [MDN: ResizeObserver](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)"}}},tags:["autodocs"],decorators:[Story=>react.createElement(ThemeProvider.N,null,react.createElement(Story,null))]},SizeExample=()=>{const[sized,{width,height}]=hooks_useSize(react.createElement("div",{style:{resize:"both",overflow:"auto",minWidth:"200px",minHeight:"100px",border:"2px solid #e2e8f0",borderRadius:"8px",padding:"16px"}},react.createElement("div",{className:"h-full w-full flex items-center justify-center"},"Resize me from the bottom-right corner!")));return react.createElement("div",{className:"space-y-6"},react.createElement("div",null,react.createElement("h3",{className:"text-lg font-semibold mb-4"},"Resizable Container"),sized),react.createElement("div",{className:"bg-gray-100 p-4 rounded-lg"},react.createElement("h4",{className:"font-semibold mb-2"},"Current Dimensions"),react.createElement("div",{className:"grid grid-cols-2 gap-4"},react.createElement("div",{className:"bg-white p-3 rounded shadow-sm"},react.createElement("div",{className:"text-sm text-gray-600"},"Width"),react.createElement("div",{className:"text-2xl font-mono"},Math.round(width),"px")),react.createElement("div",{className:"bg-white p-3 rounded shadow-sm"},react.createElement("div",{className:"text-sm text-gray-600"},"Height"),react.createElement("div",{className:"text-2xl font-mono"},Math.round(height),"px")))),react.createElement("div",{className:"text-sm text-gray-600"},react.createElement("h4",{className:"font-semibold mb-1"},"Usage Instructions:"),react.createElement("ul",{className:"list-disc list-inside space-y-1"},react.createElement("li",null,"Grab the bottom-right corner of the container above"),react.createElement("li",null,"Drag to resize the container"),react.createElement("li",null,"Watch the dimensions update in real-time"),react.createElement("li",null,"The container has a minimum size of 200Ã—100px"))))},Example={render:()=>react.createElement(SizeExample,null)},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:"{\n  render: () => <SizeExample />\n}",...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);
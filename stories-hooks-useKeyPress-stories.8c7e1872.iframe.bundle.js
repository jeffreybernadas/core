"use strict";(self.webpackChunk_bernz322_core=self.webpackChunk_bernz322_core||[]).push([[7661],{"./src/hooks/misc/util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{AU:()=>off,Bd:()=>isBrowser,lQ:()=>noop,on:()=>on,w2:()=>isNavigator});const noop=()=>{};function on(obj,...args){obj&&obj.addEventListener&&obj.addEventListener(...args)}function off(obj,...args){obj&&obj.removeEventListener&&obj.removeEventListener(...args)}const isBrowser="undefined"!=typeof window,isNavigator="undefined"!=typeof navigator},"./src/hooks/useEvent.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/misc/util.ts");const defaultTarget=_misc_util__WEBPACK_IMPORTED_MODULE_1__.Bd?window:null,isListenerType1=target=>!!target&&"function"==typeof target.addEventListener,isListenerType2=target=>!!target&&"function"==typeof target.on,__WEBPACK_DEFAULT_EXPORT__=(name,handler,target=defaultTarget,options)=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(handler&&target)return isListenerType1(target)?(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.on)(target,name,handler,options):isListenerType2(target)&&target.on(name,handler,options),()=>{isListenerType1(target)?(0,_misc_util__WEBPACK_IMPORTED_MODULE_1__.AU)(target,name,handler,options):isListenerType2(target)&&target.off(name,handler,options)}}),[name,handler,target,JSON.stringify(options)])}},"./src/hooks/useKey.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useEvent__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useEvent.ts"),_misc_util__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/misc/util.ts");const __WEBPACK_DEFAULT_EXPORT__=(key,fn=_misc_util__WEBPACK_IMPORTED_MODULE_1__.lQ,opts={},deps=[key])=>{const{event="keydown",target,options}=opts,useMemoHandler=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>{const predicate="function"==typeof(keyFilter=key)?keyFilter:"string"==typeof keyFilter?event=>event.key===keyFilter:keyFilter?()=>!0:()=>!1;var keyFilter;return handlerEvent=>{if(predicate(handlerEvent))return fn(handlerEvent)}}),deps);(0,_useEvent__WEBPACK_IMPORTED_MODULE_2__.A)(event,useMemoHandler,target,options)}},"./src/hooks/useKeyPress.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useKey__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/hooks/useKey.ts");const __WEBPACK_DEFAULT_EXPORT__=keyFilter=>{const[state,set]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([!1,null]);return(0,_useKey__WEBPACK_IMPORTED_MODULE_1__.A)(keyFilter,(event=>set([!0,event])),{event:"keydown"},[state]),(0,_useKey__WEBPACK_IMPORTED_MODULE_1__.A)(keyFilter,(event=>set([!1,event])),{event:"keyup"},[state]),state}},"./src/stories/hooks/useKeyPress.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Example:()=>Example,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_hooks__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/hooks/useKeyPress.ts"),_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/themes/shadcn/ThemeProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Hooks/Event & Interaction/useKeyPress",parameters:{layout:"centered",docs:{canvas:{sourceState:"none"},description:{component:'`useKeyPress` is a hook that tracks the pressed state of a specific key or key combination.\nIt\'s useful for implementing keyboard shortcuts, game controls, or any feature that needs to know if a key is currently pressed.\n\n### Module Federation Import\n```tsx\nimport { useKeyPress } from "@core/hooks";\n```\n\n### NPM Package Import\n```tsx\nimport { useKeyPress } from "@bernz322/core/hooks";\n```\n\n### Basic Usage\n```tsx\nconst Component = () => {\n  const [isPressed] = useKeyPress(" ");\n\n  return (\n    <div>\n      Spacebar is {isPressed ? "pressed" : "released"}\n    </div>\n  );\n};\n```\n\n### Advanced Usage\n```tsx\nconst GameControls = () => {\n  const [isUp] = useKeyPress("ArrowUp");\n  const [isDown] = useKeyPress("ArrowDown");\n  const [isLeft] = useKeyPress("ArrowLeft");\n  const [isRight] = useKeyPress("ArrowRight");\n\n  return (\n    <div>\n      <div>Up: {isUp ? "üîº" : "‚¨ÜÔ∏è"}</div>\n      <div>Down: {isDown ? "üîΩ" : "‚¨áÔ∏è"}</div>\n      <div>Left: {isLeft ? "‚óÄÔ∏è" : "‚¨ÖÔ∏è"}</div>\n      <div>Right: {isRight ? "‚ñ∂Ô∏è" : "‚û°Ô∏è"}</div>\n    </div>\n  );\n};\n```\n\n### Parameters\n```tsx\nkeyFilter: KeyFilter // String key name or predicate function\n```\n\n### Returns\n```tsx\n[boolean, KeyboardEvent | null] // [isPressed, event]\n```\n\n### Browser Compatibility\nUses standard keyboard events:\n- keydown\n- keyup\nSupported in all modern browsers.\n\n### Related Resources\n- [MDN: KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent)\n- [MDN: KeyboardEvent.key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key)'}}},tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_themes_shadcn__WEBPACK_IMPORTED_MODULE_1__.N,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},Example={render:()=>{const[isSpacePressed,spaceEvent]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)(" "),[isEnterPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("Enter"),[isEscapePressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("Escape"),[isUpPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("ArrowUp"),[isDownPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("ArrowDown"),[isLeftPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("ArrowLeft"),[isRightPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)("ArrowRight"),[isCtrlPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((e=>"Control"===e.key)),[isShiftPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((e=>"Shift"===e.key)),[isAltPressed]=(0,_hooks__WEBPACK_IMPORTED_MODULE_2__.A)((e=>"Alt"===e.key)),[history,setHistory]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);return react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>{if(spaceEvent){const action="keydown"===spaceEvent.type?"pressed":"released";setHistory((prev=>[`Space ${action} at ${(new Date).toLocaleTimeString()}`,...prev.slice(0,4)]))}}),[spaceEvent]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"w-[400px]"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Basic Keys"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"grid grid-cols-3 gap-2"},[["Space",isSpacePressed],["Enter",isEnterPressed],["Escape",isEscapePressed]].map((([key,isPressed])=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key,className:"p-3 rounded text-center transition-colors "+(isPressed?"bg-green-500 text-white":"bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300")},key))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Arrow Keys"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"grid grid-cols-3 gap-2 max-w-[180px] mx-auto"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"p-3 rounded text-center transition-colors "+(isUpPressed?"bg-blue-500 text-white":"bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300")},"‚Üë"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"p-3 rounded text-center transition-colors "+(isLeftPressed?"bg-blue-500 text-white":"bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300")},"‚Üê"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"p-3 rounded text-center transition-colors "+(isDownPressed?"bg-blue-500 text-white":"bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300")},"‚Üì"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"p-3 rounded text-center transition-colors "+(isRightPressed?"bg-blue-500 text-white":"bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300")},"‚Üí"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Modifier Keys"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"grid grid-cols-3 gap-2"},[["Ctrl",isCtrlPressed],["Shift",isShiftPressed],["Alt",isAltPressed]].map((([key,isPressed])=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key,className:"p-3 rounded text-center transition-colors "+(isPressed?"bg-purple-500 text-white":"bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300")},key))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",{className:"text-lg font-semibold text-slate-900 dark:text-slate-100"},"Space Key History"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"bg-slate-100 dark:bg-slate-700 rounded p-3"},history.length>0?react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"space-y-1"},history.map(((entry,index)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{key:index,className:"text-sm text-slate-600 dark:text-slate-400"},entry)))):react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"text-sm text-slate-500 dark:text-slate-400 italic text-center"},"No history yet"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{className:"text-sm text-blue-600 dark:text-blue-400"},"Press different keys to see them light up! Try the arrow keys for movement controls, modifier keys for combinations, and watch the space key's press history! üéÆ"))))}},__namedExportsOrder=["Example"];Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    // Example 1: Simple key press indicator\n    const [isSpacePressed, spaceEvent] = useKeyPress(" ");\n    const [isEnterPressed] = useKeyPress("Enter");\n    const [isEscapePressed] = useKeyPress("Escape");\n\n    // Example 2: Arrow key game controls\n    const [isUpPressed] = useKeyPress("ArrowUp");\n    const [isDownPressed] = useKeyPress("ArrowDown");\n    const [isLeftPressed] = useKeyPress("ArrowLeft");\n    const [isRightPressed] = useKeyPress("ArrowRight");\n\n    // Example 3: Key combination tracking\n    const [isCtrlPressed] = useKeyPress(e => e.key === "Control");\n    const [isShiftPressed] = useKeyPress(e => e.key === "Shift");\n    const [isAltPressed] = useKeyPress(e => e.key === "Alt");\n\n    // Example 4: Key press history\n    const [history, setHistory] = useState<string[]>([]);\n    React.useEffect(() => {\n      if (spaceEvent) {\n        const action = spaceEvent.type === "keydown" ? "pressed" : "released";\n        setHistory(prev => [`Space ${action} at ${new Date().toLocaleTimeString()}`, ...prev.slice(0, 4)]);\n      }\n    }, [spaceEvent]);\n    return <div className="w-[400px]">\n        <div className="bg-white dark:bg-slate-800 rounded-lg p-6 shadow-lg space-y-6">\n          {/* Basic Key Press Indicators */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Basic Keys\n            </h3>\n            <div className="grid grid-cols-3 gap-2">\n              {([["Space", isSpacePressed], ["Enter", isEnterPressed], ["Escape", isEscapePressed]] as const).map(([key, isPressed]) => <div key={key} className={`p-3 rounded text-center transition-colors ${isPressed ? "bg-green-500 text-white" : "bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300"}`}>\n                  {key}\n                </div>)}\n            </div>\n          </div>\n\n          {/* Arrow Key Controls */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Arrow Keys\n            </h3>\n            <div className="grid grid-cols-3 gap-2 max-w-[180px] mx-auto">\n              <div />\n              <div className={`p-3 rounded text-center transition-colors ${isUpPressed ? "bg-blue-500 text-white" : "bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300"}`}>\n                ‚Üë\n              </div>\n              <div />\n              <div className={`p-3 rounded text-center transition-colors ${isLeftPressed ? "bg-blue-500 text-white" : "bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300"}`}>\n                ‚Üê\n              </div>\n              <div className={`p-3 rounded text-center transition-colors ${isDownPressed ? "bg-blue-500 text-white" : "bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300"}`}>\n                ‚Üì\n              </div>\n              <div className={`p-3 rounded text-center transition-colors ${isRightPressed ? "bg-blue-500 text-white" : "bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300"}`}>\n                ‚Üí\n              </div>\n            </div>\n          </div>\n\n          {/* Modifier Keys */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Modifier Keys\n            </h3>\n            <div className="grid grid-cols-3 gap-2">\n              {([["Ctrl", isCtrlPressed], ["Shift", isShiftPressed], ["Alt", isAltPressed]] as const).map(([key, isPressed]) => <div key={key} className={`p-3 rounded text-center transition-colors ${isPressed ? "bg-purple-500 text-white" : "bg-slate-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300"}`}>\n                  {key}\n                </div>)}\n            </div>\n          </div>\n\n          {/* Space Key History */}\n          <div className="space-y-2">\n            <h3 className="text-lg font-semibold text-slate-900 dark:text-slate-100">\n              Space Key History\n            </h3>\n            <div className="bg-slate-100 dark:bg-slate-700 rounded p-3">\n              {history.length > 0 ? <div className="space-y-1">\n                  {history.map((entry, index) => <div key={index} className="text-sm text-slate-600 dark:text-slate-400">\n                      {entry}\n                    </div>)}\n                </div> : <div className="text-sm text-slate-500 dark:text-slate-400 italic text-center">\n                  No history yet\n                </div>}\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded">\n            <p className="text-sm text-blue-600 dark:text-blue-400">\n              Press different keys to see them light up! Try the arrow keys for\n              movement controls, modifier keys for combinations, and watch the\n              space key\'s press history! üéÆ\n            </p>\n          </div>\n        </div>\n      </div>;\n  }\n}',...Example.parameters?.docs?.source}}}},"./src/themes/shadcn/ThemeProvider.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ThemeProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const initialState={theme:"system",setTheme:()=>null},ThemeProviderContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(initialState);function ThemeProvider({children,defaultTheme="system",storageKey="shadcn-core-theme",...props}){const[theme,setTheme]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>localStorage.getItem(storageKey)||defaultTheme));(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const root=window.document.documentElement;if(root.classList.remove("light","dark"),"system"!==theme)root.classList.add(theme);else{const systemTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";root.classList.add(systemTheme)}}),[theme]);const value=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>({theme,setTheme:theme=>{localStorage.setItem(storageKey,theme),setTheme(theme)}})),[theme,storageKey,setTheme]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(ThemeProviderContext.Provider,{...props,value},children)}ThemeProvider.__docgenInfo={description:'ShadCn Theme Provider Component\n\nProvides theme context and functionality for light/dark mode in ShadCn components.\nAutomatically handles system theme preference and persists user choice.\n\n@param {Object} props - Component props\n@param {React.ReactNode} props.children - Child components to be wrapped\n@param {Theme} [props.defaultTheme="system"] - Default theme ("light", "dark", or "system")\n@param {string} [props.storageKey="core-ui-theme"] - LocalStorage key for theme persistence',methods:[],displayName:"ThemeProvider",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},defaultTheme:{required:!1,tsType:{name:"union",raw:'"dark" | "light" | "system"',elements:[{name:"literal",value:'"dark"'},{name:"literal",value:'"light"'},{name:"literal",value:'"system"'}]},description:"",defaultValue:{value:'"system"',computed:!1}},storageKey:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"shadcn-core-theme"',computed:!1}}}}}}]);